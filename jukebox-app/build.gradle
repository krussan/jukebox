plugins {
    id 'com.android.application'
    id 'com.github.triplet.play'
    id 'idea'
}

def appVersionName = jukeboxVersion
def appVersionCode = Integer.valueOf(System.getenv("GITHUB_BUILD_NUMBER") ?: project.findProperty('versionCode') as String ?: 1 as String)
def appJsonFile = project.findProperty('apiJsonFile') ?: '../ci/api.json'

android {
    namespace "se.qxx.android.jukebox"

    defaultConfig {
        applicationId "se.qxx.android.jukebox"
        compileSdk 34
        minSdkVersion 26
        targetSdkVersion 34

        // Enabling multidex support.
        multiDexEnabled true
        versionCode appVersionCode
        versionName appVersionName
        setProperty("archivesBaseName", "jukebox-$versionName")

    }

    signingConfigs {
        release {
            if (System.getenv('RELEASE_STORE_FILE') != null)
                storeFile file(System.getenv('RELEASE_STORE_FILE'))

            if (System.getenv("RELEASE_STORE_PASSWORD") != null)
                storePassword System.getenv("RELEASE_STORE_PASSWORD")

            if (System.getenv("RELEASE_KEY_ALIAS") != null)
                keyAlias System.getenv("RELEASE_KEY_ALIAS")

            if (System.getenv["RELEASE_KEY_PASSWORD"] != null)
                keyPassword System.getenv("RELEASE_KEY_PASSWORD")

            if (project.hasProperty("RELEASE_STORE_FILE"))
                storeFile file(RELEASE_STORE_FILE)

            if (project.hasProperty("RELEASE_STORE_PASSWORD"))
                storePassword RELEASE_STORE_PASSWORD

            if (project.hasProperty("RELEASE_KEY_ALIAS"))
                keyAlias RELEASE_KEY_ALIAS

            if (project.hasProperty("RELEASE_KEY_PASSWORD"))
                keyPassword RELEASE_KEY_PASSWORD

        }
    }

     buildTypes {
        debug {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules-debug.txt'
        }

        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.txt'
            signingConfig signingConfigs.release
        }

    }

    lintOptions {
        disable 'GoogleAppIndexingWarning'
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_17
        targetCompatibility JavaVersion.VERSION_17
    }

    configurations {
        implementation.exclude module: 'protobuf-lite'
    }
}

play {
    track = "internal"
    serviceAccountCredentials = file(appJsonFile)
}

dependencies {
    implementation project(':se.qxx.jukebox.domain')
    implementation 'org.apache.commons:commons-lang3:3.12.0'
    implementation 'com.google.protobuf:protobuf-java:3.21.12'
    implementation 'se.qxx.android.tools:android-tools:1.0.2'
    implementation 'com.google.android.gms:play-services-cast-framework:21.2.0'

    implementation 'org.apache.commons:commons-collections4:4.4'

    implementation "androidx.core:core:1.9.0"
    implementation "androidx.annotation:annotation:1.5.0"
    implementation "androidx.appcompat:appcompat:1.5.1"
    implementation "androidx.mediarouter:mediarouter:1.3.1"
    implementation "androidx.preference:preference:1.2.0"
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:2.5.1"
    implementation "androidx.swiperefreshlayout:swiperefreshlayout:1.1.0"

    implementation 'com.google.android.material:material:1.7.0'

    implementation "io.grpc:grpc-okhttp:${grpcVersion}"
    implementation "io.grpc:grpc-protobuf:${grpcVersion}"
    implementation "io.grpc:grpc-stub:${grpcVersion}"

    // test
    testImplementation 'junit:junit:4.13.2'
    testImplementation 'org.mockito:mockito-core:4.10.0'

}
