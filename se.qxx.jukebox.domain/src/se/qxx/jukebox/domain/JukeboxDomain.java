// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: JukeboxDomain.proto

package se.qxx.jukebox.domain;

public final class JukeboxDomain {
  private JukeboxDomain() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
  }
  public enum Identifier
      implements com.google.protobuf.ProtocolMessageEnum {
    Filename(0, 1),
    ParentDirectory(1, 2),
    NFO(2, 3),
    ;
    
    public static final int Filename_VALUE = 1;
    public static final int ParentDirectory_VALUE = 2;
    public static final int NFO_VALUE = 3;
    
    
    public final int getNumber() { return value; }
    
    public static Identifier valueOf(int value) {
      switch (value) {
        case 1: return Filename;
        case 2: return ParentDirectory;
        case 3: return NFO;
        default: return null;
      }
    }
    
    public static com.google.protobuf.Internal.EnumLiteMap<Identifier>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static com.google.protobuf.Internal.EnumLiteMap<Identifier>
        internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<Identifier>() {
            public Identifier findValueByNumber(int number) {
              return Identifier.valueOf(number);
            }
          };
    
    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(index);
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return se.qxx.jukebox.domain.JukeboxDomain.getDescriptor().getEnumTypes().get(0);
    }
    
    private static final Identifier[] VALUES = {
      Filename, ParentDirectory, NFO, 
    };
    
    public static Identifier valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }
    
    private final int index;
    private final int value;
    
    private Identifier(int index, int value) {
      this.index = index;
      this.value = value;
    }
    
    // @@protoc_insertion_point(enum_scope:se.qxx.jukebox.domain.Identifier)
  }
  
  public enum Rating
      implements com.google.protobuf.ProtocolMessageEnum {
    NotMatched(0, 1),
    ProbableMatch(1, 2),
    PositiveMatch(2, 3),
    ExactMatch(3, 4),
    SubsExist(4, 5),
    ;
    
    public static final int NotMatched_VALUE = 1;
    public static final int ProbableMatch_VALUE = 2;
    public static final int PositiveMatch_VALUE = 3;
    public static final int ExactMatch_VALUE = 4;
    public static final int SubsExist_VALUE = 5;
    
    
    public final int getNumber() { return value; }
    
    public static Rating valueOf(int value) {
      switch (value) {
        case 1: return NotMatched;
        case 2: return ProbableMatch;
        case 3: return PositiveMatch;
        case 4: return ExactMatch;
        case 5: return SubsExist;
        default: return null;
      }
    }
    
    public static com.google.protobuf.Internal.EnumLiteMap<Rating>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static com.google.protobuf.Internal.EnumLiteMap<Rating>
        internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<Rating>() {
            public Rating findValueByNumber(int number) {
              return Rating.valueOf(number);
            }
          };
    
    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(index);
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return se.qxx.jukebox.domain.JukeboxDomain.getDescriptor().getEnumTypes().get(1);
    }
    
    private static final Rating[] VALUES = {
      NotMatched, ProbableMatch, PositiveMatch, ExactMatch, SubsExist, 
    };
    
    public static Rating valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }
    
    private final int index;
    private final int value;
    
    private Rating(int index, int value) {
      this.index = index;
      this.value = value;
    }
    
    // @@protoc_insertion_point(enum_scope:se.qxx.jukebox.domain.Rating)
  }
  
  public interface MovieOrBuilder
      extends com.google.protobuf.MessageOrBuilder {
    
    // required int32 ID = 1;
    boolean hasID();
    int getID();
    
    // repeated .se.qxx.jukebox.domain.Media media = 2;
    java.util.List<se.qxx.jukebox.domain.JukeboxDomain.Media> 
        getMediaList();
    se.qxx.jukebox.domain.JukeboxDomain.Media getMedia(int index);
    int getMediaCount();
    java.util.List<? extends se.qxx.jukebox.domain.JukeboxDomain.MediaOrBuilder> 
        getMediaOrBuilderList();
    se.qxx.jukebox.domain.JukeboxDomain.MediaOrBuilder getMediaOrBuilder(
        int index);
    
    // optional string title = 3;
    boolean hasTitle();
    String getTitle();
    
    // optional int32 year = 4;
    boolean hasYear();
    int getYear();
    
    // optional string type = 5;
    boolean hasType();
    String getType();
    
    // optional string format = 6;
    boolean hasFormat();
    String getFormat();
    
    // optional string sound = 7;
    boolean hasSound();
    String getSound();
    
    // optional string language = 8;
    boolean hasLanguage();
    String getLanguage();
    
    // optional string groupName = 9;
    boolean hasGroupName();
    String getGroupName();
    
    // optional string imdb_url = 10;
    boolean hasImdbUrl();
    String getImdbUrl();
    
    // optional string imdb_id = 11;
    boolean hasImdbId();
    String getImdbId();
    
    // optional int32 duration = 12;
    boolean hasDuration();
    int getDuration();
    
    // optional string rating = 13;
    boolean hasRating();
    String getRating();
    
    // optional string director = 14;
    boolean hasDirector();
    String getDirector();
    
    // optional string story = 15;
    boolean hasStory();
    String getStory();
    
    // optional bytes image = 16;
    boolean hasImage();
    com.google.protobuf.ByteString getImage();
    
    // repeated string genre = 17;
    java.util.List<String> getGenreList();
    int getGenreCount();
    String getGenre(int index);
    
    // optional .se.qxx.jukebox.domain.Identifier identifier = 18;
    boolean hasIdentifier();
    se.qxx.jukebox.domain.JukeboxDomain.Identifier getIdentifier();
    
    // optional int32 identifierRating = 19;
    boolean hasIdentifierRating();
    int getIdentifierRating();
    
    // optional bool watched = 20;
    boolean hasWatched();
    boolean getWatched();
    
    // optional bool isTvEpisode = 21;
    boolean hasIsTvEpisode();
    boolean getIsTvEpisode();
    
    // optional int32 season = 22;
    boolean hasSeason();
    int getSeason();
    
    // optional int32 episode = 23;
    boolean hasEpisode();
    int getEpisode();
    
    // optional int64 firstAirDate = 24;
    boolean hasFirstAirDate();
    long getFirstAirDate();
    
    // optional string episodeTitle = 25;
    boolean hasEpisodeTitle();
    String getEpisodeTitle();
  }
  public static final class Movie extends
      com.google.protobuf.GeneratedMessage
      implements MovieOrBuilder {
    // Use Movie.newBuilder() to construct.
    private Movie(Builder builder) {
      super(builder);
    }
    private Movie(boolean noInit) {}
    
    private static final Movie defaultInstance;
    public static Movie getDefaultInstance() {
      return defaultInstance;
    }
    
    public Movie getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return se.qxx.jukebox.domain.JukeboxDomain.internal_static_se_qxx_jukebox_domain_Movie_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return se.qxx.jukebox.domain.JukeboxDomain.internal_static_se_qxx_jukebox_domain_Movie_fieldAccessorTable;
    }
    
    private int bitField0_;
    // required int32 ID = 1;
    public static final int ID_FIELD_NUMBER = 1;
    private int iD_;
    public boolean hasID() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    public int getID() {
      return iD_;
    }
    
    // repeated .se.qxx.jukebox.domain.Media media = 2;
    public static final int MEDIA_FIELD_NUMBER = 2;
    private java.util.List<se.qxx.jukebox.domain.JukeboxDomain.Media> media_;
    public java.util.List<se.qxx.jukebox.domain.JukeboxDomain.Media> getMediaList() {
      return media_;
    }
    public java.util.List<? extends se.qxx.jukebox.domain.JukeboxDomain.MediaOrBuilder> 
        getMediaOrBuilderList() {
      return media_;
    }
    public int getMediaCount() {
      return media_.size();
    }
    public se.qxx.jukebox.domain.JukeboxDomain.Media getMedia(int index) {
      return media_.get(index);
    }
    public se.qxx.jukebox.domain.JukeboxDomain.MediaOrBuilder getMediaOrBuilder(
        int index) {
      return media_.get(index);
    }
    
    // optional string title = 3;
    public static final int TITLE_FIELD_NUMBER = 3;
    private java.lang.Object title_;
    public boolean hasTitle() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    public String getTitle() {
      java.lang.Object ref = title_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        if (com.google.protobuf.Internal.isValidUtf8(bs)) {
          title_ = s;
        }
        return s;
      }
    }
    private com.google.protobuf.ByteString getTitleBytes() {
      java.lang.Object ref = title_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8((String) ref);
        title_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    
    // optional int32 year = 4;
    public static final int YEAR_FIELD_NUMBER = 4;
    private int year_;
    public boolean hasYear() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    public int getYear() {
      return year_;
    }
    
    // optional string type = 5;
    public static final int TYPE_FIELD_NUMBER = 5;
    private java.lang.Object type_;
    public boolean hasType() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    public String getType() {
      java.lang.Object ref = type_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        if (com.google.protobuf.Internal.isValidUtf8(bs)) {
          type_ = s;
        }
        return s;
      }
    }
    private com.google.protobuf.ByteString getTypeBytes() {
      java.lang.Object ref = type_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8((String) ref);
        type_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    
    // optional string format = 6;
    public static final int FORMAT_FIELD_NUMBER = 6;
    private java.lang.Object format_;
    public boolean hasFormat() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    public String getFormat() {
      java.lang.Object ref = format_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        if (com.google.protobuf.Internal.isValidUtf8(bs)) {
          format_ = s;
        }
        return s;
      }
    }
    private com.google.protobuf.ByteString getFormatBytes() {
      java.lang.Object ref = format_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8((String) ref);
        format_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    
    // optional string sound = 7;
    public static final int SOUND_FIELD_NUMBER = 7;
    private java.lang.Object sound_;
    public boolean hasSound() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    public String getSound() {
      java.lang.Object ref = sound_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        if (com.google.protobuf.Internal.isValidUtf8(bs)) {
          sound_ = s;
        }
        return s;
      }
    }
    private com.google.protobuf.ByteString getSoundBytes() {
      java.lang.Object ref = sound_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8((String) ref);
        sound_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    
    // optional string language = 8;
    public static final int LANGUAGE_FIELD_NUMBER = 8;
    private java.lang.Object language_;
    public boolean hasLanguage() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    public String getLanguage() {
      java.lang.Object ref = language_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        if (com.google.protobuf.Internal.isValidUtf8(bs)) {
          language_ = s;
        }
        return s;
      }
    }
    private com.google.protobuf.ByteString getLanguageBytes() {
      java.lang.Object ref = language_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8((String) ref);
        language_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    
    // optional string groupName = 9;
    public static final int GROUPNAME_FIELD_NUMBER = 9;
    private java.lang.Object groupName_;
    public boolean hasGroupName() {
      return ((bitField0_ & 0x00000080) == 0x00000080);
    }
    public String getGroupName() {
      java.lang.Object ref = groupName_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        if (com.google.protobuf.Internal.isValidUtf8(bs)) {
          groupName_ = s;
        }
        return s;
      }
    }
    private com.google.protobuf.ByteString getGroupNameBytes() {
      java.lang.Object ref = groupName_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8((String) ref);
        groupName_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    
    // optional string imdb_url = 10;
    public static final int IMDB_URL_FIELD_NUMBER = 10;
    private java.lang.Object imdbUrl_;
    public boolean hasImdbUrl() {
      return ((bitField0_ & 0x00000100) == 0x00000100);
    }
    public String getImdbUrl() {
      java.lang.Object ref = imdbUrl_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        if (com.google.protobuf.Internal.isValidUtf8(bs)) {
          imdbUrl_ = s;
        }
        return s;
      }
    }
    private com.google.protobuf.ByteString getImdbUrlBytes() {
      java.lang.Object ref = imdbUrl_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8((String) ref);
        imdbUrl_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    
    // optional string imdb_id = 11;
    public static final int IMDB_ID_FIELD_NUMBER = 11;
    private java.lang.Object imdbId_;
    public boolean hasImdbId() {
      return ((bitField0_ & 0x00000200) == 0x00000200);
    }
    public String getImdbId() {
      java.lang.Object ref = imdbId_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        if (com.google.protobuf.Internal.isValidUtf8(bs)) {
          imdbId_ = s;
        }
        return s;
      }
    }
    private com.google.protobuf.ByteString getImdbIdBytes() {
      java.lang.Object ref = imdbId_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8((String) ref);
        imdbId_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    
    // optional int32 duration = 12;
    public static final int DURATION_FIELD_NUMBER = 12;
    private int duration_;
    public boolean hasDuration() {
      return ((bitField0_ & 0x00000400) == 0x00000400);
    }
    public int getDuration() {
      return duration_;
    }
    
    // optional string rating = 13;
    public static final int RATING_FIELD_NUMBER = 13;
    private java.lang.Object rating_;
    public boolean hasRating() {
      return ((bitField0_ & 0x00000800) == 0x00000800);
    }
    public String getRating() {
      java.lang.Object ref = rating_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        if (com.google.protobuf.Internal.isValidUtf8(bs)) {
          rating_ = s;
        }
        return s;
      }
    }
    private com.google.protobuf.ByteString getRatingBytes() {
      java.lang.Object ref = rating_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8((String) ref);
        rating_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    
    // optional string director = 14;
    public static final int DIRECTOR_FIELD_NUMBER = 14;
    private java.lang.Object director_;
    public boolean hasDirector() {
      return ((bitField0_ & 0x00001000) == 0x00001000);
    }
    public String getDirector() {
      java.lang.Object ref = director_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        if (com.google.protobuf.Internal.isValidUtf8(bs)) {
          director_ = s;
        }
        return s;
      }
    }
    private com.google.protobuf.ByteString getDirectorBytes() {
      java.lang.Object ref = director_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8((String) ref);
        director_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    
    // optional string story = 15;
    public static final int STORY_FIELD_NUMBER = 15;
    private java.lang.Object story_;
    public boolean hasStory() {
      return ((bitField0_ & 0x00002000) == 0x00002000);
    }
    public String getStory() {
      java.lang.Object ref = story_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        if (com.google.protobuf.Internal.isValidUtf8(bs)) {
          story_ = s;
        }
        return s;
      }
    }
    private com.google.protobuf.ByteString getStoryBytes() {
      java.lang.Object ref = story_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8((String) ref);
        story_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    
    // optional bytes image = 16;
    public static final int IMAGE_FIELD_NUMBER = 16;
    private com.google.protobuf.ByteString image_;
    public boolean hasImage() {
      return ((bitField0_ & 0x00004000) == 0x00004000);
    }
    public com.google.protobuf.ByteString getImage() {
      return image_;
    }
    
    // repeated string genre = 17;
    public static final int GENRE_FIELD_NUMBER = 17;
    private com.google.protobuf.LazyStringList genre_;
    public java.util.List<String>
        getGenreList() {
      return genre_;
    }
    public int getGenreCount() {
      return genre_.size();
    }
    public String getGenre(int index) {
      return genre_.get(index);
    }
    
    // optional .se.qxx.jukebox.domain.Identifier identifier = 18;
    public static final int IDENTIFIER_FIELD_NUMBER = 18;
    private se.qxx.jukebox.domain.JukeboxDomain.Identifier identifier_;
    public boolean hasIdentifier() {
      return ((bitField0_ & 0x00008000) == 0x00008000);
    }
    public se.qxx.jukebox.domain.JukeboxDomain.Identifier getIdentifier() {
      return identifier_;
    }
    
    // optional int32 identifierRating = 19;
    public static final int IDENTIFIERRATING_FIELD_NUMBER = 19;
    private int identifierRating_;
    public boolean hasIdentifierRating() {
      return ((bitField0_ & 0x00010000) == 0x00010000);
    }
    public int getIdentifierRating() {
      return identifierRating_;
    }
    
    // optional bool watched = 20;
    public static final int WATCHED_FIELD_NUMBER = 20;
    private boolean watched_;
    public boolean hasWatched() {
      return ((bitField0_ & 0x00020000) == 0x00020000);
    }
    public boolean getWatched() {
      return watched_;
    }
    
    // optional bool isTvEpisode = 21;
    public static final int ISTVEPISODE_FIELD_NUMBER = 21;
    private boolean isTvEpisode_;
    public boolean hasIsTvEpisode() {
      return ((bitField0_ & 0x00040000) == 0x00040000);
    }
    public boolean getIsTvEpisode() {
      return isTvEpisode_;
    }
    
    // optional int32 season = 22;
    public static final int SEASON_FIELD_NUMBER = 22;
    private int season_;
    public boolean hasSeason() {
      return ((bitField0_ & 0x00080000) == 0x00080000);
    }
    public int getSeason() {
      return season_;
    }
    
    // optional int32 episode = 23;
    public static final int EPISODE_FIELD_NUMBER = 23;
    private int episode_;
    public boolean hasEpisode() {
      return ((bitField0_ & 0x00100000) == 0x00100000);
    }
    public int getEpisode() {
      return episode_;
    }
    
    // optional int64 firstAirDate = 24;
    public static final int FIRSTAIRDATE_FIELD_NUMBER = 24;
    private long firstAirDate_;
    public boolean hasFirstAirDate() {
      return ((bitField0_ & 0x00200000) == 0x00200000);
    }
    public long getFirstAirDate() {
      return firstAirDate_;
    }
    
    // optional string episodeTitle = 25;
    public static final int EPISODETITLE_FIELD_NUMBER = 25;
    private java.lang.Object episodeTitle_;
    public boolean hasEpisodeTitle() {
      return ((bitField0_ & 0x00400000) == 0x00400000);
    }
    public String getEpisodeTitle() {
      java.lang.Object ref = episodeTitle_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        if (com.google.protobuf.Internal.isValidUtf8(bs)) {
          episodeTitle_ = s;
        }
        return s;
      }
    }
    private com.google.protobuf.ByteString getEpisodeTitleBytes() {
      java.lang.Object ref = episodeTitle_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8((String) ref);
        episodeTitle_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    
    private void initFields() {
      iD_ = 0;
      media_ = java.util.Collections.emptyList();
      title_ = "";
      year_ = 0;
      type_ = "";
      format_ = "";
      sound_ = "";
      language_ = "";
      groupName_ = "";
      imdbUrl_ = "";
      imdbId_ = "";
      duration_ = 0;
      rating_ = "";
      director_ = "";
      story_ = "";
      image_ = com.google.protobuf.ByteString.EMPTY;
      genre_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      identifier_ = se.qxx.jukebox.domain.JukeboxDomain.Identifier.Filename;
      identifierRating_ = 0;
      watched_ = false;
      isTvEpisode_ = false;
      season_ = 0;
      episode_ = 0;
      firstAirDate_ = 0L;
      episodeTitle_ = "";
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;
      
      if (!hasID()) {
        memoizedIsInitialized = 0;
        return false;
      }
      for (int i = 0; i < getMediaCount(); i++) {
        if (!getMedia(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, iD_);
      }
      for (int i = 0; i < media_.size(); i++) {
        output.writeMessage(2, media_.get(i));
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeBytes(3, getTitleBytes());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeInt32(4, year_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeBytes(5, getTypeBytes());
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeBytes(6, getFormatBytes());
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeBytes(7, getSoundBytes());
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        output.writeBytes(8, getLanguageBytes());
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        output.writeBytes(9, getGroupNameBytes());
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        output.writeBytes(10, getImdbUrlBytes());
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        output.writeBytes(11, getImdbIdBytes());
      }
      if (((bitField0_ & 0x00000400) == 0x00000400)) {
        output.writeInt32(12, duration_);
      }
      if (((bitField0_ & 0x00000800) == 0x00000800)) {
        output.writeBytes(13, getRatingBytes());
      }
      if (((bitField0_ & 0x00001000) == 0x00001000)) {
        output.writeBytes(14, getDirectorBytes());
      }
      if (((bitField0_ & 0x00002000) == 0x00002000)) {
        output.writeBytes(15, getStoryBytes());
      }
      if (((bitField0_ & 0x00004000) == 0x00004000)) {
        output.writeBytes(16, image_);
      }
      for (int i = 0; i < genre_.size(); i++) {
        output.writeBytes(17, genre_.getByteString(i));
      }
      if (((bitField0_ & 0x00008000) == 0x00008000)) {
        output.writeEnum(18, identifier_.getNumber());
      }
      if (((bitField0_ & 0x00010000) == 0x00010000)) {
        output.writeInt32(19, identifierRating_);
      }
      if (((bitField0_ & 0x00020000) == 0x00020000)) {
        output.writeBool(20, watched_);
      }
      if (((bitField0_ & 0x00040000) == 0x00040000)) {
        output.writeBool(21, isTvEpisode_);
      }
      if (((bitField0_ & 0x00080000) == 0x00080000)) {
        output.writeInt32(22, season_);
      }
      if (((bitField0_ & 0x00100000) == 0x00100000)) {
        output.writeInt32(23, episode_);
      }
      if (((bitField0_ & 0x00200000) == 0x00200000)) {
        output.writeInt64(24, firstAirDate_);
      }
      if (((bitField0_ & 0x00400000) == 0x00400000)) {
        output.writeBytes(25, getEpisodeTitleBytes());
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, iD_);
      }
      for (int i = 0; i < media_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, media_.get(i));
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(3, getTitleBytes());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(4, year_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(5, getTypeBytes());
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(6, getFormatBytes());
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(7, getSoundBytes());
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(8, getLanguageBytes());
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(9, getGroupNameBytes());
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(10, getImdbUrlBytes());
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(11, getImdbIdBytes());
      }
      if (((bitField0_ & 0x00000400) == 0x00000400)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(12, duration_);
      }
      if (((bitField0_ & 0x00000800) == 0x00000800)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(13, getRatingBytes());
      }
      if (((bitField0_ & 0x00001000) == 0x00001000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(14, getDirectorBytes());
      }
      if (((bitField0_ & 0x00002000) == 0x00002000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(15, getStoryBytes());
      }
      if (((bitField0_ & 0x00004000) == 0x00004000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(16, image_);
      }
      {
        int dataSize = 0;
        for (int i = 0; i < genre_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeBytesSizeNoTag(genre_.getByteString(i));
        }
        size += dataSize;
        size += 2 * getGenreList().size();
      }
      if (((bitField0_ & 0x00008000) == 0x00008000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(18, identifier_.getNumber());
      }
      if (((bitField0_ & 0x00010000) == 0x00010000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(19, identifierRating_);
      }
      if (((bitField0_ & 0x00020000) == 0x00020000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(20, watched_);
      }
      if (((bitField0_ & 0x00040000) == 0x00040000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(21, isTvEpisode_);
      }
      if (((bitField0_ & 0x00080000) == 0x00080000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(22, season_);
      }
      if (((bitField0_ & 0x00100000) == 0x00100000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(23, episode_);
      }
      if (((bitField0_ & 0x00200000) == 0x00200000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(24, firstAirDate_);
      }
      if (((bitField0_ & 0x00400000) == 0x00400000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(25, getEpisodeTitleBytes());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }
    
    public static se.qxx.jukebox.domain.JukeboxDomain.Movie parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static se.qxx.jukebox.domain.JukeboxDomain.Movie parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static se.qxx.jukebox.domain.JukeboxDomain.Movie parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static se.qxx.jukebox.domain.JukeboxDomain.Movie parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static se.qxx.jukebox.domain.JukeboxDomain.Movie parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static se.qxx.jukebox.domain.JukeboxDomain.Movie parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static se.qxx.jukebox.domain.JukeboxDomain.Movie parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static se.qxx.jukebox.domain.JukeboxDomain.Movie parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static se.qxx.jukebox.domain.JukeboxDomain.Movie parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static se.qxx.jukebox.domain.JukeboxDomain.Movie parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(se.qxx.jukebox.domain.JukeboxDomain.Movie prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements se.qxx.jukebox.domain.JukeboxDomain.MovieOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return se.qxx.jukebox.domain.JukeboxDomain.internal_static_se_qxx_jukebox_domain_Movie_descriptor;
      }
      
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return se.qxx.jukebox.domain.JukeboxDomain.internal_static_se_qxx_jukebox_domain_Movie_fieldAccessorTable;
      }
      
      // Construct using se.qxx.jukebox.domain.JukeboxDomain.Movie.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }
      
      private Builder(BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getMediaFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }
      
      public Builder clear() {
        super.clear();
        iD_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        if (mediaBuilder_ == null) {
          media_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
        } else {
          mediaBuilder_.clear();
        }
        title_ = "";
        bitField0_ = (bitField0_ & ~0x00000004);
        year_ = 0;
        bitField0_ = (bitField0_ & ~0x00000008);
        type_ = "";
        bitField0_ = (bitField0_ & ~0x00000010);
        format_ = "";
        bitField0_ = (bitField0_ & ~0x00000020);
        sound_ = "";
        bitField0_ = (bitField0_ & ~0x00000040);
        language_ = "";
        bitField0_ = (bitField0_ & ~0x00000080);
        groupName_ = "";
        bitField0_ = (bitField0_ & ~0x00000100);
        imdbUrl_ = "";
        bitField0_ = (bitField0_ & ~0x00000200);
        imdbId_ = "";
        bitField0_ = (bitField0_ & ~0x00000400);
        duration_ = 0;
        bitField0_ = (bitField0_ & ~0x00000800);
        rating_ = "";
        bitField0_ = (bitField0_ & ~0x00001000);
        director_ = "";
        bitField0_ = (bitField0_ & ~0x00002000);
        story_ = "";
        bitField0_ = (bitField0_ & ~0x00004000);
        image_ = com.google.protobuf.ByteString.EMPTY;
        bitField0_ = (bitField0_ & ~0x00008000);
        genre_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00010000);
        identifier_ = se.qxx.jukebox.domain.JukeboxDomain.Identifier.Filename;
        bitField0_ = (bitField0_ & ~0x00020000);
        identifierRating_ = 0;
        bitField0_ = (bitField0_ & ~0x00040000);
        watched_ = false;
        bitField0_ = (bitField0_ & ~0x00080000);
        isTvEpisode_ = false;
        bitField0_ = (bitField0_ & ~0x00100000);
        season_ = 0;
        bitField0_ = (bitField0_ & ~0x00200000);
        episode_ = 0;
        bitField0_ = (bitField0_ & ~0x00400000);
        firstAirDate_ = 0L;
        bitField0_ = (bitField0_ & ~0x00800000);
        episodeTitle_ = "";
        bitField0_ = (bitField0_ & ~0x01000000);
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return se.qxx.jukebox.domain.JukeboxDomain.Movie.getDescriptor();
      }
      
      public se.qxx.jukebox.domain.JukeboxDomain.Movie getDefaultInstanceForType() {
        return se.qxx.jukebox.domain.JukeboxDomain.Movie.getDefaultInstance();
      }
      
      public se.qxx.jukebox.domain.JukeboxDomain.Movie build() {
        se.qxx.jukebox.domain.JukeboxDomain.Movie result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }
      
      private se.qxx.jukebox.domain.JukeboxDomain.Movie buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        se.qxx.jukebox.domain.JukeboxDomain.Movie result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return result;
      }
      
      public se.qxx.jukebox.domain.JukeboxDomain.Movie buildPartial() {
        se.qxx.jukebox.domain.JukeboxDomain.Movie result = new se.qxx.jukebox.domain.JukeboxDomain.Movie(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.iD_ = iD_;
        if (mediaBuilder_ == null) {
          if (((bitField0_ & 0x00000002) == 0x00000002)) {
            media_ = java.util.Collections.unmodifiableList(media_);
            bitField0_ = (bitField0_ & ~0x00000002);
          }
          result.media_ = media_;
        } else {
          result.media_ = mediaBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000002;
        }
        result.title_ = title_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000004;
        }
        result.year_ = year_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000008;
        }
        result.type_ = type_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000010;
        }
        result.format_ = format_;
        if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
          to_bitField0_ |= 0x00000020;
        }
        result.sound_ = sound_;
        if (((from_bitField0_ & 0x00000080) == 0x00000080)) {
          to_bitField0_ |= 0x00000040;
        }
        result.language_ = language_;
        if (((from_bitField0_ & 0x00000100) == 0x00000100)) {
          to_bitField0_ |= 0x00000080;
        }
        result.groupName_ = groupName_;
        if (((from_bitField0_ & 0x00000200) == 0x00000200)) {
          to_bitField0_ |= 0x00000100;
        }
        result.imdbUrl_ = imdbUrl_;
        if (((from_bitField0_ & 0x00000400) == 0x00000400)) {
          to_bitField0_ |= 0x00000200;
        }
        result.imdbId_ = imdbId_;
        if (((from_bitField0_ & 0x00000800) == 0x00000800)) {
          to_bitField0_ |= 0x00000400;
        }
        result.duration_ = duration_;
        if (((from_bitField0_ & 0x00001000) == 0x00001000)) {
          to_bitField0_ |= 0x00000800;
        }
        result.rating_ = rating_;
        if (((from_bitField0_ & 0x00002000) == 0x00002000)) {
          to_bitField0_ |= 0x00001000;
        }
        result.director_ = director_;
        if (((from_bitField0_ & 0x00004000) == 0x00004000)) {
          to_bitField0_ |= 0x00002000;
        }
        result.story_ = story_;
        if (((from_bitField0_ & 0x00008000) == 0x00008000)) {
          to_bitField0_ |= 0x00004000;
        }
        result.image_ = image_;
        if (((bitField0_ & 0x00010000) == 0x00010000)) {
          genre_ = new com.google.protobuf.UnmodifiableLazyStringList(
              genre_);
          bitField0_ = (bitField0_ & ~0x00010000);
        }
        result.genre_ = genre_;
        if (((from_bitField0_ & 0x00020000) == 0x00020000)) {
          to_bitField0_ |= 0x00008000;
        }
        result.identifier_ = identifier_;
        if (((from_bitField0_ & 0x00040000) == 0x00040000)) {
          to_bitField0_ |= 0x00010000;
        }
        result.identifierRating_ = identifierRating_;
        if (((from_bitField0_ & 0x00080000) == 0x00080000)) {
          to_bitField0_ |= 0x00020000;
        }
        result.watched_ = watched_;
        if (((from_bitField0_ & 0x00100000) == 0x00100000)) {
          to_bitField0_ |= 0x00040000;
        }
        result.isTvEpisode_ = isTvEpisode_;
        if (((from_bitField0_ & 0x00200000) == 0x00200000)) {
          to_bitField0_ |= 0x00080000;
        }
        result.season_ = season_;
        if (((from_bitField0_ & 0x00400000) == 0x00400000)) {
          to_bitField0_ |= 0x00100000;
        }
        result.episode_ = episode_;
        if (((from_bitField0_ & 0x00800000) == 0x00800000)) {
          to_bitField0_ |= 0x00200000;
        }
        result.firstAirDate_ = firstAirDate_;
        if (((from_bitField0_ & 0x01000000) == 0x01000000)) {
          to_bitField0_ |= 0x00400000;
        }
        result.episodeTitle_ = episodeTitle_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof se.qxx.jukebox.domain.JukeboxDomain.Movie) {
          return mergeFrom((se.qxx.jukebox.domain.JukeboxDomain.Movie)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(se.qxx.jukebox.domain.JukeboxDomain.Movie other) {
        if (other == se.qxx.jukebox.domain.JukeboxDomain.Movie.getDefaultInstance()) return this;
        if (other.hasID()) {
          setID(other.getID());
        }
        if (mediaBuilder_ == null) {
          if (!other.media_.isEmpty()) {
            if (media_.isEmpty()) {
              media_ = other.media_;
              bitField0_ = (bitField0_ & ~0x00000002);
            } else {
              ensureMediaIsMutable();
              media_.addAll(other.media_);
            }
            onChanged();
          }
        } else {
          if (!other.media_.isEmpty()) {
            if (mediaBuilder_.isEmpty()) {
              mediaBuilder_.dispose();
              mediaBuilder_ = null;
              media_ = other.media_;
              bitField0_ = (bitField0_ & ~0x00000002);
              mediaBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getMediaFieldBuilder() : null;
            } else {
              mediaBuilder_.addAllMessages(other.media_);
            }
          }
        }
        if (other.hasTitle()) {
          setTitle(other.getTitle());
        }
        if (other.hasYear()) {
          setYear(other.getYear());
        }
        if (other.hasType()) {
          setType(other.getType());
        }
        if (other.hasFormat()) {
          setFormat(other.getFormat());
        }
        if (other.hasSound()) {
          setSound(other.getSound());
        }
        if (other.hasLanguage()) {
          setLanguage(other.getLanguage());
        }
        if (other.hasGroupName()) {
          setGroupName(other.getGroupName());
        }
        if (other.hasImdbUrl()) {
          setImdbUrl(other.getImdbUrl());
        }
        if (other.hasImdbId()) {
          setImdbId(other.getImdbId());
        }
        if (other.hasDuration()) {
          setDuration(other.getDuration());
        }
        if (other.hasRating()) {
          setRating(other.getRating());
        }
        if (other.hasDirector()) {
          setDirector(other.getDirector());
        }
        if (other.hasStory()) {
          setStory(other.getStory());
        }
        if (other.hasImage()) {
          setImage(other.getImage());
        }
        if (!other.genre_.isEmpty()) {
          if (genre_.isEmpty()) {
            genre_ = other.genre_;
            bitField0_ = (bitField0_ & ~0x00010000);
          } else {
            ensureGenreIsMutable();
            genre_.addAll(other.genre_);
          }
          onChanged();
        }
        if (other.hasIdentifier()) {
          setIdentifier(other.getIdentifier());
        }
        if (other.hasIdentifierRating()) {
          setIdentifierRating(other.getIdentifierRating());
        }
        if (other.hasWatched()) {
          setWatched(other.getWatched());
        }
        if (other.hasIsTvEpisode()) {
          setIsTvEpisode(other.getIsTvEpisode());
        }
        if (other.hasSeason()) {
          setSeason(other.getSeason());
        }
        if (other.hasEpisode()) {
          setEpisode(other.getEpisode());
        }
        if (other.hasFirstAirDate()) {
          setFirstAirDate(other.getFirstAirDate());
        }
        if (other.hasEpisodeTitle()) {
          setEpisodeTitle(other.getEpisodeTitle());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public final boolean isInitialized() {
        if (!hasID()) {
          
          return false;
        }
        for (int i = 0; i < getMediaCount(); i++) {
          if (!getMedia(i).isInitialized()) {
            
            return false;
          }
        }
        return true;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              onChanged();
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                onChanged();
                return this;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              iD_ = input.readInt32();
              break;
            }
            case 18: {
              se.qxx.jukebox.domain.JukeboxDomain.Media.Builder subBuilder = se.qxx.jukebox.domain.JukeboxDomain.Media.newBuilder();
              input.readMessage(subBuilder, extensionRegistry);
              addMedia(subBuilder.buildPartial());
              break;
            }
            case 26: {
              bitField0_ |= 0x00000004;
              title_ = input.readBytes();
              break;
            }
            case 32: {
              bitField0_ |= 0x00000008;
              year_ = input.readInt32();
              break;
            }
            case 42: {
              bitField0_ |= 0x00000010;
              type_ = input.readBytes();
              break;
            }
            case 50: {
              bitField0_ |= 0x00000020;
              format_ = input.readBytes();
              break;
            }
            case 58: {
              bitField0_ |= 0x00000040;
              sound_ = input.readBytes();
              break;
            }
            case 66: {
              bitField0_ |= 0x00000080;
              language_ = input.readBytes();
              break;
            }
            case 74: {
              bitField0_ |= 0x00000100;
              groupName_ = input.readBytes();
              break;
            }
            case 82: {
              bitField0_ |= 0x00000200;
              imdbUrl_ = input.readBytes();
              break;
            }
            case 90: {
              bitField0_ |= 0x00000400;
              imdbId_ = input.readBytes();
              break;
            }
            case 96: {
              bitField0_ |= 0x00000800;
              duration_ = input.readInt32();
              break;
            }
            case 106: {
              bitField0_ |= 0x00001000;
              rating_ = input.readBytes();
              break;
            }
            case 114: {
              bitField0_ |= 0x00002000;
              director_ = input.readBytes();
              break;
            }
            case 122: {
              bitField0_ |= 0x00004000;
              story_ = input.readBytes();
              break;
            }
            case 130: {
              bitField0_ |= 0x00008000;
              image_ = input.readBytes();
              break;
            }
            case 138: {
              ensureGenreIsMutable();
              genre_.add(input.readBytes());
              break;
            }
            case 144: {
              int rawValue = input.readEnum();
              se.qxx.jukebox.domain.JukeboxDomain.Identifier value = se.qxx.jukebox.domain.JukeboxDomain.Identifier.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(18, rawValue);
              } else {
                bitField0_ |= 0x00020000;
                identifier_ = value;
              }
              break;
            }
            case 152: {
              bitField0_ |= 0x00040000;
              identifierRating_ = input.readInt32();
              break;
            }
            case 160: {
              bitField0_ |= 0x00080000;
              watched_ = input.readBool();
              break;
            }
            case 168: {
              bitField0_ |= 0x00100000;
              isTvEpisode_ = input.readBool();
              break;
            }
            case 176: {
              bitField0_ |= 0x00200000;
              season_ = input.readInt32();
              break;
            }
            case 184: {
              bitField0_ |= 0x00400000;
              episode_ = input.readInt32();
              break;
            }
            case 192: {
              bitField0_ |= 0x00800000;
              firstAirDate_ = input.readInt64();
              break;
            }
            case 202: {
              bitField0_ |= 0x01000000;
              episodeTitle_ = input.readBytes();
              break;
            }
          }
        }
      }
      
      private int bitField0_;
      
      // required int32 ID = 1;
      private int iD_ ;
      public boolean hasID() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      public int getID() {
        return iD_;
      }
      public Builder setID(int value) {
        bitField0_ |= 0x00000001;
        iD_ = value;
        onChanged();
        return this;
      }
      public Builder clearID() {
        bitField0_ = (bitField0_ & ~0x00000001);
        iD_ = 0;
        onChanged();
        return this;
      }
      
      // repeated .se.qxx.jukebox.domain.Media media = 2;
      private java.util.List<se.qxx.jukebox.domain.JukeboxDomain.Media> media_ =
        java.util.Collections.emptyList();
      private void ensureMediaIsMutable() {
        if (!((bitField0_ & 0x00000002) == 0x00000002)) {
          media_ = new java.util.ArrayList<se.qxx.jukebox.domain.JukeboxDomain.Media>(media_);
          bitField0_ |= 0x00000002;
         }
      }
      
      private com.google.protobuf.RepeatedFieldBuilder<
          se.qxx.jukebox.domain.JukeboxDomain.Media, se.qxx.jukebox.domain.JukeboxDomain.Media.Builder, se.qxx.jukebox.domain.JukeboxDomain.MediaOrBuilder> mediaBuilder_;
      
      public java.util.List<se.qxx.jukebox.domain.JukeboxDomain.Media> getMediaList() {
        if (mediaBuilder_ == null) {
          return java.util.Collections.unmodifiableList(media_);
        } else {
          return mediaBuilder_.getMessageList();
        }
      }
      public int getMediaCount() {
        if (mediaBuilder_ == null) {
          return media_.size();
        } else {
          return mediaBuilder_.getCount();
        }
      }
      public se.qxx.jukebox.domain.JukeboxDomain.Media getMedia(int index) {
        if (mediaBuilder_ == null) {
          return media_.get(index);
        } else {
          return mediaBuilder_.getMessage(index);
        }
      }
      public Builder setMedia(
          int index, se.qxx.jukebox.domain.JukeboxDomain.Media value) {
        if (mediaBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureMediaIsMutable();
          media_.set(index, value);
          onChanged();
        } else {
          mediaBuilder_.setMessage(index, value);
        }
        return this;
      }
      public Builder setMedia(
          int index, se.qxx.jukebox.domain.JukeboxDomain.Media.Builder builderForValue) {
        if (mediaBuilder_ == null) {
          ensureMediaIsMutable();
          media_.set(index, builderForValue.build());
          onChanged();
        } else {
          mediaBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      public Builder addMedia(se.qxx.jukebox.domain.JukeboxDomain.Media value) {
        if (mediaBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureMediaIsMutable();
          media_.add(value);
          onChanged();
        } else {
          mediaBuilder_.addMessage(value);
        }
        return this;
      }
      public Builder addMedia(
          int index, se.qxx.jukebox.domain.JukeboxDomain.Media value) {
        if (mediaBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureMediaIsMutable();
          media_.add(index, value);
          onChanged();
        } else {
          mediaBuilder_.addMessage(index, value);
        }
        return this;
      }
      public Builder addMedia(
          se.qxx.jukebox.domain.JukeboxDomain.Media.Builder builderForValue) {
        if (mediaBuilder_ == null) {
          ensureMediaIsMutable();
          media_.add(builderForValue.build());
          onChanged();
        } else {
          mediaBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      public Builder addMedia(
          int index, se.qxx.jukebox.domain.JukeboxDomain.Media.Builder builderForValue) {
        if (mediaBuilder_ == null) {
          ensureMediaIsMutable();
          media_.add(index, builderForValue.build());
          onChanged();
        } else {
          mediaBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      public Builder addAllMedia(
          java.lang.Iterable<? extends se.qxx.jukebox.domain.JukeboxDomain.Media> values) {
        if (mediaBuilder_ == null) {
          ensureMediaIsMutable();
          super.addAll(values, media_);
          onChanged();
        } else {
          mediaBuilder_.addAllMessages(values);
        }
        return this;
      }
      public Builder clearMedia() {
        if (mediaBuilder_ == null) {
          media_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
          onChanged();
        } else {
          mediaBuilder_.clear();
        }
        return this;
      }
      public Builder removeMedia(int index) {
        if (mediaBuilder_ == null) {
          ensureMediaIsMutable();
          media_.remove(index);
          onChanged();
        } else {
          mediaBuilder_.remove(index);
        }
        return this;
      }
      public se.qxx.jukebox.domain.JukeboxDomain.Media.Builder getMediaBuilder(
          int index) {
        return getMediaFieldBuilder().getBuilder(index);
      }
      public se.qxx.jukebox.domain.JukeboxDomain.MediaOrBuilder getMediaOrBuilder(
          int index) {
        if (mediaBuilder_ == null) {
          return media_.get(index);  } else {
          return mediaBuilder_.getMessageOrBuilder(index);
        }
      }
      public java.util.List<? extends se.qxx.jukebox.domain.JukeboxDomain.MediaOrBuilder> 
           getMediaOrBuilderList() {
        if (mediaBuilder_ != null) {
          return mediaBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(media_);
        }
      }
      public se.qxx.jukebox.domain.JukeboxDomain.Media.Builder addMediaBuilder() {
        return getMediaFieldBuilder().addBuilder(
            se.qxx.jukebox.domain.JukeboxDomain.Media.getDefaultInstance());
      }
      public se.qxx.jukebox.domain.JukeboxDomain.Media.Builder addMediaBuilder(
          int index) {
        return getMediaFieldBuilder().addBuilder(
            index, se.qxx.jukebox.domain.JukeboxDomain.Media.getDefaultInstance());
      }
      public java.util.List<se.qxx.jukebox.domain.JukeboxDomain.Media.Builder> 
           getMediaBuilderList() {
        return getMediaFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          se.qxx.jukebox.domain.JukeboxDomain.Media, se.qxx.jukebox.domain.JukeboxDomain.Media.Builder, se.qxx.jukebox.domain.JukeboxDomain.MediaOrBuilder> 
          getMediaFieldBuilder() {
        if (mediaBuilder_ == null) {
          mediaBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              se.qxx.jukebox.domain.JukeboxDomain.Media, se.qxx.jukebox.domain.JukeboxDomain.Media.Builder, se.qxx.jukebox.domain.JukeboxDomain.MediaOrBuilder>(
                  media_,
                  ((bitField0_ & 0x00000002) == 0x00000002),
                  getParentForChildren(),
                  isClean());
          media_ = null;
        }
        return mediaBuilder_;
      }
      
      // optional string title = 3;
      private java.lang.Object title_ = "";
      public boolean hasTitle() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      public String getTitle() {
        java.lang.Object ref = title_;
        if (!(ref instanceof String)) {
          String s = ((com.google.protobuf.ByteString) ref).toStringUtf8();
          title_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      public Builder setTitle(String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
        title_ = value;
        onChanged();
        return this;
      }
      public Builder clearTitle() {
        bitField0_ = (bitField0_ & ~0x00000004);
        title_ = getDefaultInstance().getTitle();
        onChanged();
        return this;
      }
      void setTitle(com.google.protobuf.ByteString value) {
        bitField0_ |= 0x00000004;
        title_ = value;
        onChanged();
      }
      
      // optional int32 year = 4;
      private int year_ ;
      public boolean hasYear() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      public int getYear() {
        return year_;
      }
      public Builder setYear(int value) {
        bitField0_ |= 0x00000008;
        year_ = value;
        onChanged();
        return this;
      }
      public Builder clearYear() {
        bitField0_ = (bitField0_ & ~0x00000008);
        year_ = 0;
        onChanged();
        return this;
      }
      
      // optional string type = 5;
      private java.lang.Object type_ = "";
      public boolean hasType() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      public String getType() {
        java.lang.Object ref = type_;
        if (!(ref instanceof String)) {
          String s = ((com.google.protobuf.ByteString) ref).toStringUtf8();
          type_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      public Builder setType(String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000010;
        type_ = value;
        onChanged();
        return this;
      }
      public Builder clearType() {
        bitField0_ = (bitField0_ & ~0x00000010);
        type_ = getDefaultInstance().getType();
        onChanged();
        return this;
      }
      void setType(com.google.protobuf.ByteString value) {
        bitField0_ |= 0x00000010;
        type_ = value;
        onChanged();
      }
      
      // optional string format = 6;
      private java.lang.Object format_ = "";
      public boolean hasFormat() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      public String getFormat() {
        java.lang.Object ref = format_;
        if (!(ref instanceof String)) {
          String s = ((com.google.protobuf.ByteString) ref).toStringUtf8();
          format_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      public Builder setFormat(String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000020;
        format_ = value;
        onChanged();
        return this;
      }
      public Builder clearFormat() {
        bitField0_ = (bitField0_ & ~0x00000020);
        format_ = getDefaultInstance().getFormat();
        onChanged();
        return this;
      }
      void setFormat(com.google.protobuf.ByteString value) {
        bitField0_ |= 0x00000020;
        format_ = value;
        onChanged();
      }
      
      // optional string sound = 7;
      private java.lang.Object sound_ = "";
      public boolean hasSound() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      public String getSound() {
        java.lang.Object ref = sound_;
        if (!(ref instanceof String)) {
          String s = ((com.google.protobuf.ByteString) ref).toStringUtf8();
          sound_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      public Builder setSound(String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000040;
        sound_ = value;
        onChanged();
        return this;
      }
      public Builder clearSound() {
        bitField0_ = (bitField0_ & ~0x00000040);
        sound_ = getDefaultInstance().getSound();
        onChanged();
        return this;
      }
      void setSound(com.google.protobuf.ByteString value) {
        bitField0_ |= 0x00000040;
        sound_ = value;
        onChanged();
      }
      
      // optional string language = 8;
      private java.lang.Object language_ = "";
      public boolean hasLanguage() {
        return ((bitField0_ & 0x00000080) == 0x00000080);
      }
      public String getLanguage() {
        java.lang.Object ref = language_;
        if (!(ref instanceof String)) {
          String s = ((com.google.protobuf.ByteString) ref).toStringUtf8();
          language_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      public Builder setLanguage(String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000080;
        language_ = value;
        onChanged();
        return this;
      }
      public Builder clearLanguage() {
        bitField0_ = (bitField0_ & ~0x00000080);
        language_ = getDefaultInstance().getLanguage();
        onChanged();
        return this;
      }
      void setLanguage(com.google.protobuf.ByteString value) {
        bitField0_ |= 0x00000080;
        language_ = value;
        onChanged();
      }
      
      // optional string groupName = 9;
      private java.lang.Object groupName_ = "";
      public boolean hasGroupName() {
        return ((bitField0_ & 0x00000100) == 0x00000100);
      }
      public String getGroupName() {
        java.lang.Object ref = groupName_;
        if (!(ref instanceof String)) {
          String s = ((com.google.protobuf.ByteString) ref).toStringUtf8();
          groupName_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      public Builder setGroupName(String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000100;
        groupName_ = value;
        onChanged();
        return this;
      }
      public Builder clearGroupName() {
        bitField0_ = (bitField0_ & ~0x00000100);
        groupName_ = getDefaultInstance().getGroupName();
        onChanged();
        return this;
      }
      void setGroupName(com.google.protobuf.ByteString value) {
        bitField0_ |= 0x00000100;
        groupName_ = value;
        onChanged();
      }
      
      // optional string imdb_url = 10;
      private java.lang.Object imdbUrl_ = "";
      public boolean hasImdbUrl() {
        return ((bitField0_ & 0x00000200) == 0x00000200);
      }
      public String getImdbUrl() {
        java.lang.Object ref = imdbUrl_;
        if (!(ref instanceof String)) {
          String s = ((com.google.protobuf.ByteString) ref).toStringUtf8();
          imdbUrl_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      public Builder setImdbUrl(String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000200;
        imdbUrl_ = value;
        onChanged();
        return this;
      }
      public Builder clearImdbUrl() {
        bitField0_ = (bitField0_ & ~0x00000200);
        imdbUrl_ = getDefaultInstance().getImdbUrl();
        onChanged();
        return this;
      }
      void setImdbUrl(com.google.protobuf.ByteString value) {
        bitField0_ |= 0x00000200;
        imdbUrl_ = value;
        onChanged();
      }
      
      // optional string imdb_id = 11;
      private java.lang.Object imdbId_ = "";
      public boolean hasImdbId() {
        return ((bitField0_ & 0x00000400) == 0x00000400);
      }
      public String getImdbId() {
        java.lang.Object ref = imdbId_;
        if (!(ref instanceof String)) {
          String s = ((com.google.protobuf.ByteString) ref).toStringUtf8();
          imdbId_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      public Builder setImdbId(String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000400;
        imdbId_ = value;
        onChanged();
        return this;
      }
      public Builder clearImdbId() {
        bitField0_ = (bitField0_ & ~0x00000400);
        imdbId_ = getDefaultInstance().getImdbId();
        onChanged();
        return this;
      }
      void setImdbId(com.google.protobuf.ByteString value) {
        bitField0_ |= 0x00000400;
        imdbId_ = value;
        onChanged();
      }
      
      // optional int32 duration = 12;
      private int duration_ ;
      public boolean hasDuration() {
        return ((bitField0_ & 0x00000800) == 0x00000800);
      }
      public int getDuration() {
        return duration_;
      }
      public Builder setDuration(int value) {
        bitField0_ |= 0x00000800;
        duration_ = value;
        onChanged();
        return this;
      }
      public Builder clearDuration() {
        bitField0_ = (bitField0_ & ~0x00000800);
        duration_ = 0;
        onChanged();
        return this;
      }
      
      // optional string rating = 13;
      private java.lang.Object rating_ = "";
      public boolean hasRating() {
        return ((bitField0_ & 0x00001000) == 0x00001000);
      }
      public String getRating() {
        java.lang.Object ref = rating_;
        if (!(ref instanceof String)) {
          String s = ((com.google.protobuf.ByteString) ref).toStringUtf8();
          rating_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      public Builder setRating(String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00001000;
        rating_ = value;
        onChanged();
        return this;
      }
      public Builder clearRating() {
        bitField0_ = (bitField0_ & ~0x00001000);
        rating_ = getDefaultInstance().getRating();
        onChanged();
        return this;
      }
      void setRating(com.google.protobuf.ByteString value) {
        bitField0_ |= 0x00001000;
        rating_ = value;
        onChanged();
      }
      
      // optional string director = 14;
      private java.lang.Object director_ = "";
      public boolean hasDirector() {
        return ((bitField0_ & 0x00002000) == 0x00002000);
      }
      public String getDirector() {
        java.lang.Object ref = director_;
        if (!(ref instanceof String)) {
          String s = ((com.google.protobuf.ByteString) ref).toStringUtf8();
          director_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      public Builder setDirector(String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00002000;
        director_ = value;
        onChanged();
        return this;
      }
      public Builder clearDirector() {
        bitField0_ = (bitField0_ & ~0x00002000);
        director_ = getDefaultInstance().getDirector();
        onChanged();
        return this;
      }
      void setDirector(com.google.protobuf.ByteString value) {
        bitField0_ |= 0x00002000;
        director_ = value;
        onChanged();
      }
      
      // optional string story = 15;
      private java.lang.Object story_ = "";
      public boolean hasStory() {
        return ((bitField0_ & 0x00004000) == 0x00004000);
      }
      public String getStory() {
        java.lang.Object ref = story_;
        if (!(ref instanceof String)) {
          String s = ((com.google.protobuf.ByteString) ref).toStringUtf8();
          story_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      public Builder setStory(String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00004000;
        story_ = value;
        onChanged();
        return this;
      }
      public Builder clearStory() {
        bitField0_ = (bitField0_ & ~0x00004000);
        story_ = getDefaultInstance().getStory();
        onChanged();
        return this;
      }
      void setStory(com.google.protobuf.ByteString value) {
        bitField0_ |= 0x00004000;
        story_ = value;
        onChanged();
      }
      
      // optional bytes image = 16;
      private com.google.protobuf.ByteString image_ = com.google.protobuf.ByteString.EMPTY;
      public boolean hasImage() {
        return ((bitField0_ & 0x00008000) == 0x00008000);
      }
      public com.google.protobuf.ByteString getImage() {
        return image_;
      }
      public Builder setImage(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00008000;
        image_ = value;
        onChanged();
        return this;
      }
      public Builder clearImage() {
        bitField0_ = (bitField0_ & ~0x00008000);
        image_ = getDefaultInstance().getImage();
        onChanged();
        return this;
      }
      
      // repeated string genre = 17;
      private com.google.protobuf.LazyStringList genre_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      private void ensureGenreIsMutable() {
        if (!((bitField0_ & 0x00010000) == 0x00010000)) {
          genre_ = new com.google.protobuf.LazyStringArrayList(genre_);
          bitField0_ |= 0x00010000;
         }
      }
      public java.util.List<String>
          getGenreList() {
        return java.util.Collections.unmodifiableList(genre_);
      }
      public int getGenreCount() {
        return genre_.size();
      }
      public String getGenre(int index) {
        return genre_.get(index);
      }
      public Builder setGenre(
          int index, String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureGenreIsMutable();
        genre_.set(index, value);
        onChanged();
        return this;
      }
      public Builder addGenre(String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureGenreIsMutable();
        genre_.add(value);
        onChanged();
        return this;
      }
      public Builder addAllGenre(
          java.lang.Iterable<String> values) {
        ensureGenreIsMutable();
        super.addAll(values, genre_);
        onChanged();
        return this;
      }
      public Builder clearGenre() {
        genre_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00010000);
        onChanged();
        return this;
      }
      void addGenre(com.google.protobuf.ByteString value) {
        ensureGenreIsMutable();
        genre_.add(value);
        onChanged();
      }
      
      // optional .se.qxx.jukebox.domain.Identifier identifier = 18;
      private se.qxx.jukebox.domain.JukeboxDomain.Identifier identifier_ = se.qxx.jukebox.domain.JukeboxDomain.Identifier.Filename;
      public boolean hasIdentifier() {
        return ((bitField0_ & 0x00020000) == 0x00020000);
      }
      public se.qxx.jukebox.domain.JukeboxDomain.Identifier getIdentifier() {
        return identifier_;
      }
      public Builder setIdentifier(se.qxx.jukebox.domain.JukeboxDomain.Identifier value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00020000;
        identifier_ = value;
        onChanged();
        return this;
      }
      public Builder clearIdentifier() {
        bitField0_ = (bitField0_ & ~0x00020000);
        identifier_ = se.qxx.jukebox.domain.JukeboxDomain.Identifier.Filename;
        onChanged();
        return this;
      }
      
      // optional int32 identifierRating = 19;
      private int identifierRating_ ;
      public boolean hasIdentifierRating() {
        return ((bitField0_ & 0x00040000) == 0x00040000);
      }
      public int getIdentifierRating() {
        return identifierRating_;
      }
      public Builder setIdentifierRating(int value) {
        bitField0_ |= 0x00040000;
        identifierRating_ = value;
        onChanged();
        return this;
      }
      public Builder clearIdentifierRating() {
        bitField0_ = (bitField0_ & ~0x00040000);
        identifierRating_ = 0;
        onChanged();
        return this;
      }
      
      // optional bool watched = 20;
      private boolean watched_ ;
      public boolean hasWatched() {
        return ((bitField0_ & 0x00080000) == 0x00080000);
      }
      public boolean getWatched() {
        return watched_;
      }
      public Builder setWatched(boolean value) {
        bitField0_ |= 0x00080000;
        watched_ = value;
        onChanged();
        return this;
      }
      public Builder clearWatched() {
        bitField0_ = (bitField0_ & ~0x00080000);
        watched_ = false;
        onChanged();
        return this;
      }
      
      // optional bool isTvEpisode = 21;
      private boolean isTvEpisode_ ;
      public boolean hasIsTvEpisode() {
        return ((bitField0_ & 0x00100000) == 0x00100000);
      }
      public boolean getIsTvEpisode() {
        return isTvEpisode_;
      }
      public Builder setIsTvEpisode(boolean value) {
        bitField0_ |= 0x00100000;
        isTvEpisode_ = value;
        onChanged();
        return this;
      }
      public Builder clearIsTvEpisode() {
        bitField0_ = (bitField0_ & ~0x00100000);
        isTvEpisode_ = false;
        onChanged();
        return this;
      }
      
      // optional int32 season = 22;
      private int season_ ;
      public boolean hasSeason() {
        return ((bitField0_ & 0x00200000) == 0x00200000);
      }
      public int getSeason() {
        return season_;
      }
      public Builder setSeason(int value) {
        bitField0_ |= 0x00200000;
        season_ = value;
        onChanged();
        return this;
      }
      public Builder clearSeason() {
        bitField0_ = (bitField0_ & ~0x00200000);
        season_ = 0;
        onChanged();
        return this;
      }
      
      // optional int32 episode = 23;
      private int episode_ ;
      public boolean hasEpisode() {
        return ((bitField0_ & 0x00400000) == 0x00400000);
      }
      public int getEpisode() {
        return episode_;
      }
      public Builder setEpisode(int value) {
        bitField0_ |= 0x00400000;
        episode_ = value;
        onChanged();
        return this;
      }
      public Builder clearEpisode() {
        bitField0_ = (bitField0_ & ~0x00400000);
        episode_ = 0;
        onChanged();
        return this;
      }
      
      // optional int64 firstAirDate = 24;
      private long firstAirDate_ ;
      public boolean hasFirstAirDate() {
        return ((bitField0_ & 0x00800000) == 0x00800000);
      }
      public long getFirstAirDate() {
        return firstAirDate_;
      }
      public Builder setFirstAirDate(long value) {
        bitField0_ |= 0x00800000;
        firstAirDate_ = value;
        onChanged();
        return this;
      }
      public Builder clearFirstAirDate() {
        bitField0_ = (bitField0_ & ~0x00800000);
        firstAirDate_ = 0L;
        onChanged();
        return this;
      }
      
      // optional string episodeTitle = 25;
      private java.lang.Object episodeTitle_ = "";
      public boolean hasEpisodeTitle() {
        return ((bitField0_ & 0x01000000) == 0x01000000);
      }
      public String getEpisodeTitle() {
        java.lang.Object ref = episodeTitle_;
        if (!(ref instanceof String)) {
          String s = ((com.google.protobuf.ByteString) ref).toStringUtf8();
          episodeTitle_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      public Builder setEpisodeTitle(String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x01000000;
        episodeTitle_ = value;
        onChanged();
        return this;
      }
      public Builder clearEpisodeTitle() {
        bitField0_ = (bitField0_ & ~0x01000000);
        episodeTitle_ = getDefaultInstance().getEpisodeTitle();
        onChanged();
        return this;
      }
      void setEpisodeTitle(com.google.protobuf.ByteString value) {
        bitField0_ |= 0x01000000;
        episodeTitle_ = value;
        onChanged();
      }
      
      // @@protoc_insertion_point(builder_scope:se.qxx.jukebox.domain.Movie)
    }
    
    static {
      defaultInstance = new Movie(true);
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:se.qxx.jukebox.domain.Movie)
  }
  
  public interface SubtitleOrBuilder
      extends com.google.protobuf.MessageOrBuilder {
    
    // required string filename = 1;
    boolean hasFilename();
    String getFilename();
    
    // required string description = 2;
    boolean hasDescription();
    String getDescription();
    
    // required .se.qxx.jukebox.domain.Rating rating = 3;
    boolean hasRating();
    se.qxx.jukebox.domain.JukeboxDomain.Rating getRating();
    
    // required int32 mediaIndex = 4;
    boolean hasMediaIndex();
    int getMediaIndex();
    
    // required string language = 5;
    boolean hasLanguage();
    String getLanguage();
  }
  public static final class Subtitle extends
      com.google.protobuf.GeneratedMessage
      implements SubtitleOrBuilder {
    // Use Subtitle.newBuilder() to construct.
    private Subtitle(Builder builder) {
      super(builder);
    }
    private Subtitle(boolean noInit) {}
    
    private static final Subtitle defaultInstance;
    public static Subtitle getDefaultInstance() {
      return defaultInstance;
    }
    
    public Subtitle getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return se.qxx.jukebox.domain.JukeboxDomain.internal_static_se_qxx_jukebox_domain_Subtitle_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return se.qxx.jukebox.domain.JukeboxDomain.internal_static_se_qxx_jukebox_domain_Subtitle_fieldAccessorTable;
    }
    
    private int bitField0_;
    // required string filename = 1;
    public static final int FILENAME_FIELD_NUMBER = 1;
    private java.lang.Object filename_;
    public boolean hasFilename() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    public String getFilename() {
      java.lang.Object ref = filename_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        if (com.google.protobuf.Internal.isValidUtf8(bs)) {
          filename_ = s;
        }
        return s;
      }
    }
    private com.google.protobuf.ByteString getFilenameBytes() {
      java.lang.Object ref = filename_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8((String) ref);
        filename_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    
    // required string description = 2;
    public static final int DESCRIPTION_FIELD_NUMBER = 2;
    private java.lang.Object description_;
    public boolean hasDescription() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    public String getDescription() {
      java.lang.Object ref = description_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        if (com.google.protobuf.Internal.isValidUtf8(bs)) {
          description_ = s;
        }
        return s;
      }
    }
    private com.google.protobuf.ByteString getDescriptionBytes() {
      java.lang.Object ref = description_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8((String) ref);
        description_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    
    // required .se.qxx.jukebox.domain.Rating rating = 3;
    public static final int RATING_FIELD_NUMBER = 3;
    private se.qxx.jukebox.domain.JukeboxDomain.Rating rating_;
    public boolean hasRating() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    public se.qxx.jukebox.domain.JukeboxDomain.Rating getRating() {
      return rating_;
    }
    
    // required int32 mediaIndex = 4;
    public static final int MEDIAINDEX_FIELD_NUMBER = 4;
    private int mediaIndex_;
    public boolean hasMediaIndex() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    public int getMediaIndex() {
      return mediaIndex_;
    }
    
    // required string language = 5;
    public static final int LANGUAGE_FIELD_NUMBER = 5;
    private java.lang.Object language_;
    public boolean hasLanguage() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    public String getLanguage() {
      java.lang.Object ref = language_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        if (com.google.protobuf.Internal.isValidUtf8(bs)) {
          language_ = s;
        }
        return s;
      }
    }
    private com.google.protobuf.ByteString getLanguageBytes() {
      java.lang.Object ref = language_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8((String) ref);
        language_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    
    private void initFields() {
      filename_ = "";
      description_ = "";
      rating_ = se.qxx.jukebox.domain.JukeboxDomain.Rating.NotMatched;
      mediaIndex_ = 0;
      language_ = "";
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;
      
      if (!hasFilename()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasDescription()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasRating()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasMediaIndex()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasLanguage()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBytes(1, getFilenameBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeBytes(2, getDescriptionBytes());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeEnum(3, rating_.getNumber());
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeInt32(4, mediaIndex_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeBytes(5, getLanguageBytes());
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, getFilenameBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(2, getDescriptionBytes());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(3, rating_.getNumber());
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(4, mediaIndex_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(5, getLanguageBytes());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }
    
    public static se.qxx.jukebox.domain.JukeboxDomain.Subtitle parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static se.qxx.jukebox.domain.JukeboxDomain.Subtitle parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static se.qxx.jukebox.domain.JukeboxDomain.Subtitle parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static se.qxx.jukebox.domain.JukeboxDomain.Subtitle parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static se.qxx.jukebox.domain.JukeboxDomain.Subtitle parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static se.qxx.jukebox.domain.JukeboxDomain.Subtitle parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static se.qxx.jukebox.domain.JukeboxDomain.Subtitle parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static se.qxx.jukebox.domain.JukeboxDomain.Subtitle parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static se.qxx.jukebox.domain.JukeboxDomain.Subtitle parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static se.qxx.jukebox.domain.JukeboxDomain.Subtitle parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(se.qxx.jukebox.domain.JukeboxDomain.Subtitle prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements se.qxx.jukebox.domain.JukeboxDomain.SubtitleOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return se.qxx.jukebox.domain.JukeboxDomain.internal_static_se_qxx_jukebox_domain_Subtitle_descriptor;
      }
      
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return se.qxx.jukebox.domain.JukeboxDomain.internal_static_se_qxx_jukebox_domain_Subtitle_fieldAccessorTable;
      }
      
      // Construct using se.qxx.jukebox.domain.JukeboxDomain.Subtitle.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }
      
      private Builder(BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }
      
      public Builder clear() {
        super.clear();
        filename_ = "";
        bitField0_ = (bitField0_ & ~0x00000001);
        description_ = "";
        bitField0_ = (bitField0_ & ~0x00000002);
        rating_ = se.qxx.jukebox.domain.JukeboxDomain.Rating.NotMatched;
        bitField0_ = (bitField0_ & ~0x00000004);
        mediaIndex_ = 0;
        bitField0_ = (bitField0_ & ~0x00000008);
        language_ = "";
        bitField0_ = (bitField0_ & ~0x00000010);
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return se.qxx.jukebox.domain.JukeboxDomain.Subtitle.getDescriptor();
      }
      
      public se.qxx.jukebox.domain.JukeboxDomain.Subtitle getDefaultInstanceForType() {
        return se.qxx.jukebox.domain.JukeboxDomain.Subtitle.getDefaultInstance();
      }
      
      public se.qxx.jukebox.domain.JukeboxDomain.Subtitle build() {
        se.qxx.jukebox.domain.JukeboxDomain.Subtitle result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }
      
      private se.qxx.jukebox.domain.JukeboxDomain.Subtitle buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        se.qxx.jukebox.domain.JukeboxDomain.Subtitle result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return result;
      }
      
      public se.qxx.jukebox.domain.JukeboxDomain.Subtitle buildPartial() {
        se.qxx.jukebox.domain.JukeboxDomain.Subtitle result = new se.qxx.jukebox.domain.JukeboxDomain.Subtitle(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.filename_ = filename_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.description_ = description_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.rating_ = rating_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.mediaIndex_ = mediaIndex_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.language_ = language_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof se.qxx.jukebox.domain.JukeboxDomain.Subtitle) {
          return mergeFrom((se.qxx.jukebox.domain.JukeboxDomain.Subtitle)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(se.qxx.jukebox.domain.JukeboxDomain.Subtitle other) {
        if (other == se.qxx.jukebox.domain.JukeboxDomain.Subtitle.getDefaultInstance()) return this;
        if (other.hasFilename()) {
          setFilename(other.getFilename());
        }
        if (other.hasDescription()) {
          setDescription(other.getDescription());
        }
        if (other.hasRating()) {
          setRating(other.getRating());
        }
        if (other.hasMediaIndex()) {
          setMediaIndex(other.getMediaIndex());
        }
        if (other.hasLanguage()) {
          setLanguage(other.getLanguage());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public final boolean isInitialized() {
        if (!hasFilename()) {
          
          return false;
        }
        if (!hasDescription()) {
          
          return false;
        }
        if (!hasRating()) {
          
          return false;
        }
        if (!hasMediaIndex()) {
          
          return false;
        }
        if (!hasLanguage()) {
          
          return false;
        }
        return true;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              onChanged();
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                onChanged();
                return this;
              }
              break;
            }
            case 10: {
              bitField0_ |= 0x00000001;
              filename_ = input.readBytes();
              break;
            }
            case 18: {
              bitField0_ |= 0x00000002;
              description_ = input.readBytes();
              break;
            }
            case 24: {
              int rawValue = input.readEnum();
              se.qxx.jukebox.domain.JukeboxDomain.Rating value = se.qxx.jukebox.domain.JukeboxDomain.Rating.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(3, rawValue);
              } else {
                bitField0_ |= 0x00000004;
                rating_ = value;
              }
              break;
            }
            case 32: {
              bitField0_ |= 0x00000008;
              mediaIndex_ = input.readInt32();
              break;
            }
            case 42: {
              bitField0_ |= 0x00000010;
              language_ = input.readBytes();
              break;
            }
          }
        }
      }
      
      private int bitField0_;
      
      // required string filename = 1;
      private java.lang.Object filename_ = "";
      public boolean hasFilename() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      public String getFilename() {
        java.lang.Object ref = filename_;
        if (!(ref instanceof String)) {
          String s = ((com.google.protobuf.ByteString) ref).toStringUtf8();
          filename_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      public Builder setFilename(String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        filename_ = value;
        onChanged();
        return this;
      }
      public Builder clearFilename() {
        bitField0_ = (bitField0_ & ~0x00000001);
        filename_ = getDefaultInstance().getFilename();
        onChanged();
        return this;
      }
      void setFilename(com.google.protobuf.ByteString value) {
        bitField0_ |= 0x00000001;
        filename_ = value;
        onChanged();
      }
      
      // required string description = 2;
      private java.lang.Object description_ = "";
      public boolean hasDescription() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      public String getDescription() {
        java.lang.Object ref = description_;
        if (!(ref instanceof String)) {
          String s = ((com.google.protobuf.ByteString) ref).toStringUtf8();
          description_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      public Builder setDescription(String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        description_ = value;
        onChanged();
        return this;
      }
      public Builder clearDescription() {
        bitField0_ = (bitField0_ & ~0x00000002);
        description_ = getDefaultInstance().getDescription();
        onChanged();
        return this;
      }
      void setDescription(com.google.protobuf.ByteString value) {
        bitField0_ |= 0x00000002;
        description_ = value;
        onChanged();
      }
      
      // required .se.qxx.jukebox.domain.Rating rating = 3;
      private se.qxx.jukebox.domain.JukeboxDomain.Rating rating_ = se.qxx.jukebox.domain.JukeboxDomain.Rating.NotMatched;
      public boolean hasRating() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      public se.qxx.jukebox.domain.JukeboxDomain.Rating getRating() {
        return rating_;
      }
      public Builder setRating(se.qxx.jukebox.domain.JukeboxDomain.Rating value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000004;
        rating_ = value;
        onChanged();
        return this;
      }
      public Builder clearRating() {
        bitField0_ = (bitField0_ & ~0x00000004);
        rating_ = se.qxx.jukebox.domain.JukeboxDomain.Rating.NotMatched;
        onChanged();
        return this;
      }
      
      // required int32 mediaIndex = 4;
      private int mediaIndex_ ;
      public boolean hasMediaIndex() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      public int getMediaIndex() {
        return mediaIndex_;
      }
      public Builder setMediaIndex(int value) {
        bitField0_ |= 0x00000008;
        mediaIndex_ = value;
        onChanged();
        return this;
      }
      public Builder clearMediaIndex() {
        bitField0_ = (bitField0_ & ~0x00000008);
        mediaIndex_ = 0;
        onChanged();
        return this;
      }
      
      // required string language = 5;
      private java.lang.Object language_ = "";
      public boolean hasLanguage() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      public String getLanguage() {
        java.lang.Object ref = language_;
        if (!(ref instanceof String)) {
          String s = ((com.google.protobuf.ByteString) ref).toStringUtf8();
          language_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      public Builder setLanguage(String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000010;
        language_ = value;
        onChanged();
        return this;
      }
      public Builder clearLanguage() {
        bitField0_ = (bitField0_ & ~0x00000010);
        language_ = getDefaultInstance().getLanguage();
        onChanged();
        return this;
      }
      void setLanguage(com.google.protobuf.ByteString value) {
        bitField0_ |= 0x00000010;
        language_ = value;
        onChanged();
      }
      
      // @@protoc_insertion_point(builder_scope:se.qxx.jukebox.domain.Subtitle)
    }
    
    static {
      defaultInstance = new Subtitle(true);
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:se.qxx.jukebox.domain.Subtitle)
  }
  
  public interface MediaOrBuilder
      extends com.google.protobuf.MessageOrBuilder {
    
    // required int32 ID = 1;
    boolean hasID();
    int getID();
    
    // required int32 index = 2;
    boolean hasIndex();
    int getIndex();
    
    // required string filename = 3;
    boolean hasFilename();
    String getFilename();
    
    // required string filepath = 4;
    boolean hasFilepath();
    String getFilepath();
    
    // optional int32 metaDuration = 5;
    boolean hasMetaDuration();
    int getMetaDuration();
    
    // optional string metaFramerate = 6;
    boolean hasMetaFramerate();
    String getMetaFramerate();
    
    // repeated .se.qxx.jukebox.domain.Subtitle subs = 7;
    java.util.List<se.qxx.jukebox.domain.JukeboxDomain.Subtitle> 
        getSubsList();
    se.qxx.jukebox.domain.JukeboxDomain.Subtitle getSubs(int index);
    int getSubsCount();
    java.util.List<? extends se.qxx.jukebox.domain.JukeboxDomain.SubtitleOrBuilder> 
        getSubsOrBuilderList();
    se.qxx.jukebox.domain.JukeboxDomain.SubtitleOrBuilder getSubsOrBuilder(
        int index);
  }
  public static final class Media extends
      com.google.protobuf.GeneratedMessage
      implements MediaOrBuilder {
    // Use Media.newBuilder() to construct.
    private Media(Builder builder) {
      super(builder);
    }
    private Media(boolean noInit) {}
    
    private static final Media defaultInstance;
    public static Media getDefaultInstance() {
      return defaultInstance;
    }
    
    public Media getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return se.qxx.jukebox.domain.JukeboxDomain.internal_static_se_qxx_jukebox_domain_Media_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return se.qxx.jukebox.domain.JukeboxDomain.internal_static_se_qxx_jukebox_domain_Media_fieldAccessorTable;
    }
    
    private int bitField0_;
    // required int32 ID = 1;
    public static final int ID_FIELD_NUMBER = 1;
    private int iD_;
    public boolean hasID() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    public int getID() {
      return iD_;
    }
    
    // required int32 index = 2;
    public static final int INDEX_FIELD_NUMBER = 2;
    private int index_;
    public boolean hasIndex() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    public int getIndex() {
      return index_;
    }
    
    // required string filename = 3;
    public static final int FILENAME_FIELD_NUMBER = 3;
    private java.lang.Object filename_;
    public boolean hasFilename() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    public String getFilename() {
      java.lang.Object ref = filename_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        if (com.google.protobuf.Internal.isValidUtf8(bs)) {
          filename_ = s;
        }
        return s;
      }
    }
    private com.google.protobuf.ByteString getFilenameBytes() {
      java.lang.Object ref = filename_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8((String) ref);
        filename_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    
    // required string filepath = 4;
    public static final int FILEPATH_FIELD_NUMBER = 4;
    private java.lang.Object filepath_;
    public boolean hasFilepath() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    public String getFilepath() {
      java.lang.Object ref = filepath_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        if (com.google.protobuf.Internal.isValidUtf8(bs)) {
          filepath_ = s;
        }
        return s;
      }
    }
    private com.google.protobuf.ByteString getFilepathBytes() {
      java.lang.Object ref = filepath_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8((String) ref);
        filepath_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    
    // optional int32 metaDuration = 5;
    public static final int METADURATION_FIELD_NUMBER = 5;
    private int metaDuration_;
    public boolean hasMetaDuration() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    public int getMetaDuration() {
      return metaDuration_;
    }
    
    // optional string metaFramerate = 6;
    public static final int METAFRAMERATE_FIELD_NUMBER = 6;
    private java.lang.Object metaFramerate_;
    public boolean hasMetaFramerate() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    public String getMetaFramerate() {
      java.lang.Object ref = metaFramerate_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        if (com.google.protobuf.Internal.isValidUtf8(bs)) {
          metaFramerate_ = s;
        }
        return s;
      }
    }
    private com.google.protobuf.ByteString getMetaFramerateBytes() {
      java.lang.Object ref = metaFramerate_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8((String) ref);
        metaFramerate_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    
    // repeated .se.qxx.jukebox.domain.Subtitle subs = 7;
    public static final int SUBS_FIELD_NUMBER = 7;
    private java.util.List<se.qxx.jukebox.domain.JukeboxDomain.Subtitle> subs_;
    public java.util.List<se.qxx.jukebox.domain.JukeboxDomain.Subtitle> getSubsList() {
      return subs_;
    }
    public java.util.List<? extends se.qxx.jukebox.domain.JukeboxDomain.SubtitleOrBuilder> 
        getSubsOrBuilderList() {
      return subs_;
    }
    public int getSubsCount() {
      return subs_.size();
    }
    public se.qxx.jukebox.domain.JukeboxDomain.Subtitle getSubs(int index) {
      return subs_.get(index);
    }
    public se.qxx.jukebox.domain.JukeboxDomain.SubtitleOrBuilder getSubsOrBuilder(
        int index) {
      return subs_.get(index);
    }
    
    private void initFields() {
      iD_ = 0;
      index_ = 0;
      filename_ = "";
      filepath_ = "";
      metaDuration_ = 0;
      metaFramerate_ = "";
      subs_ = java.util.Collections.emptyList();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;
      
      if (!hasID()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasIndex()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasFilename()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasFilepath()) {
        memoizedIsInitialized = 0;
        return false;
      }
      for (int i = 0; i < getSubsCount(); i++) {
        if (!getSubs(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, iD_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(2, index_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeBytes(3, getFilenameBytes());
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeBytes(4, getFilepathBytes());
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeInt32(5, metaDuration_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeBytes(6, getMetaFramerateBytes());
      }
      for (int i = 0; i < subs_.size(); i++) {
        output.writeMessage(7, subs_.get(i));
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, iD_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, index_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(3, getFilenameBytes());
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(4, getFilepathBytes());
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(5, metaDuration_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(6, getMetaFramerateBytes());
      }
      for (int i = 0; i < subs_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(7, subs_.get(i));
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }
    
    public static se.qxx.jukebox.domain.JukeboxDomain.Media parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static se.qxx.jukebox.domain.JukeboxDomain.Media parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static se.qxx.jukebox.domain.JukeboxDomain.Media parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static se.qxx.jukebox.domain.JukeboxDomain.Media parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static se.qxx.jukebox.domain.JukeboxDomain.Media parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static se.qxx.jukebox.domain.JukeboxDomain.Media parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static se.qxx.jukebox.domain.JukeboxDomain.Media parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static se.qxx.jukebox.domain.JukeboxDomain.Media parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static se.qxx.jukebox.domain.JukeboxDomain.Media parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static se.qxx.jukebox.domain.JukeboxDomain.Media parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(se.qxx.jukebox.domain.JukeboxDomain.Media prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements se.qxx.jukebox.domain.JukeboxDomain.MediaOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return se.qxx.jukebox.domain.JukeboxDomain.internal_static_se_qxx_jukebox_domain_Media_descriptor;
      }
      
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return se.qxx.jukebox.domain.JukeboxDomain.internal_static_se_qxx_jukebox_domain_Media_fieldAccessorTable;
      }
      
      // Construct using se.qxx.jukebox.domain.JukeboxDomain.Media.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }
      
      private Builder(BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getSubsFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }
      
      public Builder clear() {
        super.clear();
        iD_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        index_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        filename_ = "";
        bitField0_ = (bitField0_ & ~0x00000004);
        filepath_ = "";
        bitField0_ = (bitField0_ & ~0x00000008);
        metaDuration_ = 0;
        bitField0_ = (bitField0_ & ~0x00000010);
        metaFramerate_ = "";
        bitField0_ = (bitField0_ & ~0x00000020);
        if (subsBuilder_ == null) {
          subs_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000040);
        } else {
          subsBuilder_.clear();
        }
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return se.qxx.jukebox.domain.JukeboxDomain.Media.getDescriptor();
      }
      
      public se.qxx.jukebox.domain.JukeboxDomain.Media getDefaultInstanceForType() {
        return se.qxx.jukebox.domain.JukeboxDomain.Media.getDefaultInstance();
      }
      
      public se.qxx.jukebox.domain.JukeboxDomain.Media build() {
        se.qxx.jukebox.domain.JukeboxDomain.Media result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }
      
      private se.qxx.jukebox.domain.JukeboxDomain.Media buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        se.qxx.jukebox.domain.JukeboxDomain.Media result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return result;
      }
      
      public se.qxx.jukebox.domain.JukeboxDomain.Media buildPartial() {
        se.qxx.jukebox.domain.JukeboxDomain.Media result = new se.qxx.jukebox.domain.JukeboxDomain.Media(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.iD_ = iD_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.index_ = index_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.filename_ = filename_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.filepath_ = filepath_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.metaDuration_ = metaDuration_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000020;
        }
        result.metaFramerate_ = metaFramerate_;
        if (subsBuilder_ == null) {
          if (((bitField0_ & 0x00000040) == 0x00000040)) {
            subs_ = java.util.Collections.unmodifiableList(subs_);
            bitField0_ = (bitField0_ & ~0x00000040);
          }
          result.subs_ = subs_;
        } else {
          result.subs_ = subsBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof se.qxx.jukebox.domain.JukeboxDomain.Media) {
          return mergeFrom((se.qxx.jukebox.domain.JukeboxDomain.Media)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(se.qxx.jukebox.domain.JukeboxDomain.Media other) {
        if (other == se.qxx.jukebox.domain.JukeboxDomain.Media.getDefaultInstance()) return this;
        if (other.hasID()) {
          setID(other.getID());
        }
        if (other.hasIndex()) {
          setIndex(other.getIndex());
        }
        if (other.hasFilename()) {
          setFilename(other.getFilename());
        }
        if (other.hasFilepath()) {
          setFilepath(other.getFilepath());
        }
        if (other.hasMetaDuration()) {
          setMetaDuration(other.getMetaDuration());
        }
        if (other.hasMetaFramerate()) {
          setMetaFramerate(other.getMetaFramerate());
        }
        if (subsBuilder_ == null) {
          if (!other.subs_.isEmpty()) {
            if (subs_.isEmpty()) {
              subs_ = other.subs_;
              bitField0_ = (bitField0_ & ~0x00000040);
            } else {
              ensureSubsIsMutable();
              subs_.addAll(other.subs_);
            }
            onChanged();
          }
        } else {
          if (!other.subs_.isEmpty()) {
            if (subsBuilder_.isEmpty()) {
              subsBuilder_.dispose();
              subsBuilder_ = null;
              subs_ = other.subs_;
              bitField0_ = (bitField0_ & ~0x00000040);
              subsBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getSubsFieldBuilder() : null;
            } else {
              subsBuilder_.addAllMessages(other.subs_);
            }
          }
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public final boolean isInitialized() {
        if (!hasID()) {
          
          return false;
        }
        if (!hasIndex()) {
          
          return false;
        }
        if (!hasFilename()) {
          
          return false;
        }
        if (!hasFilepath()) {
          
          return false;
        }
        for (int i = 0; i < getSubsCount(); i++) {
          if (!getSubs(i).isInitialized()) {
            
            return false;
          }
        }
        return true;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              onChanged();
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                onChanged();
                return this;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              iD_ = input.readInt32();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              index_ = input.readInt32();
              break;
            }
            case 26: {
              bitField0_ |= 0x00000004;
              filename_ = input.readBytes();
              break;
            }
            case 34: {
              bitField0_ |= 0x00000008;
              filepath_ = input.readBytes();
              break;
            }
            case 40: {
              bitField0_ |= 0x00000010;
              metaDuration_ = input.readInt32();
              break;
            }
            case 50: {
              bitField0_ |= 0x00000020;
              metaFramerate_ = input.readBytes();
              break;
            }
            case 58: {
              se.qxx.jukebox.domain.JukeboxDomain.Subtitle.Builder subBuilder = se.qxx.jukebox.domain.JukeboxDomain.Subtitle.newBuilder();
              input.readMessage(subBuilder, extensionRegistry);
              addSubs(subBuilder.buildPartial());
              break;
            }
          }
        }
      }
      
      private int bitField0_;
      
      // required int32 ID = 1;
      private int iD_ ;
      public boolean hasID() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      public int getID() {
        return iD_;
      }
      public Builder setID(int value) {
        bitField0_ |= 0x00000001;
        iD_ = value;
        onChanged();
        return this;
      }
      public Builder clearID() {
        bitField0_ = (bitField0_ & ~0x00000001);
        iD_ = 0;
        onChanged();
        return this;
      }
      
      // required int32 index = 2;
      private int index_ ;
      public boolean hasIndex() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      public int getIndex() {
        return index_;
      }
      public Builder setIndex(int value) {
        bitField0_ |= 0x00000002;
        index_ = value;
        onChanged();
        return this;
      }
      public Builder clearIndex() {
        bitField0_ = (bitField0_ & ~0x00000002);
        index_ = 0;
        onChanged();
        return this;
      }
      
      // required string filename = 3;
      private java.lang.Object filename_ = "";
      public boolean hasFilename() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      public String getFilename() {
        java.lang.Object ref = filename_;
        if (!(ref instanceof String)) {
          String s = ((com.google.protobuf.ByteString) ref).toStringUtf8();
          filename_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      public Builder setFilename(String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
        filename_ = value;
        onChanged();
        return this;
      }
      public Builder clearFilename() {
        bitField0_ = (bitField0_ & ~0x00000004);
        filename_ = getDefaultInstance().getFilename();
        onChanged();
        return this;
      }
      void setFilename(com.google.protobuf.ByteString value) {
        bitField0_ |= 0x00000004;
        filename_ = value;
        onChanged();
      }
      
      // required string filepath = 4;
      private java.lang.Object filepath_ = "";
      public boolean hasFilepath() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      public String getFilepath() {
        java.lang.Object ref = filepath_;
        if (!(ref instanceof String)) {
          String s = ((com.google.protobuf.ByteString) ref).toStringUtf8();
          filepath_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      public Builder setFilepath(String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000008;
        filepath_ = value;
        onChanged();
        return this;
      }
      public Builder clearFilepath() {
        bitField0_ = (bitField0_ & ~0x00000008);
        filepath_ = getDefaultInstance().getFilepath();
        onChanged();
        return this;
      }
      void setFilepath(com.google.protobuf.ByteString value) {
        bitField0_ |= 0x00000008;
        filepath_ = value;
        onChanged();
      }
      
      // optional int32 metaDuration = 5;
      private int metaDuration_ ;
      public boolean hasMetaDuration() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      public int getMetaDuration() {
        return metaDuration_;
      }
      public Builder setMetaDuration(int value) {
        bitField0_ |= 0x00000010;
        metaDuration_ = value;
        onChanged();
        return this;
      }
      public Builder clearMetaDuration() {
        bitField0_ = (bitField0_ & ~0x00000010);
        metaDuration_ = 0;
        onChanged();
        return this;
      }
      
      // optional string metaFramerate = 6;
      private java.lang.Object metaFramerate_ = "";
      public boolean hasMetaFramerate() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      public String getMetaFramerate() {
        java.lang.Object ref = metaFramerate_;
        if (!(ref instanceof String)) {
          String s = ((com.google.protobuf.ByteString) ref).toStringUtf8();
          metaFramerate_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      public Builder setMetaFramerate(String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000020;
        metaFramerate_ = value;
        onChanged();
        return this;
      }
      public Builder clearMetaFramerate() {
        bitField0_ = (bitField0_ & ~0x00000020);
        metaFramerate_ = getDefaultInstance().getMetaFramerate();
        onChanged();
        return this;
      }
      void setMetaFramerate(com.google.protobuf.ByteString value) {
        bitField0_ |= 0x00000020;
        metaFramerate_ = value;
        onChanged();
      }
      
      // repeated .se.qxx.jukebox.domain.Subtitle subs = 7;
      private java.util.List<se.qxx.jukebox.domain.JukeboxDomain.Subtitle> subs_ =
        java.util.Collections.emptyList();
      private void ensureSubsIsMutable() {
        if (!((bitField0_ & 0x00000040) == 0x00000040)) {
          subs_ = new java.util.ArrayList<se.qxx.jukebox.domain.JukeboxDomain.Subtitle>(subs_);
          bitField0_ |= 0x00000040;
         }
      }
      
      private com.google.protobuf.RepeatedFieldBuilder<
          se.qxx.jukebox.domain.JukeboxDomain.Subtitle, se.qxx.jukebox.domain.JukeboxDomain.Subtitle.Builder, se.qxx.jukebox.domain.JukeboxDomain.SubtitleOrBuilder> subsBuilder_;
      
      public java.util.List<se.qxx.jukebox.domain.JukeboxDomain.Subtitle> getSubsList() {
        if (subsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(subs_);
        } else {
          return subsBuilder_.getMessageList();
        }
      }
      public int getSubsCount() {
        if (subsBuilder_ == null) {
          return subs_.size();
        } else {
          return subsBuilder_.getCount();
        }
      }
      public se.qxx.jukebox.domain.JukeboxDomain.Subtitle getSubs(int index) {
        if (subsBuilder_ == null) {
          return subs_.get(index);
        } else {
          return subsBuilder_.getMessage(index);
        }
      }
      public Builder setSubs(
          int index, se.qxx.jukebox.domain.JukeboxDomain.Subtitle value) {
        if (subsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureSubsIsMutable();
          subs_.set(index, value);
          onChanged();
        } else {
          subsBuilder_.setMessage(index, value);
        }
        return this;
      }
      public Builder setSubs(
          int index, se.qxx.jukebox.domain.JukeboxDomain.Subtitle.Builder builderForValue) {
        if (subsBuilder_ == null) {
          ensureSubsIsMutable();
          subs_.set(index, builderForValue.build());
          onChanged();
        } else {
          subsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      public Builder addSubs(se.qxx.jukebox.domain.JukeboxDomain.Subtitle value) {
        if (subsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureSubsIsMutable();
          subs_.add(value);
          onChanged();
        } else {
          subsBuilder_.addMessage(value);
        }
        return this;
      }
      public Builder addSubs(
          int index, se.qxx.jukebox.domain.JukeboxDomain.Subtitle value) {
        if (subsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureSubsIsMutable();
          subs_.add(index, value);
          onChanged();
        } else {
          subsBuilder_.addMessage(index, value);
        }
        return this;
      }
      public Builder addSubs(
          se.qxx.jukebox.domain.JukeboxDomain.Subtitle.Builder builderForValue) {
        if (subsBuilder_ == null) {
          ensureSubsIsMutable();
          subs_.add(builderForValue.build());
          onChanged();
        } else {
          subsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      public Builder addSubs(
          int index, se.qxx.jukebox.domain.JukeboxDomain.Subtitle.Builder builderForValue) {
        if (subsBuilder_ == null) {
          ensureSubsIsMutable();
          subs_.add(index, builderForValue.build());
          onChanged();
        } else {
          subsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      public Builder addAllSubs(
          java.lang.Iterable<? extends se.qxx.jukebox.domain.JukeboxDomain.Subtitle> values) {
        if (subsBuilder_ == null) {
          ensureSubsIsMutable();
          super.addAll(values, subs_);
          onChanged();
        } else {
          subsBuilder_.addAllMessages(values);
        }
        return this;
      }
      public Builder clearSubs() {
        if (subsBuilder_ == null) {
          subs_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000040);
          onChanged();
        } else {
          subsBuilder_.clear();
        }
        return this;
      }
      public Builder removeSubs(int index) {
        if (subsBuilder_ == null) {
          ensureSubsIsMutable();
          subs_.remove(index);
          onChanged();
        } else {
          subsBuilder_.remove(index);
        }
        return this;
      }
      public se.qxx.jukebox.domain.JukeboxDomain.Subtitle.Builder getSubsBuilder(
          int index) {
        return getSubsFieldBuilder().getBuilder(index);
      }
      public se.qxx.jukebox.domain.JukeboxDomain.SubtitleOrBuilder getSubsOrBuilder(
          int index) {
        if (subsBuilder_ == null) {
          return subs_.get(index);  } else {
          return subsBuilder_.getMessageOrBuilder(index);
        }
      }
      public java.util.List<? extends se.qxx.jukebox.domain.JukeboxDomain.SubtitleOrBuilder> 
           getSubsOrBuilderList() {
        if (subsBuilder_ != null) {
          return subsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(subs_);
        }
      }
      public se.qxx.jukebox.domain.JukeboxDomain.Subtitle.Builder addSubsBuilder() {
        return getSubsFieldBuilder().addBuilder(
            se.qxx.jukebox.domain.JukeboxDomain.Subtitle.getDefaultInstance());
      }
      public se.qxx.jukebox.domain.JukeboxDomain.Subtitle.Builder addSubsBuilder(
          int index) {
        return getSubsFieldBuilder().addBuilder(
            index, se.qxx.jukebox.domain.JukeboxDomain.Subtitle.getDefaultInstance());
      }
      public java.util.List<se.qxx.jukebox.domain.JukeboxDomain.Subtitle.Builder> 
           getSubsBuilderList() {
        return getSubsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          se.qxx.jukebox.domain.JukeboxDomain.Subtitle, se.qxx.jukebox.domain.JukeboxDomain.Subtitle.Builder, se.qxx.jukebox.domain.JukeboxDomain.SubtitleOrBuilder> 
          getSubsFieldBuilder() {
        if (subsBuilder_ == null) {
          subsBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              se.qxx.jukebox.domain.JukeboxDomain.Subtitle, se.qxx.jukebox.domain.JukeboxDomain.Subtitle.Builder, se.qxx.jukebox.domain.JukeboxDomain.SubtitleOrBuilder>(
                  subs_,
                  ((bitField0_ & 0x00000040) == 0x00000040),
                  getParentForChildren(),
                  isClean());
          subs_ = null;
        }
        return subsBuilder_;
      }
      
      // @@protoc_insertion_point(builder_scope:se.qxx.jukebox.domain.Media)
    }
    
    static {
      defaultInstance = new Media(true);
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:se.qxx.jukebox.domain.Media)
  }
  
  public interface EmptyOrBuilder
      extends com.google.protobuf.MessageOrBuilder {
  }
  public static final class Empty extends
      com.google.protobuf.GeneratedMessage
      implements EmptyOrBuilder {
    // Use Empty.newBuilder() to construct.
    private Empty(Builder builder) {
      super(builder);
    }
    private Empty(boolean noInit) {}
    
    private static final Empty defaultInstance;
    public static Empty getDefaultInstance() {
      return defaultInstance;
    }
    
    public Empty getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return se.qxx.jukebox.domain.JukeboxDomain.internal_static_se_qxx_jukebox_domain_Empty_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return se.qxx.jukebox.domain.JukeboxDomain.internal_static_se_qxx_jukebox_domain_Empty_fieldAccessorTable;
    }
    
    private void initFields() {
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;
      
      memoizedIsInitialized = 1;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }
    
    public static se.qxx.jukebox.domain.JukeboxDomain.Empty parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static se.qxx.jukebox.domain.JukeboxDomain.Empty parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static se.qxx.jukebox.domain.JukeboxDomain.Empty parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static se.qxx.jukebox.domain.JukeboxDomain.Empty parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static se.qxx.jukebox.domain.JukeboxDomain.Empty parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static se.qxx.jukebox.domain.JukeboxDomain.Empty parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static se.qxx.jukebox.domain.JukeboxDomain.Empty parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static se.qxx.jukebox.domain.JukeboxDomain.Empty parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static se.qxx.jukebox.domain.JukeboxDomain.Empty parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static se.qxx.jukebox.domain.JukeboxDomain.Empty parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(se.qxx.jukebox.domain.JukeboxDomain.Empty prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements se.qxx.jukebox.domain.JukeboxDomain.EmptyOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return se.qxx.jukebox.domain.JukeboxDomain.internal_static_se_qxx_jukebox_domain_Empty_descriptor;
      }
      
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return se.qxx.jukebox.domain.JukeboxDomain.internal_static_se_qxx_jukebox_domain_Empty_fieldAccessorTable;
      }
      
      // Construct using se.qxx.jukebox.domain.JukeboxDomain.Empty.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }
      
      private Builder(BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }
      
      public Builder clear() {
        super.clear();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return se.qxx.jukebox.domain.JukeboxDomain.Empty.getDescriptor();
      }
      
      public se.qxx.jukebox.domain.JukeboxDomain.Empty getDefaultInstanceForType() {
        return se.qxx.jukebox.domain.JukeboxDomain.Empty.getDefaultInstance();
      }
      
      public se.qxx.jukebox.domain.JukeboxDomain.Empty build() {
        se.qxx.jukebox.domain.JukeboxDomain.Empty result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }
      
      private se.qxx.jukebox.domain.JukeboxDomain.Empty buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        se.qxx.jukebox.domain.JukeboxDomain.Empty result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return result;
      }
      
      public se.qxx.jukebox.domain.JukeboxDomain.Empty buildPartial() {
        se.qxx.jukebox.domain.JukeboxDomain.Empty result = new se.qxx.jukebox.domain.JukeboxDomain.Empty(this);
        onBuilt();
        return result;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof se.qxx.jukebox.domain.JukeboxDomain.Empty) {
          return mergeFrom((se.qxx.jukebox.domain.JukeboxDomain.Empty)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(se.qxx.jukebox.domain.JukeboxDomain.Empty other) {
        if (other == se.qxx.jukebox.domain.JukeboxDomain.Empty.getDefaultInstance()) return this;
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public final boolean isInitialized() {
        return true;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              onChanged();
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                onChanged();
                return this;
              }
              break;
            }
          }
        }
      }
      
      
      // @@protoc_insertion_point(builder_scope:se.qxx.jukebox.domain.Empty)
    }
    
    static {
      defaultInstance = new Empty(true);
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:se.qxx.jukebox.domain.Empty)
  }
  
  public interface JukeboxRequestGeneralOrBuilder
      extends com.google.protobuf.MessageOrBuilder {
    
    // required string playerName = 1;
    boolean hasPlayerName();
    String getPlayerName();
  }
  public static final class JukeboxRequestGeneral extends
      com.google.protobuf.GeneratedMessage
      implements JukeboxRequestGeneralOrBuilder {
    // Use JukeboxRequestGeneral.newBuilder() to construct.
    private JukeboxRequestGeneral(Builder builder) {
      super(builder);
    }
    private JukeboxRequestGeneral(boolean noInit) {}
    
    private static final JukeboxRequestGeneral defaultInstance;
    public static JukeboxRequestGeneral getDefaultInstance() {
      return defaultInstance;
    }
    
    public JukeboxRequestGeneral getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return se.qxx.jukebox.domain.JukeboxDomain.internal_static_se_qxx_jukebox_domain_JukeboxRequestGeneral_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return se.qxx.jukebox.domain.JukeboxDomain.internal_static_se_qxx_jukebox_domain_JukeboxRequestGeneral_fieldAccessorTable;
    }
    
    private int bitField0_;
    // required string playerName = 1;
    public static final int PLAYERNAME_FIELD_NUMBER = 1;
    private java.lang.Object playerName_;
    public boolean hasPlayerName() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    public String getPlayerName() {
      java.lang.Object ref = playerName_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        if (com.google.protobuf.Internal.isValidUtf8(bs)) {
          playerName_ = s;
        }
        return s;
      }
    }
    private com.google.protobuf.ByteString getPlayerNameBytes() {
      java.lang.Object ref = playerName_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8((String) ref);
        playerName_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    
    private void initFields() {
      playerName_ = "";
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;
      
      if (!hasPlayerName()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBytes(1, getPlayerNameBytes());
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, getPlayerNameBytes());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }
    
    public static se.qxx.jukebox.domain.JukeboxDomain.JukeboxRequestGeneral parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static se.qxx.jukebox.domain.JukeboxDomain.JukeboxRequestGeneral parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static se.qxx.jukebox.domain.JukeboxDomain.JukeboxRequestGeneral parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static se.qxx.jukebox.domain.JukeboxDomain.JukeboxRequestGeneral parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static se.qxx.jukebox.domain.JukeboxDomain.JukeboxRequestGeneral parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static se.qxx.jukebox.domain.JukeboxDomain.JukeboxRequestGeneral parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static se.qxx.jukebox.domain.JukeboxDomain.JukeboxRequestGeneral parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static se.qxx.jukebox.domain.JukeboxDomain.JukeboxRequestGeneral parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static se.qxx.jukebox.domain.JukeboxDomain.JukeboxRequestGeneral parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static se.qxx.jukebox.domain.JukeboxDomain.JukeboxRequestGeneral parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(se.qxx.jukebox.domain.JukeboxDomain.JukeboxRequestGeneral prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements se.qxx.jukebox.domain.JukeboxDomain.JukeboxRequestGeneralOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return se.qxx.jukebox.domain.JukeboxDomain.internal_static_se_qxx_jukebox_domain_JukeboxRequestGeneral_descriptor;
      }
      
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return se.qxx.jukebox.domain.JukeboxDomain.internal_static_se_qxx_jukebox_domain_JukeboxRequestGeneral_fieldAccessorTable;
      }
      
      // Construct using se.qxx.jukebox.domain.JukeboxDomain.JukeboxRequestGeneral.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }
      
      private Builder(BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }
      
      public Builder clear() {
        super.clear();
        playerName_ = "";
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return se.qxx.jukebox.domain.JukeboxDomain.JukeboxRequestGeneral.getDescriptor();
      }
      
      public se.qxx.jukebox.domain.JukeboxDomain.JukeboxRequestGeneral getDefaultInstanceForType() {
        return se.qxx.jukebox.domain.JukeboxDomain.JukeboxRequestGeneral.getDefaultInstance();
      }
      
      public se.qxx.jukebox.domain.JukeboxDomain.JukeboxRequestGeneral build() {
        se.qxx.jukebox.domain.JukeboxDomain.JukeboxRequestGeneral result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }
      
      private se.qxx.jukebox.domain.JukeboxDomain.JukeboxRequestGeneral buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        se.qxx.jukebox.domain.JukeboxDomain.JukeboxRequestGeneral result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return result;
      }
      
      public se.qxx.jukebox.domain.JukeboxDomain.JukeboxRequestGeneral buildPartial() {
        se.qxx.jukebox.domain.JukeboxDomain.JukeboxRequestGeneral result = new se.qxx.jukebox.domain.JukeboxDomain.JukeboxRequestGeneral(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.playerName_ = playerName_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof se.qxx.jukebox.domain.JukeboxDomain.JukeboxRequestGeneral) {
          return mergeFrom((se.qxx.jukebox.domain.JukeboxDomain.JukeboxRequestGeneral)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(se.qxx.jukebox.domain.JukeboxDomain.JukeboxRequestGeneral other) {
        if (other == se.qxx.jukebox.domain.JukeboxDomain.JukeboxRequestGeneral.getDefaultInstance()) return this;
        if (other.hasPlayerName()) {
          setPlayerName(other.getPlayerName());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public final boolean isInitialized() {
        if (!hasPlayerName()) {
          
          return false;
        }
        return true;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              onChanged();
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                onChanged();
                return this;
              }
              break;
            }
            case 10: {
              bitField0_ |= 0x00000001;
              playerName_ = input.readBytes();
              break;
            }
          }
        }
      }
      
      private int bitField0_;
      
      // required string playerName = 1;
      private java.lang.Object playerName_ = "";
      public boolean hasPlayerName() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      public String getPlayerName() {
        java.lang.Object ref = playerName_;
        if (!(ref instanceof String)) {
          String s = ((com.google.protobuf.ByteString) ref).toStringUtf8();
          playerName_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      public Builder setPlayerName(String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        playerName_ = value;
        onChanged();
        return this;
      }
      public Builder clearPlayerName() {
        bitField0_ = (bitField0_ & ~0x00000001);
        playerName_ = getDefaultInstance().getPlayerName();
        onChanged();
        return this;
      }
      void setPlayerName(com.google.protobuf.ByteString value) {
        bitField0_ |= 0x00000001;
        playerName_ = value;
        onChanged();
      }
      
      // @@protoc_insertion_point(builder_scope:se.qxx.jukebox.domain.JukeboxRequestGeneral)
    }
    
    static {
      defaultInstance = new JukeboxRequestGeneral(true);
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:se.qxx.jukebox.domain.JukeboxRequestGeneral)
  }
  
  public interface JukeboxRequestMovieIDOrBuilder
      extends com.google.protobuf.MessageOrBuilder {
    
    // required int32 movieId = 1;
    boolean hasMovieId();
    int getMovieId();
  }
  public static final class JukeboxRequestMovieID extends
      com.google.protobuf.GeneratedMessage
      implements JukeboxRequestMovieIDOrBuilder {
    // Use JukeboxRequestMovieID.newBuilder() to construct.
    private JukeboxRequestMovieID(Builder builder) {
      super(builder);
    }
    private JukeboxRequestMovieID(boolean noInit) {}
    
    private static final JukeboxRequestMovieID defaultInstance;
    public static JukeboxRequestMovieID getDefaultInstance() {
      return defaultInstance;
    }
    
    public JukeboxRequestMovieID getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return se.qxx.jukebox.domain.JukeboxDomain.internal_static_se_qxx_jukebox_domain_JukeboxRequestMovieID_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return se.qxx.jukebox.domain.JukeboxDomain.internal_static_se_qxx_jukebox_domain_JukeboxRequestMovieID_fieldAccessorTable;
    }
    
    private int bitField0_;
    // required int32 movieId = 1;
    public static final int MOVIEID_FIELD_NUMBER = 1;
    private int movieId_;
    public boolean hasMovieId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    public int getMovieId() {
      return movieId_;
    }
    
    private void initFields() {
      movieId_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;
      
      if (!hasMovieId()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, movieId_);
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, movieId_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }
    
    public static se.qxx.jukebox.domain.JukeboxDomain.JukeboxRequestMovieID parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static se.qxx.jukebox.domain.JukeboxDomain.JukeboxRequestMovieID parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static se.qxx.jukebox.domain.JukeboxDomain.JukeboxRequestMovieID parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static se.qxx.jukebox.domain.JukeboxDomain.JukeboxRequestMovieID parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static se.qxx.jukebox.domain.JukeboxDomain.JukeboxRequestMovieID parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static se.qxx.jukebox.domain.JukeboxDomain.JukeboxRequestMovieID parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static se.qxx.jukebox.domain.JukeboxDomain.JukeboxRequestMovieID parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static se.qxx.jukebox.domain.JukeboxDomain.JukeboxRequestMovieID parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static se.qxx.jukebox.domain.JukeboxDomain.JukeboxRequestMovieID parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static se.qxx.jukebox.domain.JukeboxDomain.JukeboxRequestMovieID parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(se.qxx.jukebox.domain.JukeboxDomain.JukeboxRequestMovieID prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements se.qxx.jukebox.domain.JukeboxDomain.JukeboxRequestMovieIDOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return se.qxx.jukebox.domain.JukeboxDomain.internal_static_se_qxx_jukebox_domain_JukeboxRequestMovieID_descriptor;
      }
      
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return se.qxx.jukebox.domain.JukeboxDomain.internal_static_se_qxx_jukebox_domain_JukeboxRequestMovieID_fieldAccessorTable;
      }
      
      // Construct using se.qxx.jukebox.domain.JukeboxDomain.JukeboxRequestMovieID.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }
      
      private Builder(BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }
      
      public Builder clear() {
        super.clear();
        movieId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return se.qxx.jukebox.domain.JukeboxDomain.JukeboxRequestMovieID.getDescriptor();
      }
      
      public se.qxx.jukebox.domain.JukeboxDomain.JukeboxRequestMovieID getDefaultInstanceForType() {
        return se.qxx.jukebox.domain.JukeboxDomain.JukeboxRequestMovieID.getDefaultInstance();
      }
      
      public se.qxx.jukebox.domain.JukeboxDomain.JukeboxRequestMovieID build() {
        se.qxx.jukebox.domain.JukeboxDomain.JukeboxRequestMovieID result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }
      
      private se.qxx.jukebox.domain.JukeboxDomain.JukeboxRequestMovieID buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        se.qxx.jukebox.domain.JukeboxDomain.JukeboxRequestMovieID result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return result;
      }
      
      public se.qxx.jukebox.domain.JukeboxDomain.JukeboxRequestMovieID buildPartial() {
        se.qxx.jukebox.domain.JukeboxDomain.JukeboxRequestMovieID result = new se.qxx.jukebox.domain.JukeboxDomain.JukeboxRequestMovieID(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.movieId_ = movieId_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof se.qxx.jukebox.domain.JukeboxDomain.JukeboxRequestMovieID) {
          return mergeFrom((se.qxx.jukebox.domain.JukeboxDomain.JukeboxRequestMovieID)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(se.qxx.jukebox.domain.JukeboxDomain.JukeboxRequestMovieID other) {
        if (other == se.qxx.jukebox.domain.JukeboxDomain.JukeboxRequestMovieID.getDefaultInstance()) return this;
        if (other.hasMovieId()) {
          setMovieId(other.getMovieId());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public final boolean isInitialized() {
        if (!hasMovieId()) {
          
          return false;
        }
        return true;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              onChanged();
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                onChanged();
                return this;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              movieId_ = input.readInt32();
              break;
            }
          }
        }
      }
      
      private int bitField0_;
      
      // required int32 movieId = 1;
      private int movieId_ ;
      public boolean hasMovieId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      public int getMovieId() {
        return movieId_;
      }
      public Builder setMovieId(int value) {
        bitField0_ |= 0x00000001;
        movieId_ = value;
        onChanged();
        return this;
      }
      public Builder clearMovieId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        movieId_ = 0;
        onChanged();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:se.qxx.jukebox.domain.JukeboxRequestMovieID)
    }
    
    static {
      defaultInstance = new JukeboxRequestMovieID(true);
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:se.qxx.jukebox.domain.JukeboxRequestMovieID)
  }
  
  public interface JukeboxRequestListMoviesOrBuilder
      extends com.google.protobuf.MessageOrBuilder {
    
    // optional string searchString = 2;
    boolean hasSearchString();
    String getSearchString();
  }
  public static final class JukeboxRequestListMovies extends
      com.google.protobuf.GeneratedMessage
      implements JukeboxRequestListMoviesOrBuilder {
    // Use JukeboxRequestListMovies.newBuilder() to construct.
    private JukeboxRequestListMovies(Builder builder) {
      super(builder);
    }
    private JukeboxRequestListMovies(boolean noInit) {}
    
    private static final JukeboxRequestListMovies defaultInstance;
    public static JukeboxRequestListMovies getDefaultInstance() {
      return defaultInstance;
    }
    
    public JukeboxRequestListMovies getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return se.qxx.jukebox.domain.JukeboxDomain.internal_static_se_qxx_jukebox_domain_JukeboxRequestListMovies_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return se.qxx.jukebox.domain.JukeboxDomain.internal_static_se_qxx_jukebox_domain_JukeboxRequestListMovies_fieldAccessorTable;
    }
    
    private int bitField0_;
    // optional string searchString = 2;
    public static final int SEARCHSTRING_FIELD_NUMBER = 2;
    private java.lang.Object searchString_;
    public boolean hasSearchString() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    public String getSearchString() {
      java.lang.Object ref = searchString_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        if (com.google.protobuf.Internal.isValidUtf8(bs)) {
          searchString_ = s;
        }
        return s;
      }
    }
    private com.google.protobuf.ByteString getSearchStringBytes() {
      java.lang.Object ref = searchString_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8((String) ref);
        searchString_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    
    private void initFields() {
      searchString_ = "";
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;
      
      memoizedIsInitialized = 1;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBytes(2, getSearchStringBytes());
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(2, getSearchStringBytes());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }
    
    public static se.qxx.jukebox.domain.JukeboxDomain.JukeboxRequestListMovies parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static se.qxx.jukebox.domain.JukeboxDomain.JukeboxRequestListMovies parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static se.qxx.jukebox.domain.JukeboxDomain.JukeboxRequestListMovies parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static se.qxx.jukebox.domain.JukeboxDomain.JukeboxRequestListMovies parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static se.qxx.jukebox.domain.JukeboxDomain.JukeboxRequestListMovies parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static se.qxx.jukebox.domain.JukeboxDomain.JukeboxRequestListMovies parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static se.qxx.jukebox.domain.JukeboxDomain.JukeboxRequestListMovies parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static se.qxx.jukebox.domain.JukeboxDomain.JukeboxRequestListMovies parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static se.qxx.jukebox.domain.JukeboxDomain.JukeboxRequestListMovies parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static se.qxx.jukebox.domain.JukeboxDomain.JukeboxRequestListMovies parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(se.qxx.jukebox.domain.JukeboxDomain.JukeboxRequestListMovies prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements se.qxx.jukebox.domain.JukeboxDomain.JukeboxRequestListMoviesOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return se.qxx.jukebox.domain.JukeboxDomain.internal_static_se_qxx_jukebox_domain_JukeboxRequestListMovies_descriptor;
      }
      
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return se.qxx.jukebox.domain.JukeboxDomain.internal_static_se_qxx_jukebox_domain_JukeboxRequestListMovies_fieldAccessorTable;
      }
      
      // Construct using se.qxx.jukebox.domain.JukeboxDomain.JukeboxRequestListMovies.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }
      
      private Builder(BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }
      
      public Builder clear() {
        super.clear();
        searchString_ = "";
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return se.qxx.jukebox.domain.JukeboxDomain.JukeboxRequestListMovies.getDescriptor();
      }
      
      public se.qxx.jukebox.domain.JukeboxDomain.JukeboxRequestListMovies getDefaultInstanceForType() {
        return se.qxx.jukebox.domain.JukeboxDomain.JukeboxRequestListMovies.getDefaultInstance();
      }
      
      public se.qxx.jukebox.domain.JukeboxDomain.JukeboxRequestListMovies build() {
        se.qxx.jukebox.domain.JukeboxDomain.JukeboxRequestListMovies result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }
      
      private se.qxx.jukebox.domain.JukeboxDomain.JukeboxRequestListMovies buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        se.qxx.jukebox.domain.JukeboxDomain.JukeboxRequestListMovies result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return result;
      }
      
      public se.qxx.jukebox.domain.JukeboxDomain.JukeboxRequestListMovies buildPartial() {
        se.qxx.jukebox.domain.JukeboxDomain.JukeboxRequestListMovies result = new se.qxx.jukebox.domain.JukeboxDomain.JukeboxRequestListMovies(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.searchString_ = searchString_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof se.qxx.jukebox.domain.JukeboxDomain.JukeboxRequestListMovies) {
          return mergeFrom((se.qxx.jukebox.domain.JukeboxDomain.JukeboxRequestListMovies)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(se.qxx.jukebox.domain.JukeboxDomain.JukeboxRequestListMovies other) {
        if (other == se.qxx.jukebox.domain.JukeboxDomain.JukeboxRequestListMovies.getDefaultInstance()) return this;
        if (other.hasSearchString()) {
          setSearchString(other.getSearchString());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public final boolean isInitialized() {
        return true;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              onChanged();
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                onChanged();
                return this;
              }
              break;
            }
            case 18: {
              bitField0_ |= 0x00000001;
              searchString_ = input.readBytes();
              break;
            }
          }
        }
      }
      
      private int bitField0_;
      
      // optional string searchString = 2;
      private java.lang.Object searchString_ = "";
      public boolean hasSearchString() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      public String getSearchString() {
        java.lang.Object ref = searchString_;
        if (!(ref instanceof String)) {
          String s = ((com.google.protobuf.ByteString) ref).toStringUtf8();
          searchString_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      public Builder setSearchString(String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        searchString_ = value;
        onChanged();
        return this;
      }
      public Builder clearSearchString() {
        bitField0_ = (bitField0_ & ~0x00000001);
        searchString_ = getDefaultInstance().getSearchString();
        onChanged();
        return this;
      }
      void setSearchString(com.google.protobuf.ByteString value) {
        bitField0_ |= 0x00000001;
        searchString_ = value;
        onChanged();
      }
      
      // @@protoc_insertion_point(builder_scope:se.qxx.jukebox.domain.JukeboxRequestListMovies)
    }
    
    static {
      defaultInstance = new JukeboxRequestListMovies(true);
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:se.qxx.jukebox.domain.JukeboxRequestListMovies)
  }
  
  public interface JukeboxRequestStartMovieOrBuilder
      extends com.google.protobuf.MessageOrBuilder {
    
    // required int32 movieId = 1;
    boolean hasMovieId();
    int getMovieId();
    
    // optional string playerName = 2;
    boolean hasPlayerName();
    String getPlayerName();
  }
  public static final class JukeboxRequestStartMovie extends
      com.google.protobuf.GeneratedMessage
      implements JukeboxRequestStartMovieOrBuilder {
    // Use JukeboxRequestStartMovie.newBuilder() to construct.
    private JukeboxRequestStartMovie(Builder builder) {
      super(builder);
    }
    private JukeboxRequestStartMovie(boolean noInit) {}
    
    private static final JukeboxRequestStartMovie defaultInstance;
    public static JukeboxRequestStartMovie getDefaultInstance() {
      return defaultInstance;
    }
    
    public JukeboxRequestStartMovie getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return se.qxx.jukebox.domain.JukeboxDomain.internal_static_se_qxx_jukebox_domain_JukeboxRequestStartMovie_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return se.qxx.jukebox.domain.JukeboxDomain.internal_static_se_qxx_jukebox_domain_JukeboxRequestStartMovie_fieldAccessorTable;
    }
    
    private int bitField0_;
    // required int32 movieId = 1;
    public static final int MOVIEID_FIELD_NUMBER = 1;
    private int movieId_;
    public boolean hasMovieId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    public int getMovieId() {
      return movieId_;
    }
    
    // optional string playerName = 2;
    public static final int PLAYERNAME_FIELD_NUMBER = 2;
    private java.lang.Object playerName_;
    public boolean hasPlayerName() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    public String getPlayerName() {
      java.lang.Object ref = playerName_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        if (com.google.protobuf.Internal.isValidUtf8(bs)) {
          playerName_ = s;
        }
        return s;
      }
    }
    private com.google.protobuf.ByteString getPlayerNameBytes() {
      java.lang.Object ref = playerName_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8((String) ref);
        playerName_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    
    private void initFields() {
      movieId_ = 0;
      playerName_ = "";
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;
      
      if (!hasMovieId()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, movieId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeBytes(2, getPlayerNameBytes());
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, movieId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(2, getPlayerNameBytes());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }
    
    public static se.qxx.jukebox.domain.JukeboxDomain.JukeboxRequestStartMovie parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static se.qxx.jukebox.domain.JukeboxDomain.JukeboxRequestStartMovie parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static se.qxx.jukebox.domain.JukeboxDomain.JukeboxRequestStartMovie parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static se.qxx.jukebox.domain.JukeboxDomain.JukeboxRequestStartMovie parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static se.qxx.jukebox.domain.JukeboxDomain.JukeboxRequestStartMovie parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static se.qxx.jukebox.domain.JukeboxDomain.JukeboxRequestStartMovie parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static se.qxx.jukebox.domain.JukeboxDomain.JukeboxRequestStartMovie parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static se.qxx.jukebox.domain.JukeboxDomain.JukeboxRequestStartMovie parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static se.qxx.jukebox.domain.JukeboxDomain.JukeboxRequestStartMovie parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static se.qxx.jukebox.domain.JukeboxDomain.JukeboxRequestStartMovie parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(se.qxx.jukebox.domain.JukeboxDomain.JukeboxRequestStartMovie prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements se.qxx.jukebox.domain.JukeboxDomain.JukeboxRequestStartMovieOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return se.qxx.jukebox.domain.JukeboxDomain.internal_static_se_qxx_jukebox_domain_JukeboxRequestStartMovie_descriptor;
      }
      
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return se.qxx.jukebox.domain.JukeboxDomain.internal_static_se_qxx_jukebox_domain_JukeboxRequestStartMovie_fieldAccessorTable;
      }
      
      // Construct using se.qxx.jukebox.domain.JukeboxDomain.JukeboxRequestStartMovie.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }
      
      private Builder(BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }
      
      public Builder clear() {
        super.clear();
        movieId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        playerName_ = "";
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return se.qxx.jukebox.domain.JukeboxDomain.JukeboxRequestStartMovie.getDescriptor();
      }
      
      public se.qxx.jukebox.domain.JukeboxDomain.JukeboxRequestStartMovie getDefaultInstanceForType() {
        return se.qxx.jukebox.domain.JukeboxDomain.JukeboxRequestStartMovie.getDefaultInstance();
      }
      
      public se.qxx.jukebox.domain.JukeboxDomain.JukeboxRequestStartMovie build() {
        se.qxx.jukebox.domain.JukeboxDomain.JukeboxRequestStartMovie result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }
      
      private se.qxx.jukebox.domain.JukeboxDomain.JukeboxRequestStartMovie buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        se.qxx.jukebox.domain.JukeboxDomain.JukeboxRequestStartMovie result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return result;
      }
      
      public se.qxx.jukebox.domain.JukeboxDomain.JukeboxRequestStartMovie buildPartial() {
        se.qxx.jukebox.domain.JukeboxDomain.JukeboxRequestStartMovie result = new se.qxx.jukebox.domain.JukeboxDomain.JukeboxRequestStartMovie(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.movieId_ = movieId_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.playerName_ = playerName_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof se.qxx.jukebox.domain.JukeboxDomain.JukeboxRequestStartMovie) {
          return mergeFrom((se.qxx.jukebox.domain.JukeboxDomain.JukeboxRequestStartMovie)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(se.qxx.jukebox.domain.JukeboxDomain.JukeboxRequestStartMovie other) {
        if (other == se.qxx.jukebox.domain.JukeboxDomain.JukeboxRequestStartMovie.getDefaultInstance()) return this;
        if (other.hasMovieId()) {
          setMovieId(other.getMovieId());
        }
        if (other.hasPlayerName()) {
          setPlayerName(other.getPlayerName());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public final boolean isInitialized() {
        if (!hasMovieId()) {
          
          return false;
        }
        return true;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              onChanged();
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                onChanged();
                return this;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              movieId_ = input.readInt32();
              break;
            }
            case 18: {
              bitField0_ |= 0x00000002;
              playerName_ = input.readBytes();
              break;
            }
          }
        }
      }
      
      private int bitField0_;
      
      // required int32 movieId = 1;
      private int movieId_ ;
      public boolean hasMovieId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      public int getMovieId() {
        return movieId_;
      }
      public Builder setMovieId(int value) {
        bitField0_ |= 0x00000001;
        movieId_ = value;
        onChanged();
        return this;
      }
      public Builder clearMovieId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        movieId_ = 0;
        onChanged();
        return this;
      }
      
      // optional string playerName = 2;
      private java.lang.Object playerName_ = "";
      public boolean hasPlayerName() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      public String getPlayerName() {
        java.lang.Object ref = playerName_;
        if (!(ref instanceof String)) {
          String s = ((com.google.protobuf.ByteString) ref).toStringUtf8();
          playerName_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      public Builder setPlayerName(String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        playerName_ = value;
        onChanged();
        return this;
      }
      public Builder clearPlayerName() {
        bitField0_ = (bitField0_ & ~0x00000002);
        playerName_ = getDefaultInstance().getPlayerName();
        onChanged();
        return this;
      }
      void setPlayerName(com.google.protobuf.ByteString value) {
        bitField0_ |= 0x00000002;
        playerName_ = value;
        onChanged();
      }
      
      // @@protoc_insertion_point(builder_scope:se.qxx.jukebox.domain.JukeboxRequestStartMovie)
    }
    
    static {
      defaultInstance = new JukeboxRequestStartMovie(true);
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:se.qxx.jukebox.domain.JukeboxRequestStartMovie)
  }
  
  public interface JukeboxRequestSeekOrBuilder
      extends com.google.protobuf.MessageOrBuilder {
    
    // required string playerName = 1;
    boolean hasPlayerName();
    String getPlayerName();
    
    // required int32 seconds = 2;
    boolean hasSeconds();
    int getSeconds();
  }
  public static final class JukeboxRequestSeek extends
      com.google.protobuf.GeneratedMessage
      implements JukeboxRequestSeekOrBuilder {
    // Use JukeboxRequestSeek.newBuilder() to construct.
    private JukeboxRequestSeek(Builder builder) {
      super(builder);
    }
    private JukeboxRequestSeek(boolean noInit) {}
    
    private static final JukeboxRequestSeek defaultInstance;
    public static JukeboxRequestSeek getDefaultInstance() {
      return defaultInstance;
    }
    
    public JukeboxRequestSeek getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return se.qxx.jukebox.domain.JukeboxDomain.internal_static_se_qxx_jukebox_domain_JukeboxRequestSeek_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return se.qxx.jukebox.domain.JukeboxDomain.internal_static_se_qxx_jukebox_domain_JukeboxRequestSeek_fieldAccessorTable;
    }
    
    private int bitField0_;
    // required string playerName = 1;
    public static final int PLAYERNAME_FIELD_NUMBER = 1;
    private java.lang.Object playerName_;
    public boolean hasPlayerName() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    public String getPlayerName() {
      java.lang.Object ref = playerName_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        if (com.google.protobuf.Internal.isValidUtf8(bs)) {
          playerName_ = s;
        }
        return s;
      }
    }
    private com.google.protobuf.ByteString getPlayerNameBytes() {
      java.lang.Object ref = playerName_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8((String) ref);
        playerName_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    
    // required int32 seconds = 2;
    public static final int SECONDS_FIELD_NUMBER = 2;
    private int seconds_;
    public boolean hasSeconds() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    public int getSeconds() {
      return seconds_;
    }
    
    private void initFields() {
      playerName_ = "";
      seconds_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;
      
      if (!hasPlayerName()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasSeconds()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBytes(1, getPlayerNameBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(2, seconds_);
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, getPlayerNameBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, seconds_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }
    
    public static se.qxx.jukebox.domain.JukeboxDomain.JukeboxRequestSeek parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static se.qxx.jukebox.domain.JukeboxDomain.JukeboxRequestSeek parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static se.qxx.jukebox.domain.JukeboxDomain.JukeboxRequestSeek parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static se.qxx.jukebox.domain.JukeboxDomain.JukeboxRequestSeek parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static se.qxx.jukebox.domain.JukeboxDomain.JukeboxRequestSeek parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static se.qxx.jukebox.domain.JukeboxDomain.JukeboxRequestSeek parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static se.qxx.jukebox.domain.JukeboxDomain.JukeboxRequestSeek parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static se.qxx.jukebox.domain.JukeboxDomain.JukeboxRequestSeek parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static se.qxx.jukebox.domain.JukeboxDomain.JukeboxRequestSeek parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static se.qxx.jukebox.domain.JukeboxDomain.JukeboxRequestSeek parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(se.qxx.jukebox.domain.JukeboxDomain.JukeboxRequestSeek prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements se.qxx.jukebox.domain.JukeboxDomain.JukeboxRequestSeekOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return se.qxx.jukebox.domain.JukeboxDomain.internal_static_se_qxx_jukebox_domain_JukeboxRequestSeek_descriptor;
      }
      
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return se.qxx.jukebox.domain.JukeboxDomain.internal_static_se_qxx_jukebox_domain_JukeboxRequestSeek_fieldAccessorTable;
      }
      
      // Construct using se.qxx.jukebox.domain.JukeboxDomain.JukeboxRequestSeek.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }
      
      private Builder(BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }
      
      public Builder clear() {
        super.clear();
        playerName_ = "";
        bitField0_ = (bitField0_ & ~0x00000001);
        seconds_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return se.qxx.jukebox.domain.JukeboxDomain.JukeboxRequestSeek.getDescriptor();
      }
      
      public se.qxx.jukebox.domain.JukeboxDomain.JukeboxRequestSeek getDefaultInstanceForType() {
        return se.qxx.jukebox.domain.JukeboxDomain.JukeboxRequestSeek.getDefaultInstance();
      }
      
      public se.qxx.jukebox.domain.JukeboxDomain.JukeboxRequestSeek build() {
        se.qxx.jukebox.domain.JukeboxDomain.JukeboxRequestSeek result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }
      
      private se.qxx.jukebox.domain.JukeboxDomain.JukeboxRequestSeek buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        se.qxx.jukebox.domain.JukeboxDomain.JukeboxRequestSeek result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return result;
      }
      
      public se.qxx.jukebox.domain.JukeboxDomain.JukeboxRequestSeek buildPartial() {
        se.qxx.jukebox.domain.JukeboxDomain.JukeboxRequestSeek result = new se.qxx.jukebox.domain.JukeboxDomain.JukeboxRequestSeek(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.playerName_ = playerName_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.seconds_ = seconds_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof se.qxx.jukebox.domain.JukeboxDomain.JukeboxRequestSeek) {
          return mergeFrom((se.qxx.jukebox.domain.JukeboxDomain.JukeboxRequestSeek)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(se.qxx.jukebox.domain.JukeboxDomain.JukeboxRequestSeek other) {
        if (other == se.qxx.jukebox.domain.JukeboxDomain.JukeboxRequestSeek.getDefaultInstance()) return this;
        if (other.hasPlayerName()) {
          setPlayerName(other.getPlayerName());
        }
        if (other.hasSeconds()) {
          setSeconds(other.getSeconds());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public final boolean isInitialized() {
        if (!hasPlayerName()) {
          
          return false;
        }
        if (!hasSeconds()) {
          
          return false;
        }
        return true;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              onChanged();
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                onChanged();
                return this;
              }
              break;
            }
            case 10: {
              bitField0_ |= 0x00000001;
              playerName_ = input.readBytes();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              seconds_ = input.readInt32();
              break;
            }
          }
        }
      }
      
      private int bitField0_;
      
      // required string playerName = 1;
      private java.lang.Object playerName_ = "";
      public boolean hasPlayerName() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      public String getPlayerName() {
        java.lang.Object ref = playerName_;
        if (!(ref instanceof String)) {
          String s = ((com.google.protobuf.ByteString) ref).toStringUtf8();
          playerName_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      public Builder setPlayerName(String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        playerName_ = value;
        onChanged();
        return this;
      }
      public Builder clearPlayerName() {
        bitField0_ = (bitField0_ & ~0x00000001);
        playerName_ = getDefaultInstance().getPlayerName();
        onChanged();
        return this;
      }
      void setPlayerName(com.google.protobuf.ByteString value) {
        bitField0_ |= 0x00000001;
        playerName_ = value;
        onChanged();
      }
      
      // required int32 seconds = 2;
      private int seconds_ ;
      public boolean hasSeconds() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      public int getSeconds() {
        return seconds_;
      }
      public Builder setSeconds(int value) {
        bitField0_ |= 0x00000002;
        seconds_ = value;
        onChanged();
        return this;
      }
      public Builder clearSeconds() {
        bitField0_ = (bitField0_ & ~0x00000002);
        seconds_ = 0;
        onChanged();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:se.qxx.jukebox.domain.JukeboxRequestSeek)
    }
    
    static {
      defaultInstance = new JukeboxRequestSeek(true);
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:se.qxx.jukebox.domain.JukeboxRequestSeek)
  }
  
  public interface JukeboxRequestListSubtitlesOrBuilder
      extends com.google.protobuf.MessageOrBuilder {
    
    // required int32 mediaId = 1;
    boolean hasMediaId();
    int getMediaId();
  }
  public static final class JukeboxRequestListSubtitles extends
      com.google.protobuf.GeneratedMessage
      implements JukeboxRequestListSubtitlesOrBuilder {
    // Use JukeboxRequestListSubtitles.newBuilder() to construct.
    private JukeboxRequestListSubtitles(Builder builder) {
      super(builder);
    }
    private JukeboxRequestListSubtitles(boolean noInit) {}
    
    private static final JukeboxRequestListSubtitles defaultInstance;
    public static JukeboxRequestListSubtitles getDefaultInstance() {
      return defaultInstance;
    }
    
    public JukeboxRequestListSubtitles getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return se.qxx.jukebox.domain.JukeboxDomain.internal_static_se_qxx_jukebox_domain_JukeboxRequestListSubtitles_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return se.qxx.jukebox.domain.JukeboxDomain.internal_static_se_qxx_jukebox_domain_JukeboxRequestListSubtitles_fieldAccessorTable;
    }
    
    private int bitField0_;
    // required int32 mediaId = 1;
    public static final int MEDIAID_FIELD_NUMBER = 1;
    private int mediaId_;
    public boolean hasMediaId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    public int getMediaId() {
      return mediaId_;
    }
    
    private void initFields() {
      mediaId_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;
      
      if (!hasMediaId()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, mediaId_);
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, mediaId_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }
    
    public static se.qxx.jukebox.domain.JukeboxDomain.JukeboxRequestListSubtitles parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static se.qxx.jukebox.domain.JukeboxDomain.JukeboxRequestListSubtitles parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static se.qxx.jukebox.domain.JukeboxDomain.JukeboxRequestListSubtitles parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static se.qxx.jukebox.domain.JukeboxDomain.JukeboxRequestListSubtitles parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static se.qxx.jukebox.domain.JukeboxDomain.JukeboxRequestListSubtitles parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static se.qxx.jukebox.domain.JukeboxDomain.JukeboxRequestListSubtitles parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static se.qxx.jukebox.domain.JukeboxDomain.JukeboxRequestListSubtitles parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static se.qxx.jukebox.domain.JukeboxDomain.JukeboxRequestListSubtitles parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static se.qxx.jukebox.domain.JukeboxDomain.JukeboxRequestListSubtitles parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static se.qxx.jukebox.domain.JukeboxDomain.JukeboxRequestListSubtitles parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(se.qxx.jukebox.domain.JukeboxDomain.JukeboxRequestListSubtitles prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements se.qxx.jukebox.domain.JukeboxDomain.JukeboxRequestListSubtitlesOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return se.qxx.jukebox.domain.JukeboxDomain.internal_static_se_qxx_jukebox_domain_JukeboxRequestListSubtitles_descriptor;
      }
      
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return se.qxx.jukebox.domain.JukeboxDomain.internal_static_se_qxx_jukebox_domain_JukeboxRequestListSubtitles_fieldAccessorTable;
      }
      
      // Construct using se.qxx.jukebox.domain.JukeboxDomain.JukeboxRequestListSubtitles.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }
      
      private Builder(BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }
      
      public Builder clear() {
        super.clear();
        mediaId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return se.qxx.jukebox.domain.JukeboxDomain.JukeboxRequestListSubtitles.getDescriptor();
      }
      
      public se.qxx.jukebox.domain.JukeboxDomain.JukeboxRequestListSubtitles getDefaultInstanceForType() {
        return se.qxx.jukebox.domain.JukeboxDomain.JukeboxRequestListSubtitles.getDefaultInstance();
      }
      
      public se.qxx.jukebox.domain.JukeboxDomain.JukeboxRequestListSubtitles build() {
        se.qxx.jukebox.domain.JukeboxDomain.JukeboxRequestListSubtitles result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }
      
      private se.qxx.jukebox.domain.JukeboxDomain.JukeboxRequestListSubtitles buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        se.qxx.jukebox.domain.JukeboxDomain.JukeboxRequestListSubtitles result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return result;
      }
      
      public se.qxx.jukebox.domain.JukeboxDomain.JukeboxRequestListSubtitles buildPartial() {
        se.qxx.jukebox.domain.JukeboxDomain.JukeboxRequestListSubtitles result = new se.qxx.jukebox.domain.JukeboxDomain.JukeboxRequestListSubtitles(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.mediaId_ = mediaId_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof se.qxx.jukebox.domain.JukeboxDomain.JukeboxRequestListSubtitles) {
          return mergeFrom((se.qxx.jukebox.domain.JukeboxDomain.JukeboxRequestListSubtitles)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(se.qxx.jukebox.domain.JukeboxDomain.JukeboxRequestListSubtitles other) {
        if (other == se.qxx.jukebox.domain.JukeboxDomain.JukeboxRequestListSubtitles.getDefaultInstance()) return this;
        if (other.hasMediaId()) {
          setMediaId(other.getMediaId());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public final boolean isInitialized() {
        if (!hasMediaId()) {
          
          return false;
        }
        return true;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              onChanged();
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                onChanged();
                return this;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              mediaId_ = input.readInt32();
              break;
            }
          }
        }
      }
      
      private int bitField0_;
      
      // required int32 mediaId = 1;
      private int mediaId_ ;
      public boolean hasMediaId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      public int getMediaId() {
        return mediaId_;
      }
      public Builder setMediaId(int value) {
        bitField0_ |= 0x00000001;
        mediaId_ = value;
        onChanged();
        return this;
      }
      public Builder clearMediaId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        mediaId_ = 0;
        onChanged();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:se.qxx.jukebox.domain.JukeboxRequestListSubtitles)
    }
    
    static {
      defaultInstance = new JukeboxRequestListSubtitles(true);
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:se.qxx.jukebox.domain.JukeboxRequestListSubtitles)
  }
  
  public interface JukeboxRequestSetSubtitleOrBuilder
      extends com.google.protobuf.MessageOrBuilder {
    
    // required string playerName = 1;
    boolean hasPlayerName();
    String getPlayerName();
    
    // required int32 mediaID = 2;
    boolean hasMediaID();
    int getMediaID();
    
    // required string subtitleDescription = 3;
    boolean hasSubtitleDescription();
    String getSubtitleDescription();
  }
  public static final class JukeboxRequestSetSubtitle extends
      com.google.protobuf.GeneratedMessage
      implements JukeboxRequestSetSubtitleOrBuilder {
    // Use JukeboxRequestSetSubtitle.newBuilder() to construct.
    private JukeboxRequestSetSubtitle(Builder builder) {
      super(builder);
    }
    private JukeboxRequestSetSubtitle(boolean noInit) {}
    
    private static final JukeboxRequestSetSubtitle defaultInstance;
    public static JukeboxRequestSetSubtitle getDefaultInstance() {
      return defaultInstance;
    }
    
    public JukeboxRequestSetSubtitle getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return se.qxx.jukebox.domain.JukeboxDomain.internal_static_se_qxx_jukebox_domain_JukeboxRequestSetSubtitle_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return se.qxx.jukebox.domain.JukeboxDomain.internal_static_se_qxx_jukebox_domain_JukeboxRequestSetSubtitle_fieldAccessorTable;
    }
    
    private int bitField0_;
    // required string playerName = 1;
    public static final int PLAYERNAME_FIELD_NUMBER = 1;
    private java.lang.Object playerName_;
    public boolean hasPlayerName() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    public String getPlayerName() {
      java.lang.Object ref = playerName_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        if (com.google.protobuf.Internal.isValidUtf8(bs)) {
          playerName_ = s;
        }
        return s;
      }
    }
    private com.google.protobuf.ByteString getPlayerNameBytes() {
      java.lang.Object ref = playerName_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8((String) ref);
        playerName_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    
    // required int32 mediaID = 2;
    public static final int MEDIAID_FIELD_NUMBER = 2;
    private int mediaID_;
    public boolean hasMediaID() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    public int getMediaID() {
      return mediaID_;
    }
    
    // required string subtitleDescription = 3;
    public static final int SUBTITLEDESCRIPTION_FIELD_NUMBER = 3;
    private java.lang.Object subtitleDescription_;
    public boolean hasSubtitleDescription() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    public String getSubtitleDescription() {
      java.lang.Object ref = subtitleDescription_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        if (com.google.protobuf.Internal.isValidUtf8(bs)) {
          subtitleDescription_ = s;
        }
        return s;
      }
    }
    private com.google.protobuf.ByteString getSubtitleDescriptionBytes() {
      java.lang.Object ref = subtitleDescription_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8((String) ref);
        subtitleDescription_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    
    private void initFields() {
      playerName_ = "";
      mediaID_ = 0;
      subtitleDescription_ = "";
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;
      
      if (!hasPlayerName()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasMediaID()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasSubtitleDescription()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBytes(1, getPlayerNameBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(2, mediaID_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeBytes(3, getSubtitleDescriptionBytes());
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, getPlayerNameBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, mediaID_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(3, getSubtitleDescriptionBytes());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }
    
    public static se.qxx.jukebox.domain.JukeboxDomain.JukeboxRequestSetSubtitle parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static se.qxx.jukebox.domain.JukeboxDomain.JukeboxRequestSetSubtitle parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static se.qxx.jukebox.domain.JukeboxDomain.JukeboxRequestSetSubtitle parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static se.qxx.jukebox.domain.JukeboxDomain.JukeboxRequestSetSubtitle parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static se.qxx.jukebox.domain.JukeboxDomain.JukeboxRequestSetSubtitle parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static se.qxx.jukebox.domain.JukeboxDomain.JukeboxRequestSetSubtitle parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static se.qxx.jukebox.domain.JukeboxDomain.JukeboxRequestSetSubtitle parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static se.qxx.jukebox.domain.JukeboxDomain.JukeboxRequestSetSubtitle parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static se.qxx.jukebox.domain.JukeboxDomain.JukeboxRequestSetSubtitle parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static se.qxx.jukebox.domain.JukeboxDomain.JukeboxRequestSetSubtitle parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(se.qxx.jukebox.domain.JukeboxDomain.JukeboxRequestSetSubtitle prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements se.qxx.jukebox.domain.JukeboxDomain.JukeboxRequestSetSubtitleOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return se.qxx.jukebox.domain.JukeboxDomain.internal_static_se_qxx_jukebox_domain_JukeboxRequestSetSubtitle_descriptor;
      }
      
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return se.qxx.jukebox.domain.JukeboxDomain.internal_static_se_qxx_jukebox_domain_JukeboxRequestSetSubtitle_fieldAccessorTable;
      }
      
      // Construct using se.qxx.jukebox.domain.JukeboxDomain.JukeboxRequestSetSubtitle.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }
      
      private Builder(BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }
      
      public Builder clear() {
        super.clear();
        playerName_ = "";
        bitField0_ = (bitField0_ & ~0x00000001);
        mediaID_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        subtitleDescription_ = "";
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return se.qxx.jukebox.domain.JukeboxDomain.JukeboxRequestSetSubtitle.getDescriptor();
      }
      
      public se.qxx.jukebox.domain.JukeboxDomain.JukeboxRequestSetSubtitle getDefaultInstanceForType() {
        return se.qxx.jukebox.domain.JukeboxDomain.JukeboxRequestSetSubtitle.getDefaultInstance();
      }
      
      public se.qxx.jukebox.domain.JukeboxDomain.JukeboxRequestSetSubtitle build() {
        se.qxx.jukebox.domain.JukeboxDomain.JukeboxRequestSetSubtitle result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }
      
      private se.qxx.jukebox.domain.JukeboxDomain.JukeboxRequestSetSubtitle buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        se.qxx.jukebox.domain.JukeboxDomain.JukeboxRequestSetSubtitle result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return result;
      }
      
      public se.qxx.jukebox.domain.JukeboxDomain.JukeboxRequestSetSubtitle buildPartial() {
        se.qxx.jukebox.domain.JukeboxDomain.JukeboxRequestSetSubtitle result = new se.qxx.jukebox.domain.JukeboxDomain.JukeboxRequestSetSubtitle(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.playerName_ = playerName_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.mediaID_ = mediaID_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.subtitleDescription_ = subtitleDescription_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof se.qxx.jukebox.domain.JukeboxDomain.JukeboxRequestSetSubtitle) {
          return mergeFrom((se.qxx.jukebox.domain.JukeboxDomain.JukeboxRequestSetSubtitle)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(se.qxx.jukebox.domain.JukeboxDomain.JukeboxRequestSetSubtitle other) {
        if (other == se.qxx.jukebox.domain.JukeboxDomain.JukeboxRequestSetSubtitle.getDefaultInstance()) return this;
        if (other.hasPlayerName()) {
          setPlayerName(other.getPlayerName());
        }
        if (other.hasMediaID()) {
          setMediaID(other.getMediaID());
        }
        if (other.hasSubtitleDescription()) {
          setSubtitleDescription(other.getSubtitleDescription());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public final boolean isInitialized() {
        if (!hasPlayerName()) {
          
          return false;
        }
        if (!hasMediaID()) {
          
          return false;
        }
        if (!hasSubtitleDescription()) {
          
          return false;
        }
        return true;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              onChanged();
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                onChanged();
                return this;
              }
              break;
            }
            case 10: {
              bitField0_ |= 0x00000001;
              playerName_ = input.readBytes();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              mediaID_ = input.readInt32();
              break;
            }
            case 26: {
              bitField0_ |= 0x00000004;
              subtitleDescription_ = input.readBytes();
              break;
            }
          }
        }
      }
      
      private int bitField0_;
      
      // required string playerName = 1;
      private java.lang.Object playerName_ = "";
      public boolean hasPlayerName() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      public String getPlayerName() {
        java.lang.Object ref = playerName_;
        if (!(ref instanceof String)) {
          String s = ((com.google.protobuf.ByteString) ref).toStringUtf8();
          playerName_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      public Builder setPlayerName(String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        playerName_ = value;
        onChanged();
        return this;
      }
      public Builder clearPlayerName() {
        bitField0_ = (bitField0_ & ~0x00000001);
        playerName_ = getDefaultInstance().getPlayerName();
        onChanged();
        return this;
      }
      void setPlayerName(com.google.protobuf.ByteString value) {
        bitField0_ |= 0x00000001;
        playerName_ = value;
        onChanged();
      }
      
      // required int32 mediaID = 2;
      private int mediaID_ ;
      public boolean hasMediaID() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      public int getMediaID() {
        return mediaID_;
      }
      public Builder setMediaID(int value) {
        bitField0_ |= 0x00000002;
        mediaID_ = value;
        onChanged();
        return this;
      }
      public Builder clearMediaID() {
        bitField0_ = (bitField0_ & ~0x00000002);
        mediaID_ = 0;
        onChanged();
        return this;
      }
      
      // required string subtitleDescription = 3;
      private java.lang.Object subtitleDescription_ = "";
      public boolean hasSubtitleDescription() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      public String getSubtitleDescription() {
        java.lang.Object ref = subtitleDescription_;
        if (!(ref instanceof String)) {
          String s = ((com.google.protobuf.ByteString) ref).toStringUtf8();
          subtitleDescription_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      public Builder setSubtitleDescription(String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
        subtitleDescription_ = value;
        onChanged();
        return this;
      }
      public Builder clearSubtitleDescription() {
        bitField0_ = (bitField0_ & ~0x00000004);
        subtitleDescription_ = getDefaultInstance().getSubtitleDescription();
        onChanged();
        return this;
      }
      void setSubtitleDescription(com.google.protobuf.ByteString value) {
        bitField0_ |= 0x00000004;
        subtitleDescription_ = value;
        onChanged();
      }
      
      // @@protoc_insertion_point(builder_scope:se.qxx.jukebox.domain.JukeboxRequestSetSubtitle)
    }
    
    static {
      defaultInstance = new JukeboxRequestSetSubtitle(true);
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:se.qxx.jukebox.domain.JukeboxRequestSetSubtitle)
  }
  
  public interface JukeboxFrontStartMovieOrBuilder
      extends com.google.protobuf.MessageOrBuilder {
    
    // required string mrl = 1;
    boolean hasMrl();
    String getMrl();
    
    // optional string subFile = 2;
    boolean hasSubFile();
    String getSubFile();
  }
  public static final class JukeboxFrontStartMovie extends
      com.google.protobuf.GeneratedMessage
      implements JukeboxFrontStartMovieOrBuilder {
    // Use JukeboxFrontStartMovie.newBuilder() to construct.
    private JukeboxFrontStartMovie(Builder builder) {
      super(builder);
    }
    private JukeboxFrontStartMovie(boolean noInit) {}
    
    private static final JukeboxFrontStartMovie defaultInstance;
    public static JukeboxFrontStartMovie getDefaultInstance() {
      return defaultInstance;
    }
    
    public JukeboxFrontStartMovie getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return se.qxx.jukebox.domain.JukeboxDomain.internal_static_se_qxx_jukebox_domain_JukeboxFrontStartMovie_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return se.qxx.jukebox.domain.JukeboxDomain.internal_static_se_qxx_jukebox_domain_JukeboxFrontStartMovie_fieldAccessorTable;
    }
    
    private int bitField0_;
    // required string mrl = 1;
    public static final int MRL_FIELD_NUMBER = 1;
    private java.lang.Object mrl_;
    public boolean hasMrl() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    public String getMrl() {
      java.lang.Object ref = mrl_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        if (com.google.protobuf.Internal.isValidUtf8(bs)) {
          mrl_ = s;
        }
        return s;
      }
    }
    private com.google.protobuf.ByteString getMrlBytes() {
      java.lang.Object ref = mrl_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8((String) ref);
        mrl_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    
    // optional string subFile = 2;
    public static final int SUBFILE_FIELD_NUMBER = 2;
    private java.lang.Object subFile_;
    public boolean hasSubFile() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    public String getSubFile() {
      java.lang.Object ref = subFile_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        if (com.google.protobuf.Internal.isValidUtf8(bs)) {
          subFile_ = s;
        }
        return s;
      }
    }
    private com.google.protobuf.ByteString getSubFileBytes() {
      java.lang.Object ref = subFile_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8((String) ref);
        subFile_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    
    private void initFields() {
      mrl_ = "";
      subFile_ = "";
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;
      
      if (!hasMrl()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBytes(1, getMrlBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeBytes(2, getSubFileBytes());
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, getMrlBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(2, getSubFileBytes());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }
    
    public static se.qxx.jukebox.domain.JukeboxDomain.JukeboxFrontStartMovie parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static se.qxx.jukebox.domain.JukeboxDomain.JukeboxFrontStartMovie parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static se.qxx.jukebox.domain.JukeboxDomain.JukeboxFrontStartMovie parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static se.qxx.jukebox.domain.JukeboxDomain.JukeboxFrontStartMovie parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static se.qxx.jukebox.domain.JukeboxDomain.JukeboxFrontStartMovie parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static se.qxx.jukebox.domain.JukeboxDomain.JukeboxFrontStartMovie parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static se.qxx.jukebox.domain.JukeboxDomain.JukeboxFrontStartMovie parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static se.qxx.jukebox.domain.JukeboxDomain.JukeboxFrontStartMovie parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static se.qxx.jukebox.domain.JukeboxDomain.JukeboxFrontStartMovie parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static se.qxx.jukebox.domain.JukeboxDomain.JukeboxFrontStartMovie parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(se.qxx.jukebox.domain.JukeboxDomain.JukeboxFrontStartMovie prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements se.qxx.jukebox.domain.JukeboxDomain.JukeboxFrontStartMovieOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return se.qxx.jukebox.domain.JukeboxDomain.internal_static_se_qxx_jukebox_domain_JukeboxFrontStartMovie_descriptor;
      }
      
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return se.qxx.jukebox.domain.JukeboxDomain.internal_static_se_qxx_jukebox_domain_JukeboxFrontStartMovie_fieldAccessorTable;
      }
      
      // Construct using se.qxx.jukebox.domain.JukeboxDomain.JukeboxFrontStartMovie.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }
      
      private Builder(BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }
      
      public Builder clear() {
        super.clear();
        mrl_ = "";
        bitField0_ = (bitField0_ & ~0x00000001);
        subFile_ = "";
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return se.qxx.jukebox.domain.JukeboxDomain.JukeboxFrontStartMovie.getDescriptor();
      }
      
      public se.qxx.jukebox.domain.JukeboxDomain.JukeboxFrontStartMovie getDefaultInstanceForType() {
        return se.qxx.jukebox.domain.JukeboxDomain.JukeboxFrontStartMovie.getDefaultInstance();
      }
      
      public se.qxx.jukebox.domain.JukeboxDomain.JukeboxFrontStartMovie build() {
        se.qxx.jukebox.domain.JukeboxDomain.JukeboxFrontStartMovie result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }
      
      private se.qxx.jukebox.domain.JukeboxDomain.JukeboxFrontStartMovie buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        se.qxx.jukebox.domain.JukeboxDomain.JukeboxFrontStartMovie result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return result;
      }
      
      public se.qxx.jukebox.domain.JukeboxDomain.JukeboxFrontStartMovie buildPartial() {
        se.qxx.jukebox.domain.JukeboxDomain.JukeboxFrontStartMovie result = new se.qxx.jukebox.domain.JukeboxDomain.JukeboxFrontStartMovie(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.mrl_ = mrl_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.subFile_ = subFile_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof se.qxx.jukebox.domain.JukeboxDomain.JukeboxFrontStartMovie) {
          return mergeFrom((se.qxx.jukebox.domain.JukeboxDomain.JukeboxFrontStartMovie)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(se.qxx.jukebox.domain.JukeboxDomain.JukeboxFrontStartMovie other) {
        if (other == se.qxx.jukebox.domain.JukeboxDomain.JukeboxFrontStartMovie.getDefaultInstance()) return this;
        if (other.hasMrl()) {
          setMrl(other.getMrl());
        }
        if (other.hasSubFile()) {
          setSubFile(other.getSubFile());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public final boolean isInitialized() {
        if (!hasMrl()) {
          
          return false;
        }
        return true;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              onChanged();
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                onChanged();
                return this;
              }
              break;
            }
            case 10: {
              bitField0_ |= 0x00000001;
              mrl_ = input.readBytes();
              break;
            }
            case 18: {
              bitField0_ |= 0x00000002;
              subFile_ = input.readBytes();
              break;
            }
          }
        }
      }
      
      private int bitField0_;
      
      // required string mrl = 1;
      private java.lang.Object mrl_ = "";
      public boolean hasMrl() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      public String getMrl() {
        java.lang.Object ref = mrl_;
        if (!(ref instanceof String)) {
          String s = ((com.google.protobuf.ByteString) ref).toStringUtf8();
          mrl_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      public Builder setMrl(String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        mrl_ = value;
        onChanged();
        return this;
      }
      public Builder clearMrl() {
        bitField0_ = (bitField0_ & ~0x00000001);
        mrl_ = getDefaultInstance().getMrl();
        onChanged();
        return this;
      }
      void setMrl(com.google.protobuf.ByteString value) {
        bitField0_ |= 0x00000001;
        mrl_ = value;
        onChanged();
      }
      
      // optional string subFile = 2;
      private java.lang.Object subFile_ = "";
      public boolean hasSubFile() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      public String getSubFile() {
        java.lang.Object ref = subFile_;
        if (!(ref instanceof String)) {
          String s = ((com.google.protobuf.ByteString) ref).toStringUtf8();
          subFile_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      public Builder setSubFile(String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        subFile_ = value;
        onChanged();
        return this;
      }
      public Builder clearSubFile() {
        bitField0_ = (bitField0_ & ~0x00000002);
        subFile_ = getDefaultInstance().getSubFile();
        onChanged();
        return this;
      }
      void setSubFile(com.google.protobuf.ByteString value) {
        bitField0_ |= 0x00000002;
        subFile_ = value;
        onChanged();
      }
      
      // @@protoc_insertion_point(builder_scope:se.qxx.jukebox.domain.JukeboxFrontStartMovie)
    }
    
    static {
      defaultInstance = new JukeboxFrontStartMovie(true);
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:se.qxx.jukebox.domain.JukeboxFrontStartMovie)
  }
  
  public interface JukeboxFrontSeekOrBuilder
      extends com.google.protobuf.MessageOrBuilder {
    
    // required int32 seconds = 1;
    boolean hasSeconds();
    int getSeconds();
  }
  public static final class JukeboxFrontSeek extends
      com.google.protobuf.GeneratedMessage
      implements JukeboxFrontSeekOrBuilder {
    // Use JukeboxFrontSeek.newBuilder() to construct.
    private JukeboxFrontSeek(Builder builder) {
      super(builder);
    }
    private JukeboxFrontSeek(boolean noInit) {}
    
    private static final JukeboxFrontSeek defaultInstance;
    public static JukeboxFrontSeek getDefaultInstance() {
      return defaultInstance;
    }
    
    public JukeboxFrontSeek getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return se.qxx.jukebox.domain.JukeboxDomain.internal_static_se_qxx_jukebox_domain_JukeboxFrontSeek_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return se.qxx.jukebox.domain.JukeboxDomain.internal_static_se_qxx_jukebox_domain_JukeboxFrontSeek_fieldAccessorTable;
    }
    
    private int bitField0_;
    // required int32 seconds = 1;
    public static final int SECONDS_FIELD_NUMBER = 1;
    private int seconds_;
    public boolean hasSeconds() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    public int getSeconds() {
      return seconds_;
    }
    
    private void initFields() {
      seconds_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;
      
      if (!hasSeconds()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, seconds_);
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, seconds_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }
    
    public static se.qxx.jukebox.domain.JukeboxDomain.JukeboxFrontSeek parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static se.qxx.jukebox.domain.JukeboxDomain.JukeboxFrontSeek parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static se.qxx.jukebox.domain.JukeboxDomain.JukeboxFrontSeek parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static se.qxx.jukebox.domain.JukeboxDomain.JukeboxFrontSeek parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static se.qxx.jukebox.domain.JukeboxDomain.JukeboxFrontSeek parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static se.qxx.jukebox.domain.JukeboxDomain.JukeboxFrontSeek parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static se.qxx.jukebox.domain.JukeboxDomain.JukeboxFrontSeek parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static se.qxx.jukebox.domain.JukeboxDomain.JukeboxFrontSeek parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static se.qxx.jukebox.domain.JukeboxDomain.JukeboxFrontSeek parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static se.qxx.jukebox.domain.JukeboxDomain.JukeboxFrontSeek parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(se.qxx.jukebox.domain.JukeboxDomain.JukeboxFrontSeek prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements se.qxx.jukebox.domain.JukeboxDomain.JukeboxFrontSeekOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return se.qxx.jukebox.domain.JukeboxDomain.internal_static_se_qxx_jukebox_domain_JukeboxFrontSeek_descriptor;
      }
      
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return se.qxx.jukebox.domain.JukeboxDomain.internal_static_se_qxx_jukebox_domain_JukeboxFrontSeek_fieldAccessorTable;
      }
      
      // Construct using se.qxx.jukebox.domain.JukeboxDomain.JukeboxFrontSeek.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }
      
      private Builder(BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }
      
      public Builder clear() {
        super.clear();
        seconds_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return se.qxx.jukebox.domain.JukeboxDomain.JukeboxFrontSeek.getDescriptor();
      }
      
      public se.qxx.jukebox.domain.JukeboxDomain.JukeboxFrontSeek getDefaultInstanceForType() {
        return se.qxx.jukebox.domain.JukeboxDomain.JukeboxFrontSeek.getDefaultInstance();
      }
      
      public se.qxx.jukebox.domain.JukeboxDomain.JukeboxFrontSeek build() {
        se.qxx.jukebox.domain.JukeboxDomain.JukeboxFrontSeek result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }
      
      private se.qxx.jukebox.domain.JukeboxDomain.JukeboxFrontSeek buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        se.qxx.jukebox.domain.JukeboxDomain.JukeboxFrontSeek result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return result;
      }
      
      public se.qxx.jukebox.domain.JukeboxDomain.JukeboxFrontSeek buildPartial() {
        se.qxx.jukebox.domain.JukeboxDomain.JukeboxFrontSeek result = new se.qxx.jukebox.domain.JukeboxDomain.JukeboxFrontSeek(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.seconds_ = seconds_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof se.qxx.jukebox.domain.JukeboxDomain.JukeboxFrontSeek) {
          return mergeFrom((se.qxx.jukebox.domain.JukeboxDomain.JukeboxFrontSeek)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(se.qxx.jukebox.domain.JukeboxDomain.JukeboxFrontSeek other) {
        if (other == se.qxx.jukebox.domain.JukeboxDomain.JukeboxFrontSeek.getDefaultInstance()) return this;
        if (other.hasSeconds()) {
          setSeconds(other.getSeconds());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public final boolean isInitialized() {
        if (!hasSeconds()) {
          
          return false;
        }
        return true;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              onChanged();
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                onChanged();
                return this;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              seconds_ = input.readInt32();
              break;
            }
          }
        }
      }
      
      private int bitField0_;
      
      // required int32 seconds = 1;
      private int seconds_ ;
      public boolean hasSeconds() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      public int getSeconds() {
        return seconds_;
      }
      public Builder setSeconds(int value) {
        bitField0_ |= 0x00000001;
        seconds_ = value;
        onChanged();
        return this;
      }
      public Builder clearSeconds() {
        bitField0_ = (bitField0_ & ~0x00000001);
        seconds_ = 0;
        onChanged();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:se.qxx.jukebox.domain.JukeboxFrontSeek)
    }
    
    static {
      defaultInstance = new JukeboxFrontSeek(true);
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:se.qxx.jukebox.domain.JukeboxFrontSeek)
  }
  
  public interface JukeboxFrontSetSubtitleOrBuilder
      extends com.google.protobuf.MessageOrBuilder {
    
    // required string subFile = 1;
    boolean hasSubFile();
    String getSubFile();
  }
  public static final class JukeboxFrontSetSubtitle extends
      com.google.protobuf.GeneratedMessage
      implements JukeboxFrontSetSubtitleOrBuilder {
    // Use JukeboxFrontSetSubtitle.newBuilder() to construct.
    private JukeboxFrontSetSubtitle(Builder builder) {
      super(builder);
    }
    private JukeboxFrontSetSubtitle(boolean noInit) {}
    
    private static final JukeboxFrontSetSubtitle defaultInstance;
    public static JukeboxFrontSetSubtitle getDefaultInstance() {
      return defaultInstance;
    }
    
    public JukeboxFrontSetSubtitle getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return se.qxx.jukebox.domain.JukeboxDomain.internal_static_se_qxx_jukebox_domain_JukeboxFrontSetSubtitle_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return se.qxx.jukebox.domain.JukeboxDomain.internal_static_se_qxx_jukebox_domain_JukeboxFrontSetSubtitle_fieldAccessorTable;
    }
    
    private int bitField0_;
    // required string subFile = 1;
    public static final int SUBFILE_FIELD_NUMBER = 1;
    private java.lang.Object subFile_;
    public boolean hasSubFile() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    public String getSubFile() {
      java.lang.Object ref = subFile_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        if (com.google.protobuf.Internal.isValidUtf8(bs)) {
          subFile_ = s;
        }
        return s;
      }
    }
    private com.google.protobuf.ByteString getSubFileBytes() {
      java.lang.Object ref = subFile_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8((String) ref);
        subFile_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    
    private void initFields() {
      subFile_ = "";
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;
      
      if (!hasSubFile()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBytes(1, getSubFileBytes());
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, getSubFileBytes());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }
    
    public static se.qxx.jukebox.domain.JukeboxDomain.JukeboxFrontSetSubtitle parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static se.qxx.jukebox.domain.JukeboxDomain.JukeboxFrontSetSubtitle parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static se.qxx.jukebox.domain.JukeboxDomain.JukeboxFrontSetSubtitle parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static se.qxx.jukebox.domain.JukeboxDomain.JukeboxFrontSetSubtitle parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static se.qxx.jukebox.domain.JukeboxDomain.JukeboxFrontSetSubtitle parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static se.qxx.jukebox.domain.JukeboxDomain.JukeboxFrontSetSubtitle parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static se.qxx.jukebox.domain.JukeboxDomain.JukeboxFrontSetSubtitle parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static se.qxx.jukebox.domain.JukeboxDomain.JukeboxFrontSetSubtitle parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static se.qxx.jukebox.domain.JukeboxDomain.JukeboxFrontSetSubtitle parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static se.qxx.jukebox.domain.JukeboxDomain.JukeboxFrontSetSubtitle parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(se.qxx.jukebox.domain.JukeboxDomain.JukeboxFrontSetSubtitle prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements se.qxx.jukebox.domain.JukeboxDomain.JukeboxFrontSetSubtitleOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return se.qxx.jukebox.domain.JukeboxDomain.internal_static_se_qxx_jukebox_domain_JukeboxFrontSetSubtitle_descriptor;
      }
      
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return se.qxx.jukebox.domain.JukeboxDomain.internal_static_se_qxx_jukebox_domain_JukeboxFrontSetSubtitle_fieldAccessorTable;
      }
      
      // Construct using se.qxx.jukebox.domain.JukeboxDomain.JukeboxFrontSetSubtitle.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }
      
      private Builder(BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }
      
      public Builder clear() {
        super.clear();
        subFile_ = "";
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return se.qxx.jukebox.domain.JukeboxDomain.JukeboxFrontSetSubtitle.getDescriptor();
      }
      
      public se.qxx.jukebox.domain.JukeboxDomain.JukeboxFrontSetSubtitle getDefaultInstanceForType() {
        return se.qxx.jukebox.domain.JukeboxDomain.JukeboxFrontSetSubtitle.getDefaultInstance();
      }
      
      public se.qxx.jukebox.domain.JukeboxDomain.JukeboxFrontSetSubtitle build() {
        se.qxx.jukebox.domain.JukeboxDomain.JukeboxFrontSetSubtitle result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }
      
      private se.qxx.jukebox.domain.JukeboxDomain.JukeboxFrontSetSubtitle buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        se.qxx.jukebox.domain.JukeboxDomain.JukeboxFrontSetSubtitle result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return result;
      }
      
      public se.qxx.jukebox.domain.JukeboxDomain.JukeboxFrontSetSubtitle buildPartial() {
        se.qxx.jukebox.domain.JukeboxDomain.JukeboxFrontSetSubtitle result = new se.qxx.jukebox.domain.JukeboxDomain.JukeboxFrontSetSubtitle(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.subFile_ = subFile_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof se.qxx.jukebox.domain.JukeboxDomain.JukeboxFrontSetSubtitle) {
          return mergeFrom((se.qxx.jukebox.domain.JukeboxDomain.JukeboxFrontSetSubtitle)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(se.qxx.jukebox.domain.JukeboxDomain.JukeboxFrontSetSubtitle other) {
        if (other == se.qxx.jukebox.domain.JukeboxDomain.JukeboxFrontSetSubtitle.getDefaultInstance()) return this;
        if (other.hasSubFile()) {
          setSubFile(other.getSubFile());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public final boolean isInitialized() {
        if (!hasSubFile()) {
          
          return false;
        }
        return true;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              onChanged();
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                onChanged();
                return this;
              }
              break;
            }
            case 10: {
              bitField0_ |= 0x00000001;
              subFile_ = input.readBytes();
              break;
            }
          }
        }
      }
      
      private int bitField0_;
      
      // required string subFile = 1;
      private java.lang.Object subFile_ = "";
      public boolean hasSubFile() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      public String getSubFile() {
        java.lang.Object ref = subFile_;
        if (!(ref instanceof String)) {
          String s = ((com.google.protobuf.ByteString) ref).toStringUtf8();
          subFile_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      public Builder setSubFile(String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        subFile_ = value;
        onChanged();
        return this;
      }
      public Builder clearSubFile() {
        bitField0_ = (bitField0_ & ~0x00000001);
        subFile_ = getDefaultInstance().getSubFile();
        onChanged();
        return this;
      }
      void setSubFile(com.google.protobuf.ByteString value) {
        bitField0_ |= 0x00000001;
        subFile_ = value;
        onChanged();
      }
      
      // @@protoc_insertion_point(builder_scope:se.qxx.jukebox.domain.JukeboxFrontSetSubtitle)
    }
    
    static {
      defaultInstance = new JukeboxFrontSetSubtitle(true);
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:se.qxx.jukebox.domain.JukeboxFrontSetSubtitle)
  }
  
  public interface JukeboxResponseListMoviesOrBuilder
      extends com.google.protobuf.MessageOrBuilder {
    
    // repeated .se.qxx.jukebox.domain.Movie movies = 1;
    java.util.List<se.qxx.jukebox.domain.JukeboxDomain.Movie> 
        getMoviesList();
    se.qxx.jukebox.domain.JukeboxDomain.Movie getMovies(int index);
    int getMoviesCount();
    java.util.List<? extends se.qxx.jukebox.domain.JukeboxDomain.MovieOrBuilder> 
        getMoviesOrBuilderList();
    se.qxx.jukebox.domain.JukeboxDomain.MovieOrBuilder getMoviesOrBuilder(
        int index);
  }
  public static final class JukeboxResponseListMovies extends
      com.google.protobuf.GeneratedMessage
      implements JukeboxResponseListMoviesOrBuilder {
    // Use JukeboxResponseListMovies.newBuilder() to construct.
    private JukeboxResponseListMovies(Builder builder) {
      super(builder);
    }
    private JukeboxResponseListMovies(boolean noInit) {}
    
    private static final JukeboxResponseListMovies defaultInstance;
    public static JukeboxResponseListMovies getDefaultInstance() {
      return defaultInstance;
    }
    
    public JukeboxResponseListMovies getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return se.qxx.jukebox.domain.JukeboxDomain.internal_static_se_qxx_jukebox_domain_JukeboxResponseListMovies_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return se.qxx.jukebox.domain.JukeboxDomain.internal_static_se_qxx_jukebox_domain_JukeboxResponseListMovies_fieldAccessorTable;
    }
    
    // repeated .se.qxx.jukebox.domain.Movie movies = 1;
    public static final int MOVIES_FIELD_NUMBER = 1;
    private java.util.List<se.qxx.jukebox.domain.JukeboxDomain.Movie> movies_;
    public java.util.List<se.qxx.jukebox.domain.JukeboxDomain.Movie> getMoviesList() {
      return movies_;
    }
    public java.util.List<? extends se.qxx.jukebox.domain.JukeboxDomain.MovieOrBuilder> 
        getMoviesOrBuilderList() {
      return movies_;
    }
    public int getMoviesCount() {
      return movies_.size();
    }
    public se.qxx.jukebox.domain.JukeboxDomain.Movie getMovies(int index) {
      return movies_.get(index);
    }
    public se.qxx.jukebox.domain.JukeboxDomain.MovieOrBuilder getMoviesOrBuilder(
        int index) {
      return movies_.get(index);
    }
    
    private void initFields() {
      movies_ = java.util.Collections.emptyList();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;
      
      for (int i = 0; i < getMoviesCount(); i++) {
        if (!getMovies(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      for (int i = 0; i < movies_.size(); i++) {
        output.writeMessage(1, movies_.get(i));
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      for (int i = 0; i < movies_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, movies_.get(i));
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }
    
    public static se.qxx.jukebox.domain.JukeboxDomain.JukeboxResponseListMovies parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static se.qxx.jukebox.domain.JukeboxDomain.JukeboxResponseListMovies parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static se.qxx.jukebox.domain.JukeboxDomain.JukeboxResponseListMovies parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static se.qxx.jukebox.domain.JukeboxDomain.JukeboxResponseListMovies parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static se.qxx.jukebox.domain.JukeboxDomain.JukeboxResponseListMovies parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static se.qxx.jukebox.domain.JukeboxDomain.JukeboxResponseListMovies parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static se.qxx.jukebox.domain.JukeboxDomain.JukeboxResponseListMovies parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static se.qxx.jukebox.domain.JukeboxDomain.JukeboxResponseListMovies parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static se.qxx.jukebox.domain.JukeboxDomain.JukeboxResponseListMovies parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static se.qxx.jukebox.domain.JukeboxDomain.JukeboxResponseListMovies parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(se.qxx.jukebox.domain.JukeboxDomain.JukeboxResponseListMovies prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements se.qxx.jukebox.domain.JukeboxDomain.JukeboxResponseListMoviesOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return se.qxx.jukebox.domain.JukeboxDomain.internal_static_se_qxx_jukebox_domain_JukeboxResponseListMovies_descriptor;
      }
      
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return se.qxx.jukebox.domain.JukeboxDomain.internal_static_se_qxx_jukebox_domain_JukeboxResponseListMovies_fieldAccessorTable;
      }
      
      // Construct using se.qxx.jukebox.domain.JukeboxDomain.JukeboxResponseListMovies.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }
      
      private Builder(BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getMoviesFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }
      
      public Builder clear() {
        super.clear();
        if (moviesBuilder_ == null) {
          movies_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
        } else {
          moviesBuilder_.clear();
        }
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return se.qxx.jukebox.domain.JukeboxDomain.JukeboxResponseListMovies.getDescriptor();
      }
      
      public se.qxx.jukebox.domain.JukeboxDomain.JukeboxResponseListMovies getDefaultInstanceForType() {
        return se.qxx.jukebox.domain.JukeboxDomain.JukeboxResponseListMovies.getDefaultInstance();
      }
      
      public se.qxx.jukebox.domain.JukeboxDomain.JukeboxResponseListMovies build() {
        se.qxx.jukebox.domain.JukeboxDomain.JukeboxResponseListMovies result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }
      
      private se.qxx.jukebox.domain.JukeboxDomain.JukeboxResponseListMovies buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        se.qxx.jukebox.domain.JukeboxDomain.JukeboxResponseListMovies result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return result;
      }
      
      public se.qxx.jukebox.domain.JukeboxDomain.JukeboxResponseListMovies buildPartial() {
        se.qxx.jukebox.domain.JukeboxDomain.JukeboxResponseListMovies result = new se.qxx.jukebox.domain.JukeboxDomain.JukeboxResponseListMovies(this);
        int from_bitField0_ = bitField0_;
        if (moviesBuilder_ == null) {
          if (((bitField0_ & 0x00000001) == 0x00000001)) {
            movies_ = java.util.Collections.unmodifiableList(movies_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.movies_ = movies_;
        } else {
          result.movies_ = moviesBuilder_.build();
        }
        onBuilt();
        return result;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof se.qxx.jukebox.domain.JukeboxDomain.JukeboxResponseListMovies) {
          return mergeFrom((se.qxx.jukebox.domain.JukeboxDomain.JukeboxResponseListMovies)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(se.qxx.jukebox.domain.JukeboxDomain.JukeboxResponseListMovies other) {
        if (other == se.qxx.jukebox.domain.JukeboxDomain.JukeboxResponseListMovies.getDefaultInstance()) return this;
        if (moviesBuilder_ == null) {
          if (!other.movies_.isEmpty()) {
            if (movies_.isEmpty()) {
              movies_ = other.movies_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensureMoviesIsMutable();
              movies_.addAll(other.movies_);
            }
            onChanged();
          }
        } else {
          if (!other.movies_.isEmpty()) {
            if (moviesBuilder_.isEmpty()) {
              moviesBuilder_.dispose();
              moviesBuilder_ = null;
              movies_ = other.movies_;
              bitField0_ = (bitField0_ & ~0x00000001);
              moviesBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getMoviesFieldBuilder() : null;
            } else {
              moviesBuilder_.addAllMessages(other.movies_);
            }
          }
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public final boolean isInitialized() {
        for (int i = 0; i < getMoviesCount(); i++) {
          if (!getMovies(i).isInitialized()) {
            
            return false;
          }
        }
        return true;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              onChanged();
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                onChanged();
                return this;
              }
              break;
            }
            case 10: {
              se.qxx.jukebox.domain.JukeboxDomain.Movie.Builder subBuilder = se.qxx.jukebox.domain.JukeboxDomain.Movie.newBuilder();
              input.readMessage(subBuilder, extensionRegistry);
              addMovies(subBuilder.buildPartial());
              break;
            }
          }
        }
      }
      
      private int bitField0_;
      
      // repeated .se.qxx.jukebox.domain.Movie movies = 1;
      private java.util.List<se.qxx.jukebox.domain.JukeboxDomain.Movie> movies_ =
        java.util.Collections.emptyList();
      private void ensureMoviesIsMutable() {
        if (!((bitField0_ & 0x00000001) == 0x00000001)) {
          movies_ = new java.util.ArrayList<se.qxx.jukebox.domain.JukeboxDomain.Movie>(movies_);
          bitField0_ |= 0x00000001;
         }
      }
      
      private com.google.protobuf.RepeatedFieldBuilder<
          se.qxx.jukebox.domain.JukeboxDomain.Movie, se.qxx.jukebox.domain.JukeboxDomain.Movie.Builder, se.qxx.jukebox.domain.JukeboxDomain.MovieOrBuilder> moviesBuilder_;
      
      public java.util.List<se.qxx.jukebox.domain.JukeboxDomain.Movie> getMoviesList() {
        if (moviesBuilder_ == null) {
          return java.util.Collections.unmodifiableList(movies_);
        } else {
          return moviesBuilder_.getMessageList();
        }
      }
      public int getMoviesCount() {
        if (moviesBuilder_ == null) {
          return movies_.size();
        } else {
          return moviesBuilder_.getCount();
        }
      }
      public se.qxx.jukebox.domain.JukeboxDomain.Movie getMovies(int index) {
        if (moviesBuilder_ == null) {
          return movies_.get(index);
        } else {
          return moviesBuilder_.getMessage(index);
        }
      }
      public Builder setMovies(
          int index, se.qxx.jukebox.domain.JukeboxDomain.Movie value) {
        if (moviesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureMoviesIsMutable();
          movies_.set(index, value);
          onChanged();
        } else {
          moviesBuilder_.setMessage(index, value);
        }
        return this;
      }
      public Builder setMovies(
          int index, se.qxx.jukebox.domain.JukeboxDomain.Movie.Builder builderForValue) {
        if (moviesBuilder_ == null) {
          ensureMoviesIsMutable();
          movies_.set(index, builderForValue.build());
          onChanged();
        } else {
          moviesBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      public Builder addMovies(se.qxx.jukebox.domain.JukeboxDomain.Movie value) {
        if (moviesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureMoviesIsMutable();
          movies_.add(value);
          onChanged();
        } else {
          moviesBuilder_.addMessage(value);
        }
        return this;
      }
      public Builder addMovies(
          int index, se.qxx.jukebox.domain.JukeboxDomain.Movie value) {
        if (moviesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureMoviesIsMutable();
          movies_.add(index, value);
          onChanged();
        } else {
          moviesBuilder_.addMessage(index, value);
        }
        return this;
      }
      public Builder addMovies(
          se.qxx.jukebox.domain.JukeboxDomain.Movie.Builder builderForValue) {
        if (moviesBuilder_ == null) {
          ensureMoviesIsMutable();
          movies_.add(builderForValue.build());
          onChanged();
        } else {
          moviesBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      public Builder addMovies(
          int index, se.qxx.jukebox.domain.JukeboxDomain.Movie.Builder builderForValue) {
        if (moviesBuilder_ == null) {
          ensureMoviesIsMutable();
          movies_.add(index, builderForValue.build());
          onChanged();
        } else {
          moviesBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      public Builder addAllMovies(
          java.lang.Iterable<? extends se.qxx.jukebox.domain.JukeboxDomain.Movie> values) {
        if (moviesBuilder_ == null) {
          ensureMoviesIsMutable();
          super.addAll(values, movies_);
          onChanged();
        } else {
          moviesBuilder_.addAllMessages(values);
        }
        return this;
      }
      public Builder clearMovies() {
        if (moviesBuilder_ == null) {
          movies_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          moviesBuilder_.clear();
        }
        return this;
      }
      public Builder removeMovies(int index) {
        if (moviesBuilder_ == null) {
          ensureMoviesIsMutable();
          movies_.remove(index);
          onChanged();
        } else {
          moviesBuilder_.remove(index);
        }
        return this;
      }
      public se.qxx.jukebox.domain.JukeboxDomain.Movie.Builder getMoviesBuilder(
          int index) {
        return getMoviesFieldBuilder().getBuilder(index);
      }
      public se.qxx.jukebox.domain.JukeboxDomain.MovieOrBuilder getMoviesOrBuilder(
          int index) {
        if (moviesBuilder_ == null) {
          return movies_.get(index);  } else {
          return moviesBuilder_.getMessageOrBuilder(index);
        }
      }
      public java.util.List<? extends se.qxx.jukebox.domain.JukeboxDomain.MovieOrBuilder> 
           getMoviesOrBuilderList() {
        if (moviesBuilder_ != null) {
          return moviesBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(movies_);
        }
      }
      public se.qxx.jukebox.domain.JukeboxDomain.Movie.Builder addMoviesBuilder() {
        return getMoviesFieldBuilder().addBuilder(
            se.qxx.jukebox.domain.JukeboxDomain.Movie.getDefaultInstance());
      }
      public se.qxx.jukebox.domain.JukeboxDomain.Movie.Builder addMoviesBuilder(
          int index) {
        return getMoviesFieldBuilder().addBuilder(
            index, se.qxx.jukebox.domain.JukeboxDomain.Movie.getDefaultInstance());
      }
      public java.util.List<se.qxx.jukebox.domain.JukeboxDomain.Movie.Builder> 
           getMoviesBuilderList() {
        return getMoviesFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          se.qxx.jukebox.domain.JukeboxDomain.Movie, se.qxx.jukebox.domain.JukeboxDomain.Movie.Builder, se.qxx.jukebox.domain.JukeboxDomain.MovieOrBuilder> 
          getMoviesFieldBuilder() {
        if (moviesBuilder_ == null) {
          moviesBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              se.qxx.jukebox.domain.JukeboxDomain.Movie, se.qxx.jukebox.domain.JukeboxDomain.Movie.Builder, se.qxx.jukebox.domain.JukeboxDomain.MovieOrBuilder>(
                  movies_,
                  ((bitField0_ & 0x00000001) == 0x00000001),
                  getParentForChildren(),
                  isClean());
          movies_ = null;
        }
        return moviesBuilder_;
      }
      
      // @@protoc_insertion_point(builder_scope:se.qxx.jukebox.domain.JukeboxResponseListMovies)
    }
    
    static {
      defaultInstance = new JukeboxResponseListMovies(true);
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:se.qxx.jukebox.domain.JukeboxResponseListMovies)
  }
  
  public interface JukeboxResponseListPlayersOrBuilder
      extends com.google.protobuf.MessageOrBuilder {
    
    // repeated string hostname = 1;
    java.util.List<String> getHostnameList();
    int getHostnameCount();
    String getHostname(int index);
  }
  public static final class JukeboxResponseListPlayers extends
      com.google.protobuf.GeneratedMessage
      implements JukeboxResponseListPlayersOrBuilder {
    // Use JukeboxResponseListPlayers.newBuilder() to construct.
    private JukeboxResponseListPlayers(Builder builder) {
      super(builder);
    }
    private JukeboxResponseListPlayers(boolean noInit) {}
    
    private static final JukeboxResponseListPlayers defaultInstance;
    public static JukeboxResponseListPlayers getDefaultInstance() {
      return defaultInstance;
    }
    
    public JukeboxResponseListPlayers getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return se.qxx.jukebox.domain.JukeboxDomain.internal_static_se_qxx_jukebox_domain_JukeboxResponseListPlayers_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return se.qxx.jukebox.domain.JukeboxDomain.internal_static_se_qxx_jukebox_domain_JukeboxResponseListPlayers_fieldAccessorTable;
    }
    
    // repeated string hostname = 1;
    public static final int HOSTNAME_FIELD_NUMBER = 1;
    private com.google.protobuf.LazyStringList hostname_;
    public java.util.List<String>
        getHostnameList() {
      return hostname_;
    }
    public int getHostnameCount() {
      return hostname_.size();
    }
    public String getHostname(int index) {
      return hostname_.get(index);
    }
    
    private void initFields() {
      hostname_ = com.google.protobuf.LazyStringArrayList.EMPTY;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;
      
      memoizedIsInitialized = 1;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      for (int i = 0; i < hostname_.size(); i++) {
        output.writeBytes(1, hostname_.getByteString(i));
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      {
        int dataSize = 0;
        for (int i = 0; i < hostname_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeBytesSizeNoTag(hostname_.getByteString(i));
        }
        size += dataSize;
        size += 1 * getHostnameList().size();
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }
    
    public static se.qxx.jukebox.domain.JukeboxDomain.JukeboxResponseListPlayers parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static se.qxx.jukebox.domain.JukeboxDomain.JukeboxResponseListPlayers parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static se.qxx.jukebox.domain.JukeboxDomain.JukeboxResponseListPlayers parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static se.qxx.jukebox.domain.JukeboxDomain.JukeboxResponseListPlayers parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static se.qxx.jukebox.domain.JukeboxDomain.JukeboxResponseListPlayers parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static se.qxx.jukebox.domain.JukeboxDomain.JukeboxResponseListPlayers parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static se.qxx.jukebox.domain.JukeboxDomain.JukeboxResponseListPlayers parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static se.qxx.jukebox.domain.JukeboxDomain.JukeboxResponseListPlayers parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static se.qxx.jukebox.domain.JukeboxDomain.JukeboxResponseListPlayers parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static se.qxx.jukebox.domain.JukeboxDomain.JukeboxResponseListPlayers parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(se.qxx.jukebox.domain.JukeboxDomain.JukeboxResponseListPlayers prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements se.qxx.jukebox.domain.JukeboxDomain.JukeboxResponseListPlayersOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return se.qxx.jukebox.domain.JukeboxDomain.internal_static_se_qxx_jukebox_domain_JukeboxResponseListPlayers_descriptor;
      }
      
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return se.qxx.jukebox.domain.JukeboxDomain.internal_static_se_qxx_jukebox_domain_JukeboxResponseListPlayers_fieldAccessorTable;
      }
      
      // Construct using se.qxx.jukebox.domain.JukeboxDomain.JukeboxResponseListPlayers.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }
      
      private Builder(BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }
      
      public Builder clear() {
        super.clear();
        hostname_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return se.qxx.jukebox.domain.JukeboxDomain.JukeboxResponseListPlayers.getDescriptor();
      }
      
      public se.qxx.jukebox.domain.JukeboxDomain.JukeboxResponseListPlayers getDefaultInstanceForType() {
        return se.qxx.jukebox.domain.JukeboxDomain.JukeboxResponseListPlayers.getDefaultInstance();
      }
      
      public se.qxx.jukebox.domain.JukeboxDomain.JukeboxResponseListPlayers build() {
        se.qxx.jukebox.domain.JukeboxDomain.JukeboxResponseListPlayers result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }
      
      private se.qxx.jukebox.domain.JukeboxDomain.JukeboxResponseListPlayers buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        se.qxx.jukebox.domain.JukeboxDomain.JukeboxResponseListPlayers result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return result;
      }
      
      public se.qxx.jukebox.domain.JukeboxDomain.JukeboxResponseListPlayers buildPartial() {
        se.qxx.jukebox.domain.JukeboxDomain.JukeboxResponseListPlayers result = new se.qxx.jukebox.domain.JukeboxDomain.JukeboxResponseListPlayers(this);
        int from_bitField0_ = bitField0_;
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          hostname_ = new com.google.protobuf.UnmodifiableLazyStringList(
              hostname_);
          bitField0_ = (bitField0_ & ~0x00000001);
        }
        result.hostname_ = hostname_;
        onBuilt();
        return result;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof se.qxx.jukebox.domain.JukeboxDomain.JukeboxResponseListPlayers) {
          return mergeFrom((se.qxx.jukebox.domain.JukeboxDomain.JukeboxResponseListPlayers)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(se.qxx.jukebox.domain.JukeboxDomain.JukeboxResponseListPlayers other) {
        if (other == se.qxx.jukebox.domain.JukeboxDomain.JukeboxResponseListPlayers.getDefaultInstance()) return this;
        if (!other.hostname_.isEmpty()) {
          if (hostname_.isEmpty()) {
            hostname_ = other.hostname_;
            bitField0_ = (bitField0_ & ~0x00000001);
          } else {
            ensureHostnameIsMutable();
            hostname_.addAll(other.hostname_);
          }
          onChanged();
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public final boolean isInitialized() {
        return true;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              onChanged();
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                onChanged();
                return this;
              }
              break;
            }
            case 10: {
              ensureHostnameIsMutable();
              hostname_.add(input.readBytes());
              break;
            }
          }
        }
      }
      
      private int bitField0_;
      
      // repeated string hostname = 1;
      private com.google.protobuf.LazyStringList hostname_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      private void ensureHostnameIsMutable() {
        if (!((bitField0_ & 0x00000001) == 0x00000001)) {
          hostname_ = new com.google.protobuf.LazyStringArrayList(hostname_);
          bitField0_ |= 0x00000001;
         }
      }
      public java.util.List<String>
          getHostnameList() {
        return java.util.Collections.unmodifiableList(hostname_);
      }
      public int getHostnameCount() {
        return hostname_.size();
      }
      public String getHostname(int index) {
        return hostname_.get(index);
      }
      public Builder setHostname(
          int index, String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureHostnameIsMutable();
        hostname_.set(index, value);
        onChanged();
        return this;
      }
      public Builder addHostname(String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureHostnameIsMutable();
        hostname_.add(value);
        onChanged();
        return this;
      }
      public Builder addAllHostname(
          java.lang.Iterable<String> values) {
        ensureHostnameIsMutable();
        super.addAll(values, hostname_);
        onChanged();
        return this;
      }
      public Builder clearHostname() {
        hostname_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000001);
        onChanged();
        return this;
      }
      void addHostname(com.google.protobuf.ByteString value) {
        ensureHostnameIsMutable();
        hostname_.add(value);
        onChanged();
      }
      
      // @@protoc_insertion_point(builder_scope:se.qxx.jukebox.domain.JukeboxResponseListPlayers)
    }
    
    static {
      defaultInstance = new JukeboxResponseListPlayers(true);
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:se.qxx.jukebox.domain.JukeboxResponseListPlayers)
  }
  
  public interface JukeboxResponseListSubtitlesOrBuilder
      extends com.google.protobuf.MessageOrBuilder {
    
    // repeated .se.qxx.jukebox.domain.Subtitle subtitle = 1;
    java.util.List<se.qxx.jukebox.domain.JukeboxDomain.Subtitle> 
        getSubtitleList();
    se.qxx.jukebox.domain.JukeboxDomain.Subtitle getSubtitle(int index);
    int getSubtitleCount();
    java.util.List<? extends se.qxx.jukebox.domain.JukeboxDomain.SubtitleOrBuilder> 
        getSubtitleOrBuilderList();
    se.qxx.jukebox.domain.JukeboxDomain.SubtitleOrBuilder getSubtitleOrBuilder(
        int index);
  }
  public static final class JukeboxResponseListSubtitles extends
      com.google.protobuf.GeneratedMessage
      implements JukeboxResponseListSubtitlesOrBuilder {
    // Use JukeboxResponseListSubtitles.newBuilder() to construct.
    private JukeboxResponseListSubtitles(Builder builder) {
      super(builder);
    }
    private JukeboxResponseListSubtitles(boolean noInit) {}
    
    private static final JukeboxResponseListSubtitles defaultInstance;
    public static JukeboxResponseListSubtitles getDefaultInstance() {
      return defaultInstance;
    }
    
    public JukeboxResponseListSubtitles getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return se.qxx.jukebox.domain.JukeboxDomain.internal_static_se_qxx_jukebox_domain_JukeboxResponseListSubtitles_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return se.qxx.jukebox.domain.JukeboxDomain.internal_static_se_qxx_jukebox_domain_JukeboxResponseListSubtitles_fieldAccessorTable;
    }
    
    // repeated .se.qxx.jukebox.domain.Subtitle subtitle = 1;
    public static final int SUBTITLE_FIELD_NUMBER = 1;
    private java.util.List<se.qxx.jukebox.domain.JukeboxDomain.Subtitle> subtitle_;
    public java.util.List<se.qxx.jukebox.domain.JukeboxDomain.Subtitle> getSubtitleList() {
      return subtitle_;
    }
    public java.util.List<? extends se.qxx.jukebox.domain.JukeboxDomain.SubtitleOrBuilder> 
        getSubtitleOrBuilderList() {
      return subtitle_;
    }
    public int getSubtitleCount() {
      return subtitle_.size();
    }
    public se.qxx.jukebox.domain.JukeboxDomain.Subtitle getSubtitle(int index) {
      return subtitle_.get(index);
    }
    public se.qxx.jukebox.domain.JukeboxDomain.SubtitleOrBuilder getSubtitleOrBuilder(
        int index) {
      return subtitle_.get(index);
    }
    
    private void initFields() {
      subtitle_ = java.util.Collections.emptyList();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;
      
      for (int i = 0; i < getSubtitleCount(); i++) {
        if (!getSubtitle(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      for (int i = 0; i < subtitle_.size(); i++) {
        output.writeMessage(1, subtitle_.get(i));
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      for (int i = 0; i < subtitle_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, subtitle_.get(i));
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }
    
    public static se.qxx.jukebox.domain.JukeboxDomain.JukeboxResponseListSubtitles parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static se.qxx.jukebox.domain.JukeboxDomain.JukeboxResponseListSubtitles parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static se.qxx.jukebox.domain.JukeboxDomain.JukeboxResponseListSubtitles parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static se.qxx.jukebox.domain.JukeboxDomain.JukeboxResponseListSubtitles parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static se.qxx.jukebox.domain.JukeboxDomain.JukeboxResponseListSubtitles parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static se.qxx.jukebox.domain.JukeboxDomain.JukeboxResponseListSubtitles parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static se.qxx.jukebox.domain.JukeboxDomain.JukeboxResponseListSubtitles parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static se.qxx.jukebox.domain.JukeboxDomain.JukeboxResponseListSubtitles parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static se.qxx.jukebox.domain.JukeboxDomain.JukeboxResponseListSubtitles parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static se.qxx.jukebox.domain.JukeboxDomain.JukeboxResponseListSubtitles parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(se.qxx.jukebox.domain.JukeboxDomain.JukeboxResponseListSubtitles prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements se.qxx.jukebox.domain.JukeboxDomain.JukeboxResponseListSubtitlesOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return se.qxx.jukebox.domain.JukeboxDomain.internal_static_se_qxx_jukebox_domain_JukeboxResponseListSubtitles_descriptor;
      }
      
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return se.qxx.jukebox.domain.JukeboxDomain.internal_static_se_qxx_jukebox_domain_JukeboxResponseListSubtitles_fieldAccessorTable;
      }
      
      // Construct using se.qxx.jukebox.domain.JukeboxDomain.JukeboxResponseListSubtitles.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }
      
      private Builder(BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getSubtitleFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }
      
      public Builder clear() {
        super.clear();
        if (subtitleBuilder_ == null) {
          subtitle_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
        } else {
          subtitleBuilder_.clear();
        }
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return se.qxx.jukebox.domain.JukeboxDomain.JukeboxResponseListSubtitles.getDescriptor();
      }
      
      public se.qxx.jukebox.domain.JukeboxDomain.JukeboxResponseListSubtitles getDefaultInstanceForType() {
        return se.qxx.jukebox.domain.JukeboxDomain.JukeboxResponseListSubtitles.getDefaultInstance();
      }
      
      public se.qxx.jukebox.domain.JukeboxDomain.JukeboxResponseListSubtitles build() {
        se.qxx.jukebox.domain.JukeboxDomain.JukeboxResponseListSubtitles result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }
      
      private se.qxx.jukebox.domain.JukeboxDomain.JukeboxResponseListSubtitles buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        se.qxx.jukebox.domain.JukeboxDomain.JukeboxResponseListSubtitles result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return result;
      }
      
      public se.qxx.jukebox.domain.JukeboxDomain.JukeboxResponseListSubtitles buildPartial() {
        se.qxx.jukebox.domain.JukeboxDomain.JukeboxResponseListSubtitles result = new se.qxx.jukebox.domain.JukeboxDomain.JukeboxResponseListSubtitles(this);
        int from_bitField0_ = bitField0_;
        if (subtitleBuilder_ == null) {
          if (((bitField0_ & 0x00000001) == 0x00000001)) {
            subtitle_ = java.util.Collections.unmodifiableList(subtitle_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.subtitle_ = subtitle_;
        } else {
          result.subtitle_ = subtitleBuilder_.build();
        }
        onBuilt();
        return result;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof se.qxx.jukebox.domain.JukeboxDomain.JukeboxResponseListSubtitles) {
          return mergeFrom((se.qxx.jukebox.domain.JukeboxDomain.JukeboxResponseListSubtitles)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(se.qxx.jukebox.domain.JukeboxDomain.JukeboxResponseListSubtitles other) {
        if (other == se.qxx.jukebox.domain.JukeboxDomain.JukeboxResponseListSubtitles.getDefaultInstance()) return this;
        if (subtitleBuilder_ == null) {
          if (!other.subtitle_.isEmpty()) {
            if (subtitle_.isEmpty()) {
              subtitle_ = other.subtitle_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensureSubtitleIsMutable();
              subtitle_.addAll(other.subtitle_);
            }
            onChanged();
          }
        } else {
          if (!other.subtitle_.isEmpty()) {
            if (subtitleBuilder_.isEmpty()) {
              subtitleBuilder_.dispose();
              subtitleBuilder_ = null;
              subtitle_ = other.subtitle_;
              bitField0_ = (bitField0_ & ~0x00000001);
              subtitleBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getSubtitleFieldBuilder() : null;
            } else {
              subtitleBuilder_.addAllMessages(other.subtitle_);
            }
          }
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public final boolean isInitialized() {
        for (int i = 0; i < getSubtitleCount(); i++) {
          if (!getSubtitle(i).isInitialized()) {
            
            return false;
          }
        }
        return true;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              onChanged();
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                onChanged();
                return this;
              }
              break;
            }
            case 10: {
              se.qxx.jukebox.domain.JukeboxDomain.Subtitle.Builder subBuilder = se.qxx.jukebox.domain.JukeboxDomain.Subtitle.newBuilder();
              input.readMessage(subBuilder, extensionRegistry);
              addSubtitle(subBuilder.buildPartial());
              break;
            }
          }
        }
      }
      
      private int bitField0_;
      
      // repeated .se.qxx.jukebox.domain.Subtitle subtitle = 1;
      private java.util.List<se.qxx.jukebox.domain.JukeboxDomain.Subtitle> subtitle_ =
        java.util.Collections.emptyList();
      private void ensureSubtitleIsMutable() {
        if (!((bitField0_ & 0x00000001) == 0x00000001)) {
          subtitle_ = new java.util.ArrayList<se.qxx.jukebox.domain.JukeboxDomain.Subtitle>(subtitle_);
          bitField0_ |= 0x00000001;
         }
      }
      
      private com.google.protobuf.RepeatedFieldBuilder<
          se.qxx.jukebox.domain.JukeboxDomain.Subtitle, se.qxx.jukebox.domain.JukeboxDomain.Subtitle.Builder, se.qxx.jukebox.domain.JukeboxDomain.SubtitleOrBuilder> subtitleBuilder_;
      
      public java.util.List<se.qxx.jukebox.domain.JukeboxDomain.Subtitle> getSubtitleList() {
        if (subtitleBuilder_ == null) {
          return java.util.Collections.unmodifiableList(subtitle_);
        } else {
          return subtitleBuilder_.getMessageList();
        }
      }
      public int getSubtitleCount() {
        if (subtitleBuilder_ == null) {
          return subtitle_.size();
        } else {
          return subtitleBuilder_.getCount();
        }
      }
      public se.qxx.jukebox.domain.JukeboxDomain.Subtitle getSubtitle(int index) {
        if (subtitleBuilder_ == null) {
          return subtitle_.get(index);
        } else {
          return subtitleBuilder_.getMessage(index);
        }
      }
      public Builder setSubtitle(
          int index, se.qxx.jukebox.domain.JukeboxDomain.Subtitle value) {
        if (subtitleBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureSubtitleIsMutable();
          subtitle_.set(index, value);
          onChanged();
        } else {
          subtitleBuilder_.setMessage(index, value);
        }
        return this;
      }
      public Builder setSubtitle(
          int index, se.qxx.jukebox.domain.JukeboxDomain.Subtitle.Builder builderForValue) {
        if (subtitleBuilder_ == null) {
          ensureSubtitleIsMutable();
          subtitle_.set(index, builderForValue.build());
          onChanged();
        } else {
          subtitleBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      public Builder addSubtitle(se.qxx.jukebox.domain.JukeboxDomain.Subtitle value) {
        if (subtitleBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureSubtitleIsMutable();
          subtitle_.add(value);
          onChanged();
        } else {
          subtitleBuilder_.addMessage(value);
        }
        return this;
      }
      public Builder addSubtitle(
          int index, se.qxx.jukebox.domain.JukeboxDomain.Subtitle value) {
        if (subtitleBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureSubtitleIsMutable();
          subtitle_.add(index, value);
          onChanged();
        } else {
          subtitleBuilder_.addMessage(index, value);
        }
        return this;
      }
      public Builder addSubtitle(
          se.qxx.jukebox.domain.JukeboxDomain.Subtitle.Builder builderForValue) {
        if (subtitleBuilder_ == null) {
          ensureSubtitleIsMutable();
          subtitle_.add(builderForValue.build());
          onChanged();
        } else {
          subtitleBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      public Builder addSubtitle(
          int index, se.qxx.jukebox.domain.JukeboxDomain.Subtitle.Builder builderForValue) {
        if (subtitleBuilder_ == null) {
          ensureSubtitleIsMutable();
          subtitle_.add(index, builderForValue.build());
          onChanged();
        } else {
          subtitleBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      public Builder addAllSubtitle(
          java.lang.Iterable<? extends se.qxx.jukebox.domain.JukeboxDomain.Subtitle> values) {
        if (subtitleBuilder_ == null) {
          ensureSubtitleIsMutable();
          super.addAll(values, subtitle_);
          onChanged();
        } else {
          subtitleBuilder_.addAllMessages(values);
        }
        return this;
      }
      public Builder clearSubtitle() {
        if (subtitleBuilder_ == null) {
          subtitle_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          subtitleBuilder_.clear();
        }
        return this;
      }
      public Builder removeSubtitle(int index) {
        if (subtitleBuilder_ == null) {
          ensureSubtitleIsMutable();
          subtitle_.remove(index);
          onChanged();
        } else {
          subtitleBuilder_.remove(index);
        }
        return this;
      }
      public se.qxx.jukebox.domain.JukeboxDomain.Subtitle.Builder getSubtitleBuilder(
          int index) {
        return getSubtitleFieldBuilder().getBuilder(index);
      }
      public se.qxx.jukebox.domain.JukeboxDomain.SubtitleOrBuilder getSubtitleOrBuilder(
          int index) {
        if (subtitleBuilder_ == null) {
          return subtitle_.get(index);  } else {
          return subtitleBuilder_.getMessageOrBuilder(index);
        }
      }
      public java.util.List<? extends se.qxx.jukebox.domain.JukeboxDomain.SubtitleOrBuilder> 
           getSubtitleOrBuilderList() {
        if (subtitleBuilder_ != null) {
          return subtitleBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(subtitle_);
        }
      }
      public se.qxx.jukebox.domain.JukeboxDomain.Subtitle.Builder addSubtitleBuilder() {
        return getSubtitleFieldBuilder().addBuilder(
            se.qxx.jukebox.domain.JukeboxDomain.Subtitle.getDefaultInstance());
      }
      public se.qxx.jukebox.domain.JukeboxDomain.Subtitle.Builder addSubtitleBuilder(
          int index) {
        return getSubtitleFieldBuilder().addBuilder(
            index, se.qxx.jukebox.domain.JukeboxDomain.Subtitle.getDefaultInstance());
      }
      public java.util.List<se.qxx.jukebox.domain.JukeboxDomain.Subtitle.Builder> 
           getSubtitleBuilderList() {
        return getSubtitleFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          se.qxx.jukebox.domain.JukeboxDomain.Subtitle, se.qxx.jukebox.domain.JukeboxDomain.Subtitle.Builder, se.qxx.jukebox.domain.JukeboxDomain.SubtitleOrBuilder> 
          getSubtitleFieldBuilder() {
        if (subtitleBuilder_ == null) {
          subtitleBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              se.qxx.jukebox.domain.JukeboxDomain.Subtitle, se.qxx.jukebox.domain.JukeboxDomain.Subtitle.Builder, se.qxx.jukebox.domain.JukeboxDomain.SubtitleOrBuilder>(
                  subtitle_,
                  ((bitField0_ & 0x00000001) == 0x00000001),
                  getParentForChildren(),
                  isClean());
          subtitle_ = null;
        }
        return subtitleBuilder_;
      }
      
      // @@protoc_insertion_point(builder_scope:se.qxx.jukebox.domain.JukeboxResponseListSubtitles)
    }
    
    static {
      defaultInstance = new JukeboxResponseListSubtitles(true);
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:se.qxx.jukebox.domain.JukeboxResponseListSubtitles)
  }
  
  public interface JukeboxResponseStartMovieOrBuilder
      extends com.google.protobuf.MessageOrBuilder {
    
    // repeated .se.qxx.jukebox.domain.Subtitle subtitle = 1;
    java.util.List<se.qxx.jukebox.domain.JukeboxDomain.Subtitle> 
        getSubtitleList();
    se.qxx.jukebox.domain.JukeboxDomain.Subtitle getSubtitle(int index);
    int getSubtitleCount();
    java.util.List<? extends se.qxx.jukebox.domain.JukeboxDomain.SubtitleOrBuilder> 
        getSubtitleOrBuilderList();
    se.qxx.jukebox.domain.JukeboxDomain.SubtitleOrBuilder getSubtitleOrBuilder(
        int index);
  }
  public static final class JukeboxResponseStartMovie extends
      com.google.protobuf.GeneratedMessage
      implements JukeboxResponseStartMovieOrBuilder {
    // Use JukeboxResponseStartMovie.newBuilder() to construct.
    private JukeboxResponseStartMovie(Builder builder) {
      super(builder);
    }
    private JukeboxResponseStartMovie(boolean noInit) {}
    
    private static final JukeboxResponseStartMovie defaultInstance;
    public static JukeboxResponseStartMovie getDefaultInstance() {
      return defaultInstance;
    }
    
    public JukeboxResponseStartMovie getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return se.qxx.jukebox.domain.JukeboxDomain.internal_static_se_qxx_jukebox_domain_JukeboxResponseStartMovie_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return se.qxx.jukebox.domain.JukeboxDomain.internal_static_se_qxx_jukebox_domain_JukeboxResponseStartMovie_fieldAccessorTable;
    }
    
    // repeated .se.qxx.jukebox.domain.Subtitle subtitle = 1;
    public static final int SUBTITLE_FIELD_NUMBER = 1;
    private java.util.List<se.qxx.jukebox.domain.JukeboxDomain.Subtitle> subtitle_;
    public java.util.List<se.qxx.jukebox.domain.JukeboxDomain.Subtitle> getSubtitleList() {
      return subtitle_;
    }
    public java.util.List<? extends se.qxx.jukebox.domain.JukeboxDomain.SubtitleOrBuilder> 
        getSubtitleOrBuilderList() {
      return subtitle_;
    }
    public int getSubtitleCount() {
      return subtitle_.size();
    }
    public se.qxx.jukebox.domain.JukeboxDomain.Subtitle getSubtitle(int index) {
      return subtitle_.get(index);
    }
    public se.qxx.jukebox.domain.JukeboxDomain.SubtitleOrBuilder getSubtitleOrBuilder(
        int index) {
      return subtitle_.get(index);
    }
    
    private void initFields() {
      subtitle_ = java.util.Collections.emptyList();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;
      
      for (int i = 0; i < getSubtitleCount(); i++) {
        if (!getSubtitle(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      for (int i = 0; i < subtitle_.size(); i++) {
        output.writeMessage(1, subtitle_.get(i));
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      for (int i = 0; i < subtitle_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, subtitle_.get(i));
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }
    
    public static se.qxx.jukebox.domain.JukeboxDomain.JukeboxResponseStartMovie parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static se.qxx.jukebox.domain.JukeboxDomain.JukeboxResponseStartMovie parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static se.qxx.jukebox.domain.JukeboxDomain.JukeboxResponseStartMovie parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static se.qxx.jukebox.domain.JukeboxDomain.JukeboxResponseStartMovie parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static se.qxx.jukebox.domain.JukeboxDomain.JukeboxResponseStartMovie parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static se.qxx.jukebox.domain.JukeboxDomain.JukeboxResponseStartMovie parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static se.qxx.jukebox.domain.JukeboxDomain.JukeboxResponseStartMovie parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static se.qxx.jukebox.domain.JukeboxDomain.JukeboxResponseStartMovie parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static se.qxx.jukebox.domain.JukeboxDomain.JukeboxResponseStartMovie parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static se.qxx.jukebox.domain.JukeboxDomain.JukeboxResponseStartMovie parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(se.qxx.jukebox.domain.JukeboxDomain.JukeboxResponseStartMovie prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements se.qxx.jukebox.domain.JukeboxDomain.JukeboxResponseStartMovieOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return se.qxx.jukebox.domain.JukeboxDomain.internal_static_se_qxx_jukebox_domain_JukeboxResponseStartMovie_descriptor;
      }
      
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return se.qxx.jukebox.domain.JukeboxDomain.internal_static_se_qxx_jukebox_domain_JukeboxResponseStartMovie_fieldAccessorTable;
      }
      
      // Construct using se.qxx.jukebox.domain.JukeboxDomain.JukeboxResponseStartMovie.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }
      
      private Builder(BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getSubtitleFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }
      
      public Builder clear() {
        super.clear();
        if (subtitleBuilder_ == null) {
          subtitle_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
        } else {
          subtitleBuilder_.clear();
        }
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return se.qxx.jukebox.domain.JukeboxDomain.JukeboxResponseStartMovie.getDescriptor();
      }
      
      public se.qxx.jukebox.domain.JukeboxDomain.JukeboxResponseStartMovie getDefaultInstanceForType() {
        return se.qxx.jukebox.domain.JukeboxDomain.JukeboxResponseStartMovie.getDefaultInstance();
      }
      
      public se.qxx.jukebox.domain.JukeboxDomain.JukeboxResponseStartMovie build() {
        se.qxx.jukebox.domain.JukeboxDomain.JukeboxResponseStartMovie result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }
      
      private se.qxx.jukebox.domain.JukeboxDomain.JukeboxResponseStartMovie buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        se.qxx.jukebox.domain.JukeboxDomain.JukeboxResponseStartMovie result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return result;
      }
      
      public se.qxx.jukebox.domain.JukeboxDomain.JukeboxResponseStartMovie buildPartial() {
        se.qxx.jukebox.domain.JukeboxDomain.JukeboxResponseStartMovie result = new se.qxx.jukebox.domain.JukeboxDomain.JukeboxResponseStartMovie(this);
        int from_bitField0_ = bitField0_;
        if (subtitleBuilder_ == null) {
          if (((bitField0_ & 0x00000001) == 0x00000001)) {
            subtitle_ = java.util.Collections.unmodifiableList(subtitle_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.subtitle_ = subtitle_;
        } else {
          result.subtitle_ = subtitleBuilder_.build();
        }
        onBuilt();
        return result;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof se.qxx.jukebox.domain.JukeboxDomain.JukeboxResponseStartMovie) {
          return mergeFrom((se.qxx.jukebox.domain.JukeboxDomain.JukeboxResponseStartMovie)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(se.qxx.jukebox.domain.JukeboxDomain.JukeboxResponseStartMovie other) {
        if (other == se.qxx.jukebox.domain.JukeboxDomain.JukeboxResponseStartMovie.getDefaultInstance()) return this;
        if (subtitleBuilder_ == null) {
          if (!other.subtitle_.isEmpty()) {
            if (subtitle_.isEmpty()) {
              subtitle_ = other.subtitle_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensureSubtitleIsMutable();
              subtitle_.addAll(other.subtitle_);
            }
            onChanged();
          }
        } else {
          if (!other.subtitle_.isEmpty()) {
            if (subtitleBuilder_.isEmpty()) {
              subtitleBuilder_.dispose();
              subtitleBuilder_ = null;
              subtitle_ = other.subtitle_;
              bitField0_ = (bitField0_ & ~0x00000001);
              subtitleBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getSubtitleFieldBuilder() : null;
            } else {
              subtitleBuilder_.addAllMessages(other.subtitle_);
            }
          }
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public final boolean isInitialized() {
        for (int i = 0; i < getSubtitleCount(); i++) {
          if (!getSubtitle(i).isInitialized()) {
            
            return false;
          }
        }
        return true;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              onChanged();
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                onChanged();
                return this;
              }
              break;
            }
            case 10: {
              se.qxx.jukebox.domain.JukeboxDomain.Subtitle.Builder subBuilder = se.qxx.jukebox.domain.JukeboxDomain.Subtitle.newBuilder();
              input.readMessage(subBuilder, extensionRegistry);
              addSubtitle(subBuilder.buildPartial());
              break;
            }
          }
        }
      }
      
      private int bitField0_;
      
      // repeated .se.qxx.jukebox.domain.Subtitle subtitle = 1;
      private java.util.List<se.qxx.jukebox.domain.JukeboxDomain.Subtitle> subtitle_ =
        java.util.Collections.emptyList();
      private void ensureSubtitleIsMutable() {
        if (!((bitField0_ & 0x00000001) == 0x00000001)) {
          subtitle_ = new java.util.ArrayList<se.qxx.jukebox.domain.JukeboxDomain.Subtitle>(subtitle_);
          bitField0_ |= 0x00000001;
         }
      }
      
      private com.google.protobuf.RepeatedFieldBuilder<
          se.qxx.jukebox.domain.JukeboxDomain.Subtitle, se.qxx.jukebox.domain.JukeboxDomain.Subtitle.Builder, se.qxx.jukebox.domain.JukeboxDomain.SubtitleOrBuilder> subtitleBuilder_;
      
      public java.util.List<se.qxx.jukebox.domain.JukeboxDomain.Subtitle> getSubtitleList() {
        if (subtitleBuilder_ == null) {
          return java.util.Collections.unmodifiableList(subtitle_);
        } else {
          return subtitleBuilder_.getMessageList();
        }
      }
      public int getSubtitleCount() {
        if (subtitleBuilder_ == null) {
          return subtitle_.size();
        } else {
          return subtitleBuilder_.getCount();
        }
      }
      public se.qxx.jukebox.domain.JukeboxDomain.Subtitle getSubtitle(int index) {
        if (subtitleBuilder_ == null) {
          return subtitle_.get(index);
        } else {
          return subtitleBuilder_.getMessage(index);
        }
      }
      public Builder setSubtitle(
          int index, se.qxx.jukebox.domain.JukeboxDomain.Subtitle value) {
        if (subtitleBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureSubtitleIsMutable();
          subtitle_.set(index, value);
          onChanged();
        } else {
          subtitleBuilder_.setMessage(index, value);
        }
        return this;
      }
      public Builder setSubtitle(
          int index, se.qxx.jukebox.domain.JukeboxDomain.Subtitle.Builder builderForValue) {
        if (subtitleBuilder_ == null) {
          ensureSubtitleIsMutable();
          subtitle_.set(index, builderForValue.build());
          onChanged();
        } else {
          subtitleBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      public Builder addSubtitle(se.qxx.jukebox.domain.JukeboxDomain.Subtitle value) {
        if (subtitleBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureSubtitleIsMutable();
          subtitle_.add(value);
          onChanged();
        } else {
          subtitleBuilder_.addMessage(value);
        }
        return this;
      }
      public Builder addSubtitle(
          int index, se.qxx.jukebox.domain.JukeboxDomain.Subtitle value) {
        if (subtitleBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureSubtitleIsMutable();
          subtitle_.add(index, value);
          onChanged();
        } else {
          subtitleBuilder_.addMessage(index, value);
        }
        return this;
      }
      public Builder addSubtitle(
          se.qxx.jukebox.domain.JukeboxDomain.Subtitle.Builder builderForValue) {
        if (subtitleBuilder_ == null) {
          ensureSubtitleIsMutable();
          subtitle_.add(builderForValue.build());
          onChanged();
        } else {
          subtitleBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      public Builder addSubtitle(
          int index, se.qxx.jukebox.domain.JukeboxDomain.Subtitle.Builder builderForValue) {
        if (subtitleBuilder_ == null) {
          ensureSubtitleIsMutable();
          subtitle_.add(index, builderForValue.build());
          onChanged();
        } else {
          subtitleBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      public Builder addAllSubtitle(
          java.lang.Iterable<? extends se.qxx.jukebox.domain.JukeboxDomain.Subtitle> values) {
        if (subtitleBuilder_ == null) {
          ensureSubtitleIsMutable();
          super.addAll(values, subtitle_);
          onChanged();
        } else {
          subtitleBuilder_.addAllMessages(values);
        }
        return this;
      }
      public Builder clearSubtitle() {
        if (subtitleBuilder_ == null) {
          subtitle_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          subtitleBuilder_.clear();
        }
        return this;
      }
      public Builder removeSubtitle(int index) {
        if (subtitleBuilder_ == null) {
          ensureSubtitleIsMutable();
          subtitle_.remove(index);
          onChanged();
        } else {
          subtitleBuilder_.remove(index);
        }
        return this;
      }
      public se.qxx.jukebox.domain.JukeboxDomain.Subtitle.Builder getSubtitleBuilder(
          int index) {
        return getSubtitleFieldBuilder().getBuilder(index);
      }
      public se.qxx.jukebox.domain.JukeboxDomain.SubtitleOrBuilder getSubtitleOrBuilder(
          int index) {
        if (subtitleBuilder_ == null) {
          return subtitle_.get(index);  } else {
          return subtitleBuilder_.getMessageOrBuilder(index);
        }
      }
      public java.util.List<? extends se.qxx.jukebox.domain.JukeboxDomain.SubtitleOrBuilder> 
           getSubtitleOrBuilderList() {
        if (subtitleBuilder_ != null) {
          return subtitleBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(subtitle_);
        }
      }
      public se.qxx.jukebox.domain.JukeboxDomain.Subtitle.Builder addSubtitleBuilder() {
        return getSubtitleFieldBuilder().addBuilder(
            se.qxx.jukebox.domain.JukeboxDomain.Subtitle.getDefaultInstance());
      }
      public se.qxx.jukebox.domain.JukeboxDomain.Subtitle.Builder addSubtitleBuilder(
          int index) {
        return getSubtitleFieldBuilder().addBuilder(
            index, se.qxx.jukebox.domain.JukeboxDomain.Subtitle.getDefaultInstance());
      }
      public java.util.List<se.qxx.jukebox.domain.JukeboxDomain.Subtitle.Builder> 
           getSubtitleBuilderList() {
        return getSubtitleFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          se.qxx.jukebox.domain.JukeboxDomain.Subtitle, se.qxx.jukebox.domain.JukeboxDomain.Subtitle.Builder, se.qxx.jukebox.domain.JukeboxDomain.SubtitleOrBuilder> 
          getSubtitleFieldBuilder() {
        if (subtitleBuilder_ == null) {
          subtitleBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              se.qxx.jukebox.domain.JukeboxDomain.Subtitle, se.qxx.jukebox.domain.JukeboxDomain.Subtitle.Builder, se.qxx.jukebox.domain.JukeboxDomain.SubtitleOrBuilder>(
                  subtitle_,
                  ((bitField0_ & 0x00000001) == 0x00000001),
                  getParentForChildren(),
                  isClean());
          subtitle_ = null;
        }
        return subtitleBuilder_;
      }
      
      // @@protoc_insertion_point(builder_scope:se.qxx.jukebox.domain.JukeboxResponseStartMovie)
    }
    
    static {
      defaultInstance = new JukeboxResponseStartMovie(true);
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:se.qxx.jukebox.domain.JukeboxResponseStartMovie)
  }
  
  public interface JukeboxResponseTimeOrBuilder
      extends com.google.protobuf.MessageOrBuilder {
    
    // required int32 seconds = 1;
    boolean hasSeconds();
    int getSeconds();
    
    // required string filename = 2;
    boolean hasFilename();
    String getFilename();
  }
  public static final class JukeboxResponseTime extends
      com.google.protobuf.GeneratedMessage
      implements JukeboxResponseTimeOrBuilder {
    // Use JukeboxResponseTime.newBuilder() to construct.
    private JukeboxResponseTime(Builder builder) {
      super(builder);
    }
    private JukeboxResponseTime(boolean noInit) {}
    
    private static final JukeboxResponseTime defaultInstance;
    public static JukeboxResponseTime getDefaultInstance() {
      return defaultInstance;
    }
    
    public JukeboxResponseTime getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return se.qxx.jukebox.domain.JukeboxDomain.internal_static_se_qxx_jukebox_domain_JukeboxResponseTime_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return se.qxx.jukebox.domain.JukeboxDomain.internal_static_se_qxx_jukebox_domain_JukeboxResponseTime_fieldAccessorTable;
    }
    
    private int bitField0_;
    // required int32 seconds = 1;
    public static final int SECONDS_FIELD_NUMBER = 1;
    private int seconds_;
    public boolean hasSeconds() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    public int getSeconds() {
      return seconds_;
    }
    
    // required string filename = 2;
    public static final int FILENAME_FIELD_NUMBER = 2;
    private java.lang.Object filename_;
    public boolean hasFilename() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    public String getFilename() {
      java.lang.Object ref = filename_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        if (com.google.protobuf.Internal.isValidUtf8(bs)) {
          filename_ = s;
        }
        return s;
      }
    }
    private com.google.protobuf.ByteString getFilenameBytes() {
      java.lang.Object ref = filename_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8((String) ref);
        filename_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    
    private void initFields() {
      seconds_ = 0;
      filename_ = "";
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;
      
      if (!hasSeconds()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasFilename()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, seconds_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeBytes(2, getFilenameBytes());
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, seconds_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(2, getFilenameBytes());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }
    
    public static se.qxx.jukebox.domain.JukeboxDomain.JukeboxResponseTime parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static se.qxx.jukebox.domain.JukeboxDomain.JukeboxResponseTime parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static se.qxx.jukebox.domain.JukeboxDomain.JukeboxResponseTime parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static se.qxx.jukebox.domain.JukeboxDomain.JukeboxResponseTime parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static se.qxx.jukebox.domain.JukeboxDomain.JukeboxResponseTime parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static se.qxx.jukebox.domain.JukeboxDomain.JukeboxResponseTime parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static se.qxx.jukebox.domain.JukeboxDomain.JukeboxResponseTime parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static se.qxx.jukebox.domain.JukeboxDomain.JukeboxResponseTime parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static se.qxx.jukebox.domain.JukeboxDomain.JukeboxResponseTime parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static se.qxx.jukebox.domain.JukeboxDomain.JukeboxResponseTime parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(se.qxx.jukebox.domain.JukeboxDomain.JukeboxResponseTime prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements se.qxx.jukebox.domain.JukeboxDomain.JukeboxResponseTimeOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return se.qxx.jukebox.domain.JukeboxDomain.internal_static_se_qxx_jukebox_domain_JukeboxResponseTime_descriptor;
      }
      
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return se.qxx.jukebox.domain.JukeboxDomain.internal_static_se_qxx_jukebox_domain_JukeboxResponseTime_fieldAccessorTable;
      }
      
      // Construct using se.qxx.jukebox.domain.JukeboxDomain.JukeboxResponseTime.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }
      
      private Builder(BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }
      
      public Builder clear() {
        super.clear();
        seconds_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        filename_ = "";
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return se.qxx.jukebox.domain.JukeboxDomain.JukeboxResponseTime.getDescriptor();
      }
      
      public se.qxx.jukebox.domain.JukeboxDomain.JukeboxResponseTime getDefaultInstanceForType() {
        return se.qxx.jukebox.domain.JukeboxDomain.JukeboxResponseTime.getDefaultInstance();
      }
      
      public se.qxx.jukebox.domain.JukeboxDomain.JukeboxResponseTime build() {
        se.qxx.jukebox.domain.JukeboxDomain.JukeboxResponseTime result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }
      
      private se.qxx.jukebox.domain.JukeboxDomain.JukeboxResponseTime buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        se.qxx.jukebox.domain.JukeboxDomain.JukeboxResponseTime result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return result;
      }
      
      public se.qxx.jukebox.domain.JukeboxDomain.JukeboxResponseTime buildPartial() {
        se.qxx.jukebox.domain.JukeboxDomain.JukeboxResponseTime result = new se.qxx.jukebox.domain.JukeboxDomain.JukeboxResponseTime(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.seconds_ = seconds_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.filename_ = filename_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof se.qxx.jukebox.domain.JukeboxDomain.JukeboxResponseTime) {
          return mergeFrom((se.qxx.jukebox.domain.JukeboxDomain.JukeboxResponseTime)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(se.qxx.jukebox.domain.JukeboxDomain.JukeboxResponseTime other) {
        if (other == se.qxx.jukebox.domain.JukeboxDomain.JukeboxResponseTime.getDefaultInstance()) return this;
        if (other.hasSeconds()) {
          setSeconds(other.getSeconds());
        }
        if (other.hasFilename()) {
          setFilename(other.getFilename());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public final boolean isInitialized() {
        if (!hasSeconds()) {
          
          return false;
        }
        if (!hasFilename()) {
          
          return false;
        }
        return true;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              onChanged();
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                onChanged();
                return this;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              seconds_ = input.readInt32();
              break;
            }
            case 18: {
              bitField0_ |= 0x00000002;
              filename_ = input.readBytes();
              break;
            }
          }
        }
      }
      
      private int bitField0_;
      
      // required int32 seconds = 1;
      private int seconds_ ;
      public boolean hasSeconds() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      public int getSeconds() {
        return seconds_;
      }
      public Builder setSeconds(int value) {
        bitField0_ |= 0x00000001;
        seconds_ = value;
        onChanged();
        return this;
      }
      public Builder clearSeconds() {
        bitField0_ = (bitField0_ & ~0x00000001);
        seconds_ = 0;
        onChanged();
        return this;
      }
      
      // required string filename = 2;
      private java.lang.Object filename_ = "";
      public boolean hasFilename() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      public String getFilename() {
        java.lang.Object ref = filename_;
        if (!(ref instanceof String)) {
          String s = ((com.google.protobuf.ByteString) ref).toStringUtf8();
          filename_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      public Builder setFilename(String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        filename_ = value;
        onChanged();
        return this;
      }
      public Builder clearFilename() {
        bitField0_ = (bitField0_ & ~0x00000002);
        filename_ = getDefaultInstance().getFilename();
        onChanged();
        return this;
      }
      void setFilename(com.google.protobuf.ByteString value) {
        bitField0_ |= 0x00000002;
        filename_ = value;
        onChanged();
      }
      
      // @@protoc_insertion_point(builder_scope:se.qxx.jukebox.domain.JukeboxResponseTime)
    }
    
    static {
      defaultInstance = new JukeboxResponseTime(true);
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:se.qxx.jukebox.domain.JukeboxResponseTime)
  }
  
  public interface JukeboxResponseIsPlayingOrBuilder
      extends com.google.protobuf.MessageOrBuilder {
    
    // required bool isPlaying = 1;
    boolean hasIsPlaying();
    boolean getIsPlaying();
  }
  public static final class JukeboxResponseIsPlaying extends
      com.google.protobuf.GeneratedMessage
      implements JukeboxResponseIsPlayingOrBuilder {
    // Use JukeboxResponseIsPlaying.newBuilder() to construct.
    private JukeboxResponseIsPlaying(Builder builder) {
      super(builder);
    }
    private JukeboxResponseIsPlaying(boolean noInit) {}
    
    private static final JukeboxResponseIsPlaying defaultInstance;
    public static JukeboxResponseIsPlaying getDefaultInstance() {
      return defaultInstance;
    }
    
    public JukeboxResponseIsPlaying getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return se.qxx.jukebox.domain.JukeboxDomain.internal_static_se_qxx_jukebox_domain_JukeboxResponseIsPlaying_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return se.qxx.jukebox.domain.JukeboxDomain.internal_static_se_qxx_jukebox_domain_JukeboxResponseIsPlaying_fieldAccessorTable;
    }
    
    private int bitField0_;
    // required bool isPlaying = 1;
    public static final int ISPLAYING_FIELD_NUMBER = 1;
    private boolean isPlaying_;
    public boolean hasIsPlaying() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    public boolean getIsPlaying() {
      return isPlaying_;
    }
    
    private void initFields() {
      isPlaying_ = false;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;
      
      if (!hasIsPlaying()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBool(1, isPlaying_);
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(1, isPlaying_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }
    
    public static se.qxx.jukebox.domain.JukeboxDomain.JukeboxResponseIsPlaying parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static se.qxx.jukebox.domain.JukeboxDomain.JukeboxResponseIsPlaying parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static se.qxx.jukebox.domain.JukeboxDomain.JukeboxResponseIsPlaying parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static se.qxx.jukebox.domain.JukeboxDomain.JukeboxResponseIsPlaying parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static se.qxx.jukebox.domain.JukeboxDomain.JukeboxResponseIsPlaying parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static se.qxx.jukebox.domain.JukeboxDomain.JukeboxResponseIsPlaying parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static se.qxx.jukebox.domain.JukeboxDomain.JukeboxResponseIsPlaying parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static se.qxx.jukebox.domain.JukeboxDomain.JukeboxResponseIsPlaying parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static se.qxx.jukebox.domain.JukeboxDomain.JukeboxResponseIsPlaying parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static se.qxx.jukebox.domain.JukeboxDomain.JukeboxResponseIsPlaying parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(se.qxx.jukebox.domain.JukeboxDomain.JukeboxResponseIsPlaying prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements se.qxx.jukebox.domain.JukeboxDomain.JukeboxResponseIsPlayingOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return se.qxx.jukebox.domain.JukeboxDomain.internal_static_se_qxx_jukebox_domain_JukeboxResponseIsPlaying_descriptor;
      }
      
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return se.qxx.jukebox.domain.JukeboxDomain.internal_static_se_qxx_jukebox_domain_JukeboxResponseIsPlaying_fieldAccessorTable;
      }
      
      // Construct using se.qxx.jukebox.domain.JukeboxDomain.JukeboxResponseIsPlaying.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }
      
      private Builder(BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }
      
      public Builder clear() {
        super.clear();
        isPlaying_ = false;
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return se.qxx.jukebox.domain.JukeboxDomain.JukeboxResponseIsPlaying.getDescriptor();
      }
      
      public se.qxx.jukebox.domain.JukeboxDomain.JukeboxResponseIsPlaying getDefaultInstanceForType() {
        return se.qxx.jukebox.domain.JukeboxDomain.JukeboxResponseIsPlaying.getDefaultInstance();
      }
      
      public se.qxx.jukebox.domain.JukeboxDomain.JukeboxResponseIsPlaying build() {
        se.qxx.jukebox.domain.JukeboxDomain.JukeboxResponseIsPlaying result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }
      
      private se.qxx.jukebox.domain.JukeboxDomain.JukeboxResponseIsPlaying buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        se.qxx.jukebox.domain.JukeboxDomain.JukeboxResponseIsPlaying result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return result;
      }
      
      public se.qxx.jukebox.domain.JukeboxDomain.JukeboxResponseIsPlaying buildPartial() {
        se.qxx.jukebox.domain.JukeboxDomain.JukeboxResponseIsPlaying result = new se.qxx.jukebox.domain.JukeboxDomain.JukeboxResponseIsPlaying(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.isPlaying_ = isPlaying_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof se.qxx.jukebox.domain.JukeboxDomain.JukeboxResponseIsPlaying) {
          return mergeFrom((se.qxx.jukebox.domain.JukeboxDomain.JukeboxResponseIsPlaying)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(se.qxx.jukebox.domain.JukeboxDomain.JukeboxResponseIsPlaying other) {
        if (other == se.qxx.jukebox.domain.JukeboxDomain.JukeboxResponseIsPlaying.getDefaultInstance()) return this;
        if (other.hasIsPlaying()) {
          setIsPlaying(other.getIsPlaying());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public final boolean isInitialized() {
        if (!hasIsPlaying()) {
          
          return false;
        }
        return true;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              onChanged();
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                onChanged();
                return this;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              isPlaying_ = input.readBool();
              break;
            }
          }
        }
      }
      
      private int bitField0_;
      
      // required bool isPlaying = 1;
      private boolean isPlaying_ ;
      public boolean hasIsPlaying() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      public boolean getIsPlaying() {
        return isPlaying_;
      }
      public Builder setIsPlaying(boolean value) {
        bitField0_ |= 0x00000001;
        isPlaying_ = value;
        onChanged();
        return this;
      }
      public Builder clearIsPlaying() {
        bitField0_ = (bitField0_ & ~0x00000001);
        isPlaying_ = false;
        onChanged();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:se.qxx.jukebox.domain.JukeboxResponseIsPlaying)
    }
    
    static {
      defaultInstance = new JukeboxResponseIsPlaying(true);
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:se.qxx.jukebox.domain.JukeboxResponseIsPlaying)
  }
  
  public interface JukeboxResponseGetTitleOrBuilder
      extends com.google.protobuf.MessageOrBuilder {
    
    // required string title = 1;
    boolean hasTitle();
    String getTitle();
  }
  public static final class JukeboxResponseGetTitle extends
      com.google.protobuf.GeneratedMessage
      implements JukeboxResponseGetTitleOrBuilder {
    // Use JukeboxResponseGetTitle.newBuilder() to construct.
    private JukeboxResponseGetTitle(Builder builder) {
      super(builder);
    }
    private JukeboxResponseGetTitle(boolean noInit) {}
    
    private static final JukeboxResponseGetTitle defaultInstance;
    public static JukeboxResponseGetTitle getDefaultInstance() {
      return defaultInstance;
    }
    
    public JukeboxResponseGetTitle getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return se.qxx.jukebox.domain.JukeboxDomain.internal_static_se_qxx_jukebox_domain_JukeboxResponseGetTitle_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return se.qxx.jukebox.domain.JukeboxDomain.internal_static_se_qxx_jukebox_domain_JukeboxResponseGetTitle_fieldAccessorTable;
    }
    
    private int bitField0_;
    // required string title = 1;
    public static final int TITLE_FIELD_NUMBER = 1;
    private java.lang.Object title_;
    public boolean hasTitle() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    public String getTitle() {
      java.lang.Object ref = title_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        if (com.google.protobuf.Internal.isValidUtf8(bs)) {
          title_ = s;
        }
        return s;
      }
    }
    private com.google.protobuf.ByteString getTitleBytes() {
      java.lang.Object ref = title_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8((String) ref);
        title_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    
    private void initFields() {
      title_ = "";
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;
      
      if (!hasTitle()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBytes(1, getTitleBytes());
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, getTitleBytes());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }
    
    public static se.qxx.jukebox.domain.JukeboxDomain.JukeboxResponseGetTitle parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static se.qxx.jukebox.domain.JukeboxDomain.JukeboxResponseGetTitle parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static se.qxx.jukebox.domain.JukeboxDomain.JukeboxResponseGetTitle parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static se.qxx.jukebox.domain.JukeboxDomain.JukeboxResponseGetTitle parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static se.qxx.jukebox.domain.JukeboxDomain.JukeboxResponseGetTitle parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static se.qxx.jukebox.domain.JukeboxDomain.JukeboxResponseGetTitle parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static se.qxx.jukebox.domain.JukeboxDomain.JukeboxResponseGetTitle parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static se.qxx.jukebox.domain.JukeboxDomain.JukeboxResponseGetTitle parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static se.qxx.jukebox.domain.JukeboxDomain.JukeboxResponseGetTitle parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static se.qxx.jukebox.domain.JukeboxDomain.JukeboxResponseGetTitle parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(se.qxx.jukebox.domain.JukeboxDomain.JukeboxResponseGetTitle prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements se.qxx.jukebox.domain.JukeboxDomain.JukeboxResponseGetTitleOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return se.qxx.jukebox.domain.JukeboxDomain.internal_static_se_qxx_jukebox_domain_JukeboxResponseGetTitle_descriptor;
      }
      
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return se.qxx.jukebox.domain.JukeboxDomain.internal_static_se_qxx_jukebox_domain_JukeboxResponseGetTitle_fieldAccessorTable;
      }
      
      // Construct using se.qxx.jukebox.domain.JukeboxDomain.JukeboxResponseGetTitle.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }
      
      private Builder(BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }
      
      public Builder clear() {
        super.clear();
        title_ = "";
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return se.qxx.jukebox.domain.JukeboxDomain.JukeboxResponseGetTitle.getDescriptor();
      }
      
      public se.qxx.jukebox.domain.JukeboxDomain.JukeboxResponseGetTitle getDefaultInstanceForType() {
        return se.qxx.jukebox.domain.JukeboxDomain.JukeboxResponseGetTitle.getDefaultInstance();
      }
      
      public se.qxx.jukebox.domain.JukeboxDomain.JukeboxResponseGetTitle build() {
        se.qxx.jukebox.domain.JukeboxDomain.JukeboxResponseGetTitle result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }
      
      private se.qxx.jukebox.domain.JukeboxDomain.JukeboxResponseGetTitle buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        se.qxx.jukebox.domain.JukeboxDomain.JukeboxResponseGetTitle result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return result;
      }
      
      public se.qxx.jukebox.domain.JukeboxDomain.JukeboxResponseGetTitle buildPartial() {
        se.qxx.jukebox.domain.JukeboxDomain.JukeboxResponseGetTitle result = new se.qxx.jukebox.domain.JukeboxDomain.JukeboxResponseGetTitle(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.title_ = title_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof se.qxx.jukebox.domain.JukeboxDomain.JukeboxResponseGetTitle) {
          return mergeFrom((se.qxx.jukebox.domain.JukeboxDomain.JukeboxResponseGetTitle)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(se.qxx.jukebox.domain.JukeboxDomain.JukeboxResponseGetTitle other) {
        if (other == se.qxx.jukebox.domain.JukeboxDomain.JukeboxResponseGetTitle.getDefaultInstance()) return this;
        if (other.hasTitle()) {
          setTitle(other.getTitle());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public final boolean isInitialized() {
        if (!hasTitle()) {
          
          return false;
        }
        return true;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              onChanged();
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                onChanged();
                return this;
              }
              break;
            }
            case 10: {
              bitField0_ |= 0x00000001;
              title_ = input.readBytes();
              break;
            }
          }
        }
      }
      
      private int bitField0_;
      
      // required string title = 1;
      private java.lang.Object title_ = "";
      public boolean hasTitle() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      public String getTitle() {
        java.lang.Object ref = title_;
        if (!(ref instanceof String)) {
          String s = ((com.google.protobuf.ByteString) ref).toStringUtf8();
          title_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      public Builder setTitle(String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        title_ = value;
        onChanged();
        return this;
      }
      public Builder clearTitle() {
        bitField0_ = (bitField0_ & ~0x00000001);
        title_ = getDefaultInstance().getTitle();
        onChanged();
        return this;
      }
      void setTitle(com.google.protobuf.ByteString value) {
        bitField0_ |= 0x00000001;
        title_ = value;
        onChanged();
      }
      
      // @@protoc_insertion_point(builder_scope:se.qxx.jukebox.domain.JukeboxResponseGetTitle)
    }
    
    static {
      defaultInstance = new JukeboxResponseGetTitle(true);
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:se.qxx.jukebox.domain.JukeboxResponseGetTitle)
  }
  
  public static abstract class JukeboxService
      implements com.google.protobuf.Service {
    protected JukeboxService() {}
    
    public interface Interface {
      public abstract void listMovies(
          com.google.protobuf.RpcController controller,
          se.qxx.jukebox.domain.JukeboxDomain.JukeboxRequestListMovies request,
          com.google.protobuf.RpcCallback<se.qxx.jukebox.domain.JukeboxDomain.JukeboxResponseListMovies> done);
      
      public abstract void listPlayers(
          com.google.protobuf.RpcController controller,
          se.qxx.jukebox.domain.JukeboxDomain.Empty request,
          com.google.protobuf.RpcCallback<se.qxx.jukebox.domain.JukeboxDomain.JukeboxResponseListPlayers> done);
      
      public abstract void startMovie(
          com.google.protobuf.RpcController controller,
          se.qxx.jukebox.domain.JukeboxDomain.JukeboxRequestStartMovie request,
          com.google.protobuf.RpcCallback<se.qxx.jukebox.domain.JukeboxDomain.JukeboxResponseStartMovie> done);
      
      public abstract void stopMovie(
          com.google.protobuf.RpcController controller,
          se.qxx.jukebox.domain.JukeboxDomain.JukeboxRequestGeneral request,
          com.google.protobuf.RpcCallback<se.qxx.jukebox.domain.JukeboxDomain.Empty> done);
      
      public abstract void pauseMovie(
          com.google.protobuf.RpcController controller,
          se.qxx.jukebox.domain.JukeboxDomain.JukeboxRequestGeneral request,
          com.google.protobuf.RpcCallback<se.qxx.jukebox.domain.JukeboxDomain.Empty> done);
      
      public abstract void seek(
          com.google.protobuf.RpcController controller,
          se.qxx.jukebox.domain.JukeboxDomain.JukeboxRequestSeek request,
          com.google.protobuf.RpcCallback<se.qxx.jukebox.domain.JukeboxDomain.Empty> done);
      
      public abstract void switchVRatio(
          com.google.protobuf.RpcController controller,
          se.qxx.jukebox.domain.JukeboxDomain.JukeboxRequestGeneral request,
          com.google.protobuf.RpcCallback<se.qxx.jukebox.domain.JukeboxDomain.Empty> done);
      
      public abstract void getTime(
          com.google.protobuf.RpcController controller,
          se.qxx.jukebox.domain.JukeboxDomain.JukeboxRequestGeneral request,
          com.google.protobuf.RpcCallback<se.qxx.jukebox.domain.JukeboxDomain.JukeboxResponseTime> done);
      
      public abstract void isPlaying(
          com.google.protobuf.RpcController controller,
          se.qxx.jukebox.domain.JukeboxDomain.JukeboxRequestGeneral request,
          com.google.protobuf.RpcCallback<se.qxx.jukebox.domain.JukeboxDomain.JukeboxResponseIsPlaying> done);
      
      public abstract void getTitle(
          com.google.protobuf.RpcController controller,
          se.qxx.jukebox.domain.JukeboxDomain.JukeboxRequestGeneral request,
          com.google.protobuf.RpcCallback<se.qxx.jukebox.domain.JukeboxDomain.JukeboxResponseGetTitle> done);
      
      public abstract void toggleFullscreen(
          com.google.protobuf.RpcController controller,
          se.qxx.jukebox.domain.JukeboxDomain.JukeboxRequestGeneral request,
          com.google.protobuf.RpcCallback<se.qxx.jukebox.domain.JukeboxDomain.Empty> done);
      
      public abstract void blacklist(
          com.google.protobuf.RpcController controller,
          se.qxx.jukebox.domain.JukeboxDomain.JukeboxRequestMovieID request,
          com.google.protobuf.RpcCallback<se.qxx.jukebox.domain.JukeboxDomain.Empty> done);
      
      public abstract void toggleWatched(
          com.google.protobuf.RpcController controller,
          se.qxx.jukebox.domain.JukeboxDomain.JukeboxRequestMovieID request,
          com.google.protobuf.RpcCallback<se.qxx.jukebox.domain.JukeboxDomain.Empty> done);
      
      public abstract void listSubtitles(
          com.google.protobuf.RpcController controller,
          se.qxx.jukebox.domain.JukeboxDomain.JukeboxRequestListSubtitles request,
          com.google.protobuf.RpcCallback<se.qxx.jukebox.domain.JukeboxDomain.JukeboxResponseListSubtitles> done);
      
      public abstract void setSubtitle(
          com.google.protobuf.RpcController controller,
          se.qxx.jukebox.domain.JukeboxDomain.JukeboxRequestSetSubtitle request,
          com.google.protobuf.RpcCallback<se.qxx.jukebox.domain.JukeboxDomain.Empty> done);
      
      public abstract void wakeup(
          com.google.protobuf.RpcController controller,
          se.qxx.jukebox.domain.JukeboxDomain.JukeboxRequestGeneral request,
          com.google.protobuf.RpcCallback<se.qxx.jukebox.domain.JukeboxDomain.Empty> done);
      
      public abstract void suspend(
          com.google.protobuf.RpcController controller,
          se.qxx.jukebox.domain.JukeboxDomain.JukeboxRequestGeneral request,
          com.google.protobuf.RpcCallback<se.qxx.jukebox.domain.JukeboxDomain.Empty> done);
      
    }
    
    public static com.google.protobuf.Service newReflectiveService(
        final Interface impl) {
      return new JukeboxService() {
        @java.lang.Override
        public  void listMovies(
            com.google.protobuf.RpcController controller,
            se.qxx.jukebox.domain.JukeboxDomain.JukeboxRequestListMovies request,
            com.google.protobuf.RpcCallback<se.qxx.jukebox.domain.JukeboxDomain.JukeboxResponseListMovies> done) {
          impl.listMovies(controller, request, done);
        }
        
        @java.lang.Override
        public  void listPlayers(
            com.google.protobuf.RpcController controller,
            se.qxx.jukebox.domain.JukeboxDomain.Empty request,
            com.google.protobuf.RpcCallback<se.qxx.jukebox.domain.JukeboxDomain.JukeboxResponseListPlayers> done) {
          impl.listPlayers(controller, request, done);
        }
        
        @java.lang.Override
        public  void startMovie(
            com.google.protobuf.RpcController controller,
            se.qxx.jukebox.domain.JukeboxDomain.JukeboxRequestStartMovie request,
            com.google.protobuf.RpcCallback<se.qxx.jukebox.domain.JukeboxDomain.JukeboxResponseStartMovie> done) {
          impl.startMovie(controller, request, done);
        }
        
        @java.lang.Override
        public  void stopMovie(
            com.google.protobuf.RpcController controller,
            se.qxx.jukebox.domain.JukeboxDomain.JukeboxRequestGeneral request,
            com.google.protobuf.RpcCallback<se.qxx.jukebox.domain.JukeboxDomain.Empty> done) {
          impl.stopMovie(controller, request, done);
        }
        
        @java.lang.Override
        public  void pauseMovie(
            com.google.protobuf.RpcController controller,
            se.qxx.jukebox.domain.JukeboxDomain.JukeboxRequestGeneral request,
            com.google.protobuf.RpcCallback<se.qxx.jukebox.domain.JukeboxDomain.Empty> done) {
          impl.pauseMovie(controller, request, done);
        }
        
        @java.lang.Override
        public  void seek(
            com.google.protobuf.RpcController controller,
            se.qxx.jukebox.domain.JukeboxDomain.JukeboxRequestSeek request,
            com.google.protobuf.RpcCallback<se.qxx.jukebox.domain.JukeboxDomain.Empty> done) {
          impl.seek(controller, request, done);
        }
        
        @java.lang.Override
        public  void switchVRatio(
            com.google.protobuf.RpcController controller,
            se.qxx.jukebox.domain.JukeboxDomain.JukeboxRequestGeneral request,
            com.google.protobuf.RpcCallback<se.qxx.jukebox.domain.JukeboxDomain.Empty> done) {
          impl.switchVRatio(controller, request, done);
        }
        
        @java.lang.Override
        public  void getTime(
            com.google.protobuf.RpcController controller,
            se.qxx.jukebox.domain.JukeboxDomain.JukeboxRequestGeneral request,
            com.google.protobuf.RpcCallback<se.qxx.jukebox.domain.JukeboxDomain.JukeboxResponseTime> done) {
          impl.getTime(controller, request, done);
        }
        
        @java.lang.Override
        public  void isPlaying(
            com.google.protobuf.RpcController controller,
            se.qxx.jukebox.domain.JukeboxDomain.JukeboxRequestGeneral request,
            com.google.protobuf.RpcCallback<se.qxx.jukebox.domain.JukeboxDomain.JukeboxResponseIsPlaying> done) {
          impl.isPlaying(controller, request, done);
        }
        
        @java.lang.Override
        public  void getTitle(
            com.google.protobuf.RpcController controller,
            se.qxx.jukebox.domain.JukeboxDomain.JukeboxRequestGeneral request,
            com.google.protobuf.RpcCallback<se.qxx.jukebox.domain.JukeboxDomain.JukeboxResponseGetTitle> done) {
          impl.getTitle(controller, request, done);
        }
        
        @java.lang.Override
        public  void toggleFullscreen(
            com.google.protobuf.RpcController controller,
            se.qxx.jukebox.domain.JukeboxDomain.JukeboxRequestGeneral request,
            com.google.protobuf.RpcCallback<se.qxx.jukebox.domain.JukeboxDomain.Empty> done) {
          impl.toggleFullscreen(controller, request, done);
        }
        
        @java.lang.Override
        public  void blacklist(
            com.google.protobuf.RpcController controller,
            se.qxx.jukebox.domain.JukeboxDomain.JukeboxRequestMovieID request,
            com.google.protobuf.RpcCallback<se.qxx.jukebox.domain.JukeboxDomain.Empty> done) {
          impl.blacklist(controller, request, done);
        }
        
        @java.lang.Override
        public  void toggleWatched(
            com.google.protobuf.RpcController controller,
            se.qxx.jukebox.domain.JukeboxDomain.JukeboxRequestMovieID request,
            com.google.protobuf.RpcCallback<se.qxx.jukebox.domain.JukeboxDomain.Empty> done) {
          impl.toggleWatched(controller, request, done);
        }
        
        @java.lang.Override
        public  void listSubtitles(
            com.google.protobuf.RpcController controller,
            se.qxx.jukebox.domain.JukeboxDomain.JukeboxRequestListSubtitles request,
            com.google.protobuf.RpcCallback<se.qxx.jukebox.domain.JukeboxDomain.JukeboxResponseListSubtitles> done) {
          impl.listSubtitles(controller, request, done);
        }
        
        @java.lang.Override
        public  void setSubtitle(
            com.google.protobuf.RpcController controller,
            se.qxx.jukebox.domain.JukeboxDomain.JukeboxRequestSetSubtitle request,
            com.google.protobuf.RpcCallback<se.qxx.jukebox.domain.JukeboxDomain.Empty> done) {
          impl.setSubtitle(controller, request, done);
        }
        
        @java.lang.Override
        public  void wakeup(
            com.google.protobuf.RpcController controller,
            se.qxx.jukebox.domain.JukeboxDomain.JukeboxRequestGeneral request,
            com.google.protobuf.RpcCallback<se.qxx.jukebox.domain.JukeboxDomain.Empty> done) {
          impl.wakeup(controller, request, done);
        }
        
        @java.lang.Override
        public  void suspend(
            com.google.protobuf.RpcController controller,
            se.qxx.jukebox.domain.JukeboxDomain.JukeboxRequestGeneral request,
            com.google.protobuf.RpcCallback<se.qxx.jukebox.domain.JukeboxDomain.Empty> done) {
          impl.suspend(controller, request, done);
        }
        
      };
    }
    
    public static com.google.protobuf.BlockingService
        newReflectiveBlockingService(final BlockingInterface impl) {
      return new com.google.protobuf.BlockingService() {
        public final com.google.protobuf.Descriptors.ServiceDescriptor
            getDescriptorForType() {
          return getDescriptor();
        }
        
        public final com.google.protobuf.Message callBlockingMethod(
            com.google.protobuf.Descriptors.MethodDescriptor method,
            com.google.protobuf.RpcController controller,
            com.google.protobuf.Message request)
            throws com.google.protobuf.ServiceException {
          if (method.getService() != getDescriptor()) {
            throw new java.lang.IllegalArgumentException(
              "Service.callBlockingMethod() given method descriptor for " +
              "wrong service type.");
          }
          switch(method.getIndex()) {
            case 0:
              return impl.listMovies(controller, (se.qxx.jukebox.domain.JukeboxDomain.JukeboxRequestListMovies)request);
            case 1:
              return impl.listPlayers(controller, (se.qxx.jukebox.domain.JukeboxDomain.Empty)request);
            case 2:
              return impl.startMovie(controller, (se.qxx.jukebox.domain.JukeboxDomain.JukeboxRequestStartMovie)request);
            case 3:
              return impl.stopMovie(controller, (se.qxx.jukebox.domain.JukeboxDomain.JukeboxRequestGeneral)request);
            case 4:
              return impl.pauseMovie(controller, (se.qxx.jukebox.domain.JukeboxDomain.JukeboxRequestGeneral)request);
            case 5:
              return impl.seek(controller, (se.qxx.jukebox.domain.JukeboxDomain.JukeboxRequestSeek)request);
            case 6:
              return impl.switchVRatio(controller, (se.qxx.jukebox.domain.JukeboxDomain.JukeboxRequestGeneral)request);
            case 7:
              return impl.getTime(controller, (se.qxx.jukebox.domain.JukeboxDomain.JukeboxRequestGeneral)request);
            case 8:
              return impl.isPlaying(controller, (se.qxx.jukebox.domain.JukeboxDomain.JukeboxRequestGeneral)request);
            case 9:
              return impl.getTitle(controller, (se.qxx.jukebox.domain.JukeboxDomain.JukeboxRequestGeneral)request);
            case 10:
              return impl.toggleFullscreen(controller, (se.qxx.jukebox.domain.JukeboxDomain.JukeboxRequestGeneral)request);
            case 11:
              return impl.blacklist(controller, (se.qxx.jukebox.domain.JukeboxDomain.JukeboxRequestMovieID)request);
            case 12:
              return impl.toggleWatched(controller, (se.qxx.jukebox.domain.JukeboxDomain.JukeboxRequestMovieID)request);
            case 13:
              return impl.listSubtitles(controller, (se.qxx.jukebox.domain.JukeboxDomain.JukeboxRequestListSubtitles)request);
            case 14:
              return impl.setSubtitle(controller, (se.qxx.jukebox.domain.JukeboxDomain.JukeboxRequestSetSubtitle)request);
            case 15:
              return impl.wakeup(controller, (se.qxx.jukebox.domain.JukeboxDomain.JukeboxRequestGeneral)request);
            case 16:
              return impl.suspend(controller, (se.qxx.jukebox.domain.JukeboxDomain.JukeboxRequestGeneral)request);
            default:
              throw new java.lang.AssertionError("Can't get here.");
          }
        }
        
        public final com.google.protobuf.Message
            getRequestPrototype(
            com.google.protobuf.Descriptors.MethodDescriptor method) {
          if (method.getService() != getDescriptor()) {
            throw new java.lang.IllegalArgumentException(
              "Service.getRequestPrototype() given method " +
              "descriptor for wrong service type.");
          }
          switch(method.getIndex()) {
            case 0:
              return se.qxx.jukebox.domain.JukeboxDomain.JukeboxRequestListMovies.getDefaultInstance();
            case 1:
              return se.qxx.jukebox.domain.JukeboxDomain.Empty.getDefaultInstance();
            case 2:
              return se.qxx.jukebox.domain.JukeboxDomain.JukeboxRequestStartMovie.getDefaultInstance();
            case 3:
              return se.qxx.jukebox.domain.JukeboxDomain.JukeboxRequestGeneral.getDefaultInstance();
            case 4:
              return se.qxx.jukebox.domain.JukeboxDomain.JukeboxRequestGeneral.getDefaultInstance();
            case 5:
              return se.qxx.jukebox.domain.JukeboxDomain.JukeboxRequestSeek.getDefaultInstance();
            case 6:
              return se.qxx.jukebox.domain.JukeboxDomain.JukeboxRequestGeneral.getDefaultInstance();
            case 7:
              return se.qxx.jukebox.domain.JukeboxDomain.JukeboxRequestGeneral.getDefaultInstance();
            case 8:
              return se.qxx.jukebox.domain.JukeboxDomain.JukeboxRequestGeneral.getDefaultInstance();
            case 9:
              return se.qxx.jukebox.domain.JukeboxDomain.JukeboxRequestGeneral.getDefaultInstance();
            case 10:
              return se.qxx.jukebox.domain.JukeboxDomain.JukeboxRequestGeneral.getDefaultInstance();
            case 11:
              return se.qxx.jukebox.domain.JukeboxDomain.JukeboxRequestMovieID.getDefaultInstance();
            case 12:
              return se.qxx.jukebox.domain.JukeboxDomain.JukeboxRequestMovieID.getDefaultInstance();
            case 13:
              return se.qxx.jukebox.domain.JukeboxDomain.JukeboxRequestListSubtitles.getDefaultInstance();
            case 14:
              return se.qxx.jukebox.domain.JukeboxDomain.JukeboxRequestSetSubtitle.getDefaultInstance();
            case 15:
              return se.qxx.jukebox.domain.JukeboxDomain.JukeboxRequestGeneral.getDefaultInstance();
            case 16:
              return se.qxx.jukebox.domain.JukeboxDomain.JukeboxRequestGeneral.getDefaultInstance();
            default:
              throw new java.lang.AssertionError("Can't get here.");
          }
        }
        
        public final com.google.protobuf.Message
            getResponsePrototype(
            com.google.protobuf.Descriptors.MethodDescriptor method) {
          if (method.getService() != getDescriptor()) {
            throw new java.lang.IllegalArgumentException(
              "Service.getResponsePrototype() given method " +
              "descriptor for wrong service type.");
          }
          switch(method.getIndex()) {
            case 0:
              return se.qxx.jukebox.domain.JukeboxDomain.JukeboxResponseListMovies.getDefaultInstance();
            case 1:
              return se.qxx.jukebox.domain.JukeboxDomain.JukeboxResponseListPlayers.getDefaultInstance();
            case 2:
              return se.qxx.jukebox.domain.JukeboxDomain.JukeboxResponseStartMovie.getDefaultInstance();
            case 3:
              return se.qxx.jukebox.domain.JukeboxDomain.Empty.getDefaultInstance();
            case 4:
              return se.qxx.jukebox.domain.JukeboxDomain.Empty.getDefaultInstance();
            case 5:
              return se.qxx.jukebox.domain.JukeboxDomain.Empty.getDefaultInstance();
            case 6:
              return se.qxx.jukebox.domain.JukeboxDomain.Empty.getDefaultInstance();
            case 7:
              return se.qxx.jukebox.domain.JukeboxDomain.JukeboxResponseTime.getDefaultInstance();
            case 8:
              return se.qxx.jukebox.domain.JukeboxDomain.JukeboxResponseIsPlaying.getDefaultInstance();
            case 9:
              return se.qxx.jukebox.domain.JukeboxDomain.JukeboxResponseGetTitle.getDefaultInstance();
            case 10:
              return se.qxx.jukebox.domain.JukeboxDomain.Empty.getDefaultInstance();
            case 11:
              return se.qxx.jukebox.domain.JukeboxDomain.Empty.getDefaultInstance();
            case 12:
              return se.qxx.jukebox.domain.JukeboxDomain.Empty.getDefaultInstance();
            case 13:
              return se.qxx.jukebox.domain.JukeboxDomain.JukeboxResponseListSubtitles.getDefaultInstance();
            case 14:
              return se.qxx.jukebox.domain.JukeboxDomain.Empty.getDefaultInstance();
            case 15:
              return se.qxx.jukebox.domain.JukeboxDomain.Empty.getDefaultInstance();
            case 16:
              return se.qxx.jukebox.domain.JukeboxDomain.Empty.getDefaultInstance();
            default:
              throw new java.lang.AssertionError("Can't get here.");
          }
        }
        
      };
    }
    
    public abstract void listMovies(
        com.google.protobuf.RpcController controller,
        se.qxx.jukebox.domain.JukeboxDomain.JukeboxRequestListMovies request,
        com.google.protobuf.RpcCallback<se.qxx.jukebox.domain.JukeboxDomain.JukeboxResponseListMovies> done);
    
    public abstract void listPlayers(
        com.google.protobuf.RpcController controller,
        se.qxx.jukebox.domain.JukeboxDomain.Empty request,
        com.google.protobuf.RpcCallback<se.qxx.jukebox.domain.JukeboxDomain.JukeboxResponseListPlayers> done);
    
    public abstract void startMovie(
        com.google.protobuf.RpcController controller,
        se.qxx.jukebox.domain.JukeboxDomain.JukeboxRequestStartMovie request,
        com.google.protobuf.RpcCallback<se.qxx.jukebox.domain.JukeboxDomain.JukeboxResponseStartMovie> done);
    
    public abstract void stopMovie(
        com.google.protobuf.RpcController controller,
        se.qxx.jukebox.domain.JukeboxDomain.JukeboxRequestGeneral request,
        com.google.protobuf.RpcCallback<se.qxx.jukebox.domain.JukeboxDomain.Empty> done);
    
    public abstract void pauseMovie(
        com.google.protobuf.RpcController controller,
        se.qxx.jukebox.domain.JukeboxDomain.JukeboxRequestGeneral request,
        com.google.protobuf.RpcCallback<se.qxx.jukebox.domain.JukeboxDomain.Empty> done);
    
    public abstract void seek(
        com.google.protobuf.RpcController controller,
        se.qxx.jukebox.domain.JukeboxDomain.JukeboxRequestSeek request,
        com.google.protobuf.RpcCallback<se.qxx.jukebox.domain.JukeboxDomain.Empty> done);
    
    public abstract void switchVRatio(
        com.google.protobuf.RpcController controller,
        se.qxx.jukebox.domain.JukeboxDomain.JukeboxRequestGeneral request,
        com.google.protobuf.RpcCallback<se.qxx.jukebox.domain.JukeboxDomain.Empty> done);
    
    public abstract void getTime(
        com.google.protobuf.RpcController controller,
        se.qxx.jukebox.domain.JukeboxDomain.JukeboxRequestGeneral request,
        com.google.protobuf.RpcCallback<se.qxx.jukebox.domain.JukeboxDomain.JukeboxResponseTime> done);
    
    public abstract void isPlaying(
        com.google.protobuf.RpcController controller,
        se.qxx.jukebox.domain.JukeboxDomain.JukeboxRequestGeneral request,
        com.google.protobuf.RpcCallback<se.qxx.jukebox.domain.JukeboxDomain.JukeboxResponseIsPlaying> done);
    
    public abstract void getTitle(
        com.google.protobuf.RpcController controller,
        se.qxx.jukebox.domain.JukeboxDomain.JukeboxRequestGeneral request,
        com.google.protobuf.RpcCallback<se.qxx.jukebox.domain.JukeboxDomain.JukeboxResponseGetTitle> done);
    
    public abstract void toggleFullscreen(
        com.google.protobuf.RpcController controller,
        se.qxx.jukebox.domain.JukeboxDomain.JukeboxRequestGeneral request,
        com.google.protobuf.RpcCallback<se.qxx.jukebox.domain.JukeboxDomain.Empty> done);
    
    public abstract void blacklist(
        com.google.protobuf.RpcController controller,
        se.qxx.jukebox.domain.JukeboxDomain.JukeboxRequestMovieID request,
        com.google.protobuf.RpcCallback<se.qxx.jukebox.domain.JukeboxDomain.Empty> done);
    
    public abstract void toggleWatched(
        com.google.protobuf.RpcController controller,
        se.qxx.jukebox.domain.JukeboxDomain.JukeboxRequestMovieID request,
        com.google.protobuf.RpcCallback<se.qxx.jukebox.domain.JukeboxDomain.Empty> done);
    
    public abstract void listSubtitles(
        com.google.protobuf.RpcController controller,
        se.qxx.jukebox.domain.JukeboxDomain.JukeboxRequestListSubtitles request,
        com.google.protobuf.RpcCallback<se.qxx.jukebox.domain.JukeboxDomain.JukeboxResponseListSubtitles> done);
    
    public abstract void setSubtitle(
        com.google.protobuf.RpcController controller,
        se.qxx.jukebox.domain.JukeboxDomain.JukeboxRequestSetSubtitle request,
        com.google.protobuf.RpcCallback<se.qxx.jukebox.domain.JukeboxDomain.Empty> done);
    
    public abstract void wakeup(
        com.google.protobuf.RpcController controller,
        se.qxx.jukebox.domain.JukeboxDomain.JukeboxRequestGeneral request,
        com.google.protobuf.RpcCallback<se.qxx.jukebox.domain.JukeboxDomain.Empty> done);
    
    public abstract void suspend(
        com.google.protobuf.RpcController controller,
        se.qxx.jukebox.domain.JukeboxDomain.JukeboxRequestGeneral request,
        com.google.protobuf.RpcCallback<se.qxx.jukebox.domain.JukeboxDomain.Empty> done);
    
    public static final
        com.google.protobuf.Descriptors.ServiceDescriptor
        getDescriptor() {
      return se.qxx.jukebox.domain.JukeboxDomain.getDescriptor().getServices().get(0);
    }
    public final com.google.protobuf.Descriptors.ServiceDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    
    public final void callMethod(
        com.google.protobuf.Descriptors.MethodDescriptor method,
        com.google.protobuf.RpcController controller,
        com.google.protobuf.Message request,
        com.google.protobuf.RpcCallback<
          com.google.protobuf.Message> done) {
      if (method.getService() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "Service.callMethod() given method descriptor for wrong " +
          "service type.");
      }
      switch(method.getIndex()) {
        case 0:
          this.listMovies(controller, (se.qxx.jukebox.domain.JukeboxDomain.JukeboxRequestListMovies)request,
            com.google.protobuf.RpcUtil.<se.qxx.jukebox.domain.JukeboxDomain.JukeboxResponseListMovies>specializeCallback(
              done));
          return;
        case 1:
          this.listPlayers(controller, (se.qxx.jukebox.domain.JukeboxDomain.Empty)request,
            com.google.protobuf.RpcUtil.<se.qxx.jukebox.domain.JukeboxDomain.JukeboxResponseListPlayers>specializeCallback(
              done));
          return;
        case 2:
          this.startMovie(controller, (se.qxx.jukebox.domain.JukeboxDomain.JukeboxRequestStartMovie)request,
            com.google.protobuf.RpcUtil.<se.qxx.jukebox.domain.JukeboxDomain.JukeboxResponseStartMovie>specializeCallback(
              done));
          return;
        case 3:
          this.stopMovie(controller, (se.qxx.jukebox.domain.JukeboxDomain.JukeboxRequestGeneral)request,
            com.google.protobuf.RpcUtil.<se.qxx.jukebox.domain.JukeboxDomain.Empty>specializeCallback(
              done));
          return;
        case 4:
          this.pauseMovie(controller, (se.qxx.jukebox.domain.JukeboxDomain.JukeboxRequestGeneral)request,
            com.google.protobuf.RpcUtil.<se.qxx.jukebox.domain.JukeboxDomain.Empty>specializeCallback(
              done));
          return;
        case 5:
          this.seek(controller, (se.qxx.jukebox.domain.JukeboxDomain.JukeboxRequestSeek)request,
            com.google.protobuf.RpcUtil.<se.qxx.jukebox.domain.JukeboxDomain.Empty>specializeCallback(
              done));
          return;
        case 6:
          this.switchVRatio(controller, (se.qxx.jukebox.domain.JukeboxDomain.JukeboxRequestGeneral)request,
            com.google.protobuf.RpcUtil.<se.qxx.jukebox.domain.JukeboxDomain.Empty>specializeCallback(
              done));
          return;
        case 7:
          this.getTime(controller, (se.qxx.jukebox.domain.JukeboxDomain.JukeboxRequestGeneral)request,
            com.google.protobuf.RpcUtil.<se.qxx.jukebox.domain.JukeboxDomain.JukeboxResponseTime>specializeCallback(
              done));
          return;
        case 8:
          this.isPlaying(controller, (se.qxx.jukebox.domain.JukeboxDomain.JukeboxRequestGeneral)request,
            com.google.protobuf.RpcUtil.<se.qxx.jukebox.domain.JukeboxDomain.JukeboxResponseIsPlaying>specializeCallback(
              done));
          return;
        case 9:
          this.getTitle(controller, (se.qxx.jukebox.domain.JukeboxDomain.JukeboxRequestGeneral)request,
            com.google.protobuf.RpcUtil.<se.qxx.jukebox.domain.JukeboxDomain.JukeboxResponseGetTitle>specializeCallback(
              done));
          return;
        case 10:
          this.toggleFullscreen(controller, (se.qxx.jukebox.domain.JukeboxDomain.JukeboxRequestGeneral)request,
            com.google.protobuf.RpcUtil.<se.qxx.jukebox.domain.JukeboxDomain.Empty>specializeCallback(
              done));
          return;
        case 11:
          this.blacklist(controller, (se.qxx.jukebox.domain.JukeboxDomain.JukeboxRequestMovieID)request,
            com.google.protobuf.RpcUtil.<se.qxx.jukebox.domain.JukeboxDomain.Empty>specializeCallback(
              done));
          return;
        case 12:
          this.toggleWatched(controller, (se.qxx.jukebox.domain.JukeboxDomain.JukeboxRequestMovieID)request,
            com.google.protobuf.RpcUtil.<se.qxx.jukebox.domain.JukeboxDomain.Empty>specializeCallback(
              done));
          return;
        case 13:
          this.listSubtitles(controller, (se.qxx.jukebox.domain.JukeboxDomain.JukeboxRequestListSubtitles)request,
            com.google.protobuf.RpcUtil.<se.qxx.jukebox.domain.JukeboxDomain.JukeboxResponseListSubtitles>specializeCallback(
              done));
          return;
        case 14:
          this.setSubtitle(controller, (se.qxx.jukebox.domain.JukeboxDomain.JukeboxRequestSetSubtitle)request,
            com.google.protobuf.RpcUtil.<se.qxx.jukebox.domain.JukeboxDomain.Empty>specializeCallback(
              done));
          return;
        case 15:
          this.wakeup(controller, (se.qxx.jukebox.domain.JukeboxDomain.JukeboxRequestGeneral)request,
            com.google.protobuf.RpcUtil.<se.qxx.jukebox.domain.JukeboxDomain.Empty>specializeCallback(
              done));
          return;
        case 16:
          this.suspend(controller, (se.qxx.jukebox.domain.JukeboxDomain.JukeboxRequestGeneral)request,
            com.google.protobuf.RpcUtil.<se.qxx.jukebox.domain.JukeboxDomain.Empty>specializeCallback(
              done));
          return;
        default:
          throw new java.lang.AssertionError("Can't get here.");
      }
    }
    
    public final com.google.protobuf.Message
        getRequestPrototype(
        com.google.protobuf.Descriptors.MethodDescriptor method) {
      if (method.getService() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "Service.getRequestPrototype() given method " +
          "descriptor for wrong service type.");
      }
      switch(method.getIndex()) {
        case 0:
          return se.qxx.jukebox.domain.JukeboxDomain.JukeboxRequestListMovies.getDefaultInstance();
        case 1:
          return se.qxx.jukebox.domain.JukeboxDomain.Empty.getDefaultInstance();
        case 2:
          return se.qxx.jukebox.domain.JukeboxDomain.JukeboxRequestStartMovie.getDefaultInstance();
        case 3:
          return se.qxx.jukebox.domain.JukeboxDomain.JukeboxRequestGeneral.getDefaultInstance();
        case 4:
          return se.qxx.jukebox.domain.JukeboxDomain.JukeboxRequestGeneral.getDefaultInstance();
        case 5:
          return se.qxx.jukebox.domain.JukeboxDomain.JukeboxRequestSeek.getDefaultInstance();
        case 6:
          return se.qxx.jukebox.domain.JukeboxDomain.JukeboxRequestGeneral.getDefaultInstance();
        case 7:
          return se.qxx.jukebox.domain.JukeboxDomain.JukeboxRequestGeneral.getDefaultInstance();
        case 8:
          return se.qxx.jukebox.domain.JukeboxDomain.JukeboxRequestGeneral.getDefaultInstance();
        case 9:
          return se.qxx.jukebox.domain.JukeboxDomain.JukeboxRequestGeneral.getDefaultInstance();
        case 10:
          return se.qxx.jukebox.domain.JukeboxDomain.JukeboxRequestGeneral.getDefaultInstance();
        case 11:
          return se.qxx.jukebox.domain.JukeboxDomain.JukeboxRequestMovieID.getDefaultInstance();
        case 12:
          return se.qxx.jukebox.domain.JukeboxDomain.JukeboxRequestMovieID.getDefaultInstance();
        case 13:
          return se.qxx.jukebox.domain.JukeboxDomain.JukeboxRequestListSubtitles.getDefaultInstance();
        case 14:
          return se.qxx.jukebox.domain.JukeboxDomain.JukeboxRequestSetSubtitle.getDefaultInstance();
        case 15:
          return se.qxx.jukebox.domain.JukeboxDomain.JukeboxRequestGeneral.getDefaultInstance();
        case 16:
          return se.qxx.jukebox.domain.JukeboxDomain.JukeboxRequestGeneral.getDefaultInstance();
        default:
          throw new java.lang.AssertionError("Can't get here.");
      }
    }
    
    public final com.google.protobuf.Message
        getResponsePrototype(
        com.google.protobuf.Descriptors.MethodDescriptor method) {
      if (method.getService() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "Service.getResponsePrototype() given method " +
          "descriptor for wrong service type.");
      }
      switch(method.getIndex()) {
        case 0:
          return se.qxx.jukebox.domain.JukeboxDomain.JukeboxResponseListMovies.getDefaultInstance();
        case 1:
          return se.qxx.jukebox.domain.JukeboxDomain.JukeboxResponseListPlayers.getDefaultInstance();
        case 2:
          return se.qxx.jukebox.domain.JukeboxDomain.JukeboxResponseStartMovie.getDefaultInstance();
        case 3:
          return se.qxx.jukebox.domain.JukeboxDomain.Empty.getDefaultInstance();
        case 4:
          return se.qxx.jukebox.domain.JukeboxDomain.Empty.getDefaultInstance();
        case 5:
          return se.qxx.jukebox.domain.JukeboxDomain.Empty.getDefaultInstance();
        case 6:
          return se.qxx.jukebox.domain.JukeboxDomain.Empty.getDefaultInstance();
        case 7:
          return se.qxx.jukebox.domain.JukeboxDomain.JukeboxResponseTime.getDefaultInstance();
        case 8:
          return se.qxx.jukebox.domain.JukeboxDomain.JukeboxResponseIsPlaying.getDefaultInstance();
        case 9:
          return se.qxx.jukebox.domain.JukeboxDomain.JukeboxResponseGetTitle.getDefaultInstance();
        case 10:
          return se.qxx.jukebox.domain.JukeboxDomain.Empty.getDefaultInstance();
        case 11:
          return se.qxx.jukebox.domain.JukeboxDomain.Empty.getDefaultInstance();
        case 12:
          return se.qxx.jukebox.domain.JukeboxDomain.Empty.getDefaultInstance();
        case 13:
          return se.qxx.jukebox.domain.JukeboxDomain.JukeboxResponseListSubtitles.getDefaultInstance();
        case 14:
          return se.qxx.jukebox.domain.JukeboxDomain.Empty.getDefaultInstance();
        case 15:
          return se.qxx.jukebox.domain.JukeboxDomain.Empty.getDefaultInstance();
        case 16:
          return se.qxx.jukebox.domain.JukeboxDomain.Empty.getDefaultInstance();
        default:
          throw new java.lang.AssertionError("Can't get here.");
      }
    }
    
    public static Stub newStub(
        com.google.protobuf.RpcChannel channel) {
      return new Stub(channel);
    }
    
    public static final class Stub extends se.qxx.jukebox.domain.JukeboxDomain.JukeboxService implements Interface {
      private Stub(com.google.protobuf.RpcChannel channel) {
        this.channel = channel;
      }
      
      private final com.google.protobuf.RpcChannel channel;
      
      public com.google.protobuf.RpcChannel getChannel() {
        return channel;
      }
      
      public  void listMovies(
          com.google.protobuf.RpcController controller,
          se.qxx.jukebox.domain.JukeboxDomain.JukeboxRequestListMovies request,
          com.google.protobuf.RpcCallback<se.qxx.jukebox.domain.JukeboxDomain.JukeboxResponseListMovies> done) {
        channel.callMethod(
          getDescriptor().getMethods().get(0),
          controller,
          request,
          se.qxx.jukebox.domain.JukeboxDomain.JukeboxResponseListMovies.getDefaultInstance(),
          com.google.protobuf.RpcUtil.generalizeCallback(
            done,
            se.qxx.jukebox.domain.JukeboxDomain.JukeboxResponseListMovies.class,
            se.qxx.jukebox.domain.JukeboxDomain.JukeboxResponseListMovies.getDefaultInstance()));
      }
      
      public  void listPlayers(
          com.google.protobuf.RpcController controller,
          se.qxx.jukebox.domain.JukeboxDomain.Empty request,
          com.google.protobuf.RpcCallback<se.qxx.jukebox.domain.JukeboxDomain.JukeboxResponseListPlayers> done) {
        channel.callMethod(
          getDescriptor().getMethods().get(1),
          controller,
          request,
          se.qxx.jukebox.domain.JukeboxDomain.JukeboxResponseListPlayers.getDefaultInstance(),
          com.google.protobuf.RpcUtil.generalizeCallback(
            done,
            se.qxx.jukebox.domain.JukeboxDomain.JukeboxResponseListPlayers.class,
            se.qxx.jukebox.domain.JukeboxDomain.JukeboxResponseListPlayers.getDefaultInstance()));
      }
      
      public  void startMovie(
          com.google.protobuf.RpcController controller,
          se.qxx.jukebox.domain.JukeboxDomain.JukeboxRequestStartMovie request,
          com.google.protobuf.RpcCallback<se.qxx.jukebox.domain.JukeboxDomain.JukeboxResponseStartMovie> done) {
        channel.callMethod(
          getDescriptor().getMethods().get(2),
          controller,
          request,
          se.qxx.jukebox.domain.JukeboxDomain.JukeboxResponseStartMovie.getDefaultInstance(),
          com.google.protobuf.RpcUtil.generalizeCallback(
            done,
            se.qxx.jukebox.domain.JukeboxDomain.JukeboxResponseStartMovie.class,
            se.qxx.jukebox.domain.JukeboxDomain.JukeboxResponseStartMovie.getDefaultInstance()));
      }
      
      public  void stopMovie(
          com.google.protobuf.RpcController controller,
          se.qxx.jukebox.domain.JukeboxDomain.JukeboxRequestGeneral request,
          com.google.protobuf.RpcCallback<se.qxx.jukebox.domain.JukeboxDomain.Empty> done) {
        channel.callMethod(
          getDescriptor().getMethods().get(3),
          controller,
          request,
          se.qxx.jukebox.domain.JukeboxDomain.Empty.getDefaultInstance(),
          com.google.protobuf.RpcUtil.generalizeCallback(
            done,
            se.qxx.jukebox.domain.JukeboxDomain.Empty.class,
            se.qxx.jukebox.domain.JukeboxDomain.Empty.getDefaultInstance()));
      }
      
      public  void pauseMovie(
          com.google.protobuf.RpcController controller,
          se.qxx.jukebox.domain.JukeboxDomain.JukeboxRequestGeneral request,
          com.google.protobuf.RpcCallback<se.qxx.jukebox.domain.JukeboxDomain.Empty> done) {
        channel.callMethod(
          getDescriptor().getMethods().get(4),
          controller,
          request,
          se.qxx.jukebox.domain.JukeboxDomain.Empty.getDefaultInstance(),
          com.google.protobuf.RpcUtil.generalizeCallback(
            done,
            se.qxx.jukebox.domain.JukeboxDomain.Empty.class,
            se.qxx.jukebox.domain.JukeboxDomain.Empty.getDefaultInstance()));
      }
      
      public  void seek(
          com.google.protobuf.RpcController controller,
          se.qxx.jukebox.domain.JukeboxDomain.JukeboxRequestSeek request,
          com.google.protobuf.RpcCallback<se.qxx.jukebox.domain.JukeboxDomain.Empty> done) {
        channel.callMethod(
          getDescriptor().getMethods().get(5),
          controller,
          request,
          se.qxx.jukebox.domain.JukeboxDomain.Empty.getDefaultInstance(),
          com.google.protobuf.RpcUtil.generalizeCallback(
            done,
            se.qxx.jukebox.domain.JukeboxDomain.Empty.class,
            se.qxx.jukebox.domain.JukeboxDomain.Empty.getDefaultInstance()));
      }
      
      public  void switchVRatio(
          com.google.protobuf.RpcController controller,
          se.qxx.jukebox.domain.JukeboxDomain.JukeboxRequestGeneral request,
          com.google.protobuf.RpcCallback<se.qxx.jukebox.domain.JukeboxDomain.Empty> done) {
        channel.callMethod(
          getDescriptor().getMethods().get(6),
          controller,
          request,
          se.qxx.jukebox.domain.JukeboxDomain.Empty.getDefaultInstance(),
          com.google.protobuf.RpcUtil.generalizeCallback(
            done,
            se.qxx.jukebox.domain.JukeboxDomain.Empty.class,
            se.qxx.jukebox.domain.JukeboxDomain.Empty.getDefaultInstance()));
      }
      
      public  void getTime(
          com.google.protobuf.RpcController controller,
          se.qxx.jukebox.domain.JukeboxDomain.JukeboxRequestGeneral request,
          com.google.protobuf.RpcCallback<se.qxx.jukebox.domain.JukeboxDomain.JukeboxResponseTime> done) {
        channel.callMethod(
          getDescriptor().getMethods().get(7),
          controller,
          request,
          se.qxx.jukebox.domain.JukeboxDomain.JukeboxResponseTime.getDefaultInstance(),
          com.google.protobuf.RpcUtil.generalizeCallback(
            done,
            se.qxx.jukebox.domain.JukeboxDomain.JukeboxResponseTime.class,
            se.qxx.jukebox.domain.JukeboxDomain.JukeboxResponseTime.getDefaultInstance()));
      }
      
      public  void isPlaying(
          com.google.protobuf.RpcController controller,
          se.qxx.jukebox.domain.JukeboxDomain.JukeboxRequestGeneral request,
          com.google.protobuf.RpcCallback<se.qxx.jukebox.domain.JukeboxDomain.JukeboxResponseIsPlaying> done) {
        channel.callMethod(
          getDescriptor().getMethods().get(8),
          controller,
          request,
          se.qxx.jukebox.domain.JukeboxDomain.JukeboxResponseIsPlaying.getDefaultInstance(),
          com.google.protobuf.RpcUtil.generalizeCallback(
            done,
            se.qxx.jukebox.domain.JukeboxDomain.JukeboxResponseIsPlaying.class,
            se.qxx.jukebox.domain.JukeboxDomain.JukeboxResponseIsPlaying.getDefaultInstance()));
      }
      
      public  void getTitle(
          com.google.protobuf.RpcController controller,
          se.qxx.jukebox.domain.JukeboxDomain.JukeboxRequestGeneral request,
          com.google.protobuf.RpcCallback<se.qxx.jukebox.domain.JukeboxDomain.JukeboxResponseGetTitle> done) {
        channel.callMethod(
          getDescriptor().getMethods().get(9),
          controller,
          request,
          se.qxx.jukebox.domain.JukeboxDomain.JukeboxResponseGetTitle.getDefaultInstance(),
          com.google.protobuf.RpcUtil.generalizeCallback(
            done,
            se.qxx.jukebox.domain.JukeboxDomain.JukeboxResponseGetTitle.class,
            se.qxx.jukebox.domain.JukeboxDomain.JukeboxResponseGetTitle.getDefaultInstance()));
      }
      
      public  void toggleFullscreen(
          com.google.protobuf.RpcController controller,
          se.qxx.jukebox.domain.JukeboxDomain.JukeboxRequestGeneral request,
          com.google.protobuf.RpcCallback<se.qxx.jukebox.domain.JukeboxDomain.Empty> done) {
        channel.callMethod(
          getDescriptor().getMethods().get(10),
          controller,
          request,
          se.qxx.jukebox.domain.JukeboxDomain.Empty.getDefaultInstance(),
          com.google.protobuf.RpcUtil.generalizeCallback(
            done,
            se.qxx.jukebox.domain.JukeboxDomain.Empty.class,
            se.qxx.jukebox.domain.JukeboxDomain.Empty.getDefaultInstance()));
      }
      
      public  void blacklist(
          com.google.protobuf.RpcController controller,
          se.qxx.jukebox.domain.JukeboxDomain.JukeboxRequestMovieID request,
          com.google.protobuf.RpcCallback<se.qxx.jukebox.domain.JukeboxDomain.Empty> done) {
        channel.callMethod(
          getDescriptor().getMethods().get(11),
          controller,
          request,
          se.qxx.jukebox.domain.JukeboxDomain.Empty.getDefaultInstance(),
          com.google.protobuf.RpcUtil.generalizeCallback(
            done,
            se.qxx.jukebox.domain.JukeboxDomain.Empty.class,
            se.qxx.jukebox.domain.JukeboxDomain.Empty.getDefaultInstance()));
      }
      
      public  void toggleWatched(
          com.google.protobuf.RpcController controller,
          se.qxx.jukebox.domain.JukeboxDomain.JukeboxRequestMovieID request,
          com.google.protobuf.RpcCallback<se.qxx.jukebox.domain.JukeboxDomain.Empty> done) {
        channel.callMethod(
          getDescriptor().getMethods().get(12),
          controller,
          request,
          se.qxx.jukebox.domain.JukeboxDomain.Empty.getDefaultInstance(),
          com.google.protobuf.RpcUtil.generalizeCallback(
            done,
            se.qxx.jukebox.domain.JukeboxDomain.Empty.class,
            se.qxx.jukebox.domain.JukeboxDomain.Empty.getDefaultInstance()));
      }
      
      public  void listSubtitles(
          com.google.protobuf.RpcController controller,
          se.qxx.jukebox.domain.JukeboxDomain.JukeboxRequestListSubtitles request,
          com.google.protobuf.RpcCallback<se.qxx.jukebox.domain.JukeboxDomain.JukeboxResponseListSubtitles> done) {
        channel.callMethod(
          getDescriptor().getMethods().get(13),
          controller,
          request,
          se.qxx.jukebox.domain.JukeboxDomain.JukeboxResponseListSubtitles.getDefaultInstance(),
          com.google.protobuf.RpcUtil.generalizeCallback(
            done,
            se.qxx.jukebox.domain.JukeboxDomain.JukeboxResponseListSubtitles.class,
            se.qxx.jukebox.domain.JukeboxDomain.JukeboxResponseListSubtitles.getDefaultInstance()));
      }
      
      public  void setSubtitle(
          com.google.protobuf.RpcController controller,
          se.qxx.jukebox.domain.JukeboxDomain.JukeboxRequestSetSubtitle request,
          com.google.protobuf.RpcCallback<se.qxx.jukebox.domain.JukeboxDomain.Empty> done) {
        channel.callMethod(
          getDescriptor().getMethods().get(14),
          controller,
          request,
          se.qxx.jukebox.domain.JukeboxDomain.Empty.getDefaultInstance(),
          com.google.protobuf.RpcUtil.generalizeCallback(
            done,
            se.qxx.jukebox.domain.JukeboxDomain.Empty.class,
            se.qxx.jukebox.domain.JukeboxDomain.Empty.getDefaultInstance()));
      }
      
      public  void wakeup(
          com.google.protobuf.RpcController controller,
          se.qxx.jukebox.domain.JukeboxDomain.JukeboxRequestGeneral request,
          com.google.protobuf.RpcCallback<se.qxx.jukebox.domain.JukeboxDomain.Empty> done) {
        channel.callMethod(
          getDescriptor().getMethods().get(15),
          controller,
          request,
          se.qxx.jukebox.domain.JukeboxDomain.Empty.getDefaultInstance(),
          com.google.protobuf.RpcUtil.generalizeCallback(
            done,
            se.qxx.jukebox.domain.JukeboxDomain.Empty.class,
            se.qxx.jukebox.domain.JukeboxDomain.Empty.getDefaultInstance()));
      }
      
      public  void suspend(
          com.google.protobuf.RpcController controller,
          se.qxx.jukebox.domain.JukeboxDomain.JukeboxRequestGeneral request,
          com.google.protobuf.RpcCallback<se.qxx.jukebox.domain.JukeboxDomain.Empty> done) {
        channel.callMethod(
          getDescriptor().getMethods().get(16),
          controller,
          request,
          se.qxx.jukebox.domain.JukeboxDomain.Empty.getDefaultInstance(),
          com.google.protobuf.RpcUtil.generalizeCallback(
            done,
            se.qxx.jukebox.domain.JukeboxDomain.Empty.class,
            se.qxx.jukebox.domain.JukeboxDomain.Empty.getDefaultInstance()));
      }
    }
    
    public static BlockingInterface newBlockingStub(
        com.google.protobuf.BlockingRpcChannel channel) {
      return new BlockingStub(channel);
    }
    
    public interface BlockingInterface {
      public se.qxx.jukebox.domain.JukeboxDomain.JukeboxResponseListMovies listMovies(
          com.google.protobuf.RpcController controller,
          se.qxx.jukebox.domain.JukeboxDomain.JukeboxRequestListMovies request)
          throws com.google.protobuf.ServiceException;
      
      public se.qxx.jukebox.domain.JukeboxDomain.JukeboxResponseListPlayers listPlayers(
          com.google.protobuf.RpcController controller,
          se.qxx.jukebox.domain.JukeboxDomain.Empty request)
          throws com.google.protobuf.ServiceException;
      
      public se.qxx.jukebox.domain.JukeboxDomain.JukeboxResponseStartMovie startMovie(
          com.google.protobuf.RpcController controller,
          se.qxx.jukebox.domain.JukeboxDomain.JukeboxRequestStartMovie request)
          throws com.google.protobuf.ServiceException;
      
      public se.qxx.jukebox.domain.JukeboxDomain.Empty stopMovie(
          com.google.protobuf.RpcController controller,
          se.qxx.jukebox.domain.JukeboxDomain.JukeboxRequestGeneral request)
          throws com.google.protobuf.ServiceException;
      
      public se.qxx.jukebox.domain.JukeboxDomain.Empty pauseMovie(
          com.google.protobuf.RpcController controller,
          se.qxx.jukebox.domain.JukeboxDomain.JukeboxRequestGeneral request)
          throws com.google.protobuf.ServiceException;
      
      public se.qxx.jukebox.domain.JukeboxDomain.Empty seek(
          com.google.protobuf.RpcController controller,
          se.qxx.jukebox.domain.JukeboxDomain.JukeboxRequestSeek request)
          throws com.google.protobuf.ServiceException;
      
      public se.qxx.jukebox.domain.JukeboxDomain.Empty switchVRatio(
          com.google.protobuf.RpcController controller,
          se.qxx.jukebox.domain.JukeboxDomain.JukeboxRequestGeneral request)
          throws com.google.protobuf.ServiceException;
      
      public se.qxx.jukebox.domain.JukeboxDomain.JukeboxResponseTime getTime(
          com.google.protobuf.RpcController controller,
          se.qxx.jukebox.domain.JukeboxDomain.JukeboxRequestGeneral request)
          throws com.google.protobuf.ServiceException;
      
      public se.qxx.jukebox.domain.JukeboxDomain.JukeboxResponseIsPlaying isPlaying(
          com.google.protobuf.RpcController controller,
          se.qxx.jukebox.domain.JukeboxDomain.JukeboxRequestGeneral request)
          throws com.google.protobuf.ServiceException;
      
      public se.qxx.jukebox.domain.JukeboxDomain.JukeboxResponseGetTitle getTitle(
          com.google.protobuf.RpcController controller,
          se.qxx.jukebox.domain.JukeboxDomain.JukeboxRequestGeneral request)
          throws com.google.protobuf.ServiceException;
      
      public se.qxx.jukebox.domain.JukeboxDomain.Empty toggleFullscreen(
          com.google.protobuf.RpcController controller,
          se.qxx.jukebox.domain.JukeboxDomain.JukeboxRequestGeneral request)
          throws com.google.protobuf.ServiceException;
      
      public se.qxx.jukebox.domain.JukeboxDomain.Empty blacklist(
          com.google.protobuf.RpcController controller,
          se.qxx.jukebox.domain.JukeboxDomain.JukeboxRequestMovieID request)
          throws com.google.protobuf.ServiceException;
      
      public se.qxx.jukebox.domain.JukeboxDomain.Empty toggleWatched(
          com.google.protobuf.RpcController controller,
          se.qxx.jukebox.domain.JukeboxDomain.JukeboxRequestMovieID request)
          throws com.google.protobuf.ServiceException;
      
      public se.qxx.jukebox.domain.JukeboxDomain.JukeboxResponseListSubtitles listSubtitles(
          com.google.protobuf.RpcController controller,
          se.qxx.jukebox.domain.JukeboxDomain.JukeboxRequestListSubtitles request)
          throws com.google.protobuf.ServiceException;
      
      public se.qxx.jukebox.domain.JukeboxDomain.Empty setSubtitle(
          com.google.protobuf.RpcController controller,
          se.qxx.jukebox.domain.JukeboxDomain.JukeboxRequestSetSubtitle request)
          throws com.google.protobuf.ServiceException;
      
      public se.qxx.jukebox.domain.JukeboxDomain.Empty wakeup(
          com.google.protobuf.RpcController controller,
          se.qxx.jukebox.domain.JukeboxDomain.JukeboxRequestGeneral request)
          throws com.google.protobuf.ServiceException;
      
      public se.qxx.jukebox.domain.JukeboxDomain.Empty suspend(
          com.google.protobuf.RpcController controller,
          se.qxx.jukebox.domain.JukeboxDomain.JukeboxRequestGeneral request)
          throws com.google.protobuf.ServiceException;
    }
    
    private static final class BlockingStub implements BlockingInterface {
      private BlockingStub(com.google.protobuf.BlockingRpcChannel channel) {
        this.channel = channel;
      }
      
      private final com.google.protobuf.BlockingRpcChannel channel;
      
      public se.qxx.jukebox.domain.JukeboxDomain.JukeboxResponseListMovies listMovies(
          com.google.protobuf.RpcController controller,
          se.qxx.jukebox.domain.JukeboxDomain.JukeboxRequestListMovies request)
          throws com.google.protobuf.ServiceException {
        return (se.qxx.jukebox.domain.JukeboxDomain.JukeboxResponseListMovies) channel.callBlockingMethod(
          getDescriptor().getMethods().get(0),
          controller,
          request,
          se.qxx.jukebox.domain.JukeboxDomain.JukeboxResponseListMovies.getDefaultInstance());
      }
      
      
      public se.qxx.jukebox.domain.JukeboxDomain.JukeboxResponseListPlayers listPlayers(
          com.google.protobuf.RpcController controller,
          se.qxx.jukebox.domain.JukeboxDomain.Empty request)
          throws com.google.protobuf.ServiceException {
        return (se.qxx.jukebox.domain.JukeboxDomain.JukeboxResponseListPlayers) channel.callBlockingMethod(
          getDescriptor().getMethods().get(1),
          controller,
          request,
          se.qxx.jukebox.domain.JukeboxDomain.JukeboxResponseListPlayers.getDefaultInstance());
      }
      
      
      public se.qxx.jukebox.domain.JukeboxDomain.JukeboxResponseStartMovie startMovie(
          com.google.protobuf.RpcController controller,
          se.qxx.jukebox.domain.JukeboxDomain.JukeboxRequestStartMovie request)
          throws com.google.protobuf.ServiceException {
        return (se.qxx.jukebox.domain.JukeboxDomain.JukeboxResponseStartMovie) channel.callBlockingMethod(
          getDescriptor().getMethods().get(2),
          controller,
          request,
          se.qxx.jukebox.domain.JukeboxDomain.JukeboxResponseStartMovie.getDefaultInstance());
      }
      
      
      public se.qxx.jukebox.domain.JukeboxDomain.Empty stopMovie(
          com.google.protobuf.RpcController controller,
          se.qxx.jukebox.domain.JukeboxDomain.JukeboxRequestGeneral request)
          throws com.google.protobuf.ServiceException {
        return (se.qxx.jukebox.domain.JukeboxDomain.Empty) channel.callBlockingMethod(
          getDescriptor().getMethods().get(3),
          controller,
          request,
          se.qxx.jukebox.domain.JukeboxDomain.Empty.getDefaultInstance());
      }
      
      
      public se.qxx.jukebox.domain.JukeboxDomain.Empty pauseMovie(
          com.google.protobuf.RpcController controller,
          se.qxx.jukebox.domain.JukeboxDomain.JukeboxRequestGeneral request)
          throws com.google.protobuf.ServiceException {
        return (se.qxx.jukebox.domain.JukeboxDomain.Empty) channel.callBlockingMethod(
          getDescriptor().getMethods().get(4),
          controller,
          request,
          se.qxx.jukebox.domain.JukeboxDomain.Empty.getDefaultInstance());
      }
      
      
      public se.qxx.jukebox.domain.JukeboxDomain.Empty seek(
          com.google.protobuf.RpcController controller,
          se.qxx.jukebox.domain.JukeboxDomain.JukeboxRequestSeek request)
          throws com.google.protobuf.ServiceException {
        return (se.qxx.jukebox.domain.JukeboxDomain.Empty) channel.callBlockingMethod(
          getDescriptor().getMethods().get(5),
          controller,
          request,
          se.qxx.jukebox.domain.JukeboxDomain.Empty.getDefaultInstance());
      }
      
      
      public se.qxx.jukebox.domain.JukeboxDomain.Empty switchVRatio(
          com.google.protobuf.RpcController controller,
          se.qxx.jukebox.domain.JukeboxDomain.JukeboxRequestGeneral request)
          throws com.google.protobuf.ServiceException {
        return (se.qxx.jukebox.domain.JukeboxDomain.Empty) channel.callBlockingMethod(
          getDescriptor().getMethods().get(6),
          controller,
          request,
          se.qxx.jukebox.domain.JukeboxDomain.Empty.getDefaultInstance());
      }
      
      
      public se.qxx.jukebox.domain.JukeboxDomain.JukeboxResponseTime getTime(
          com.google.protobuf.RpcController controller,
          se.qxx.jukebox.domain.JukeboxDomain.JukeboxRequestGeneral request)
          throws com.google.protobuf.ServiceException {
        return (se.qxx.jukebox.domain.JukeboxDomain.JukeboxResponseTime) channel.callBlockingMethod(
          getDescriptor().getMethods().get(7),
          controller,
          request,
          se.qxx.jukebox.domain.JukeboxDomain.JukeboxResponseTime.getDefaultInstance());
      }
      
      
      public se.qxx.jukebox.domain.JukeboxDomain.JukeboxResponseIsPlaying isPlaying(
          com.google.protobuf.RpcController controller,
          se.qxx.jukebox.domain.JukeboxDomain.JukeboxRequestGeneral request)
          throws com.google.protobuf.ServiceException {
        return (se.qxx.jukebox.domain.JukeboxDomain.JukeboxResponseIsPlaying) channel.callBlockingMethod(
          getDescriptor().getMethods().get(8),
          controller,
          request,
          se.qxx.jukebox.domain.JukeboxDomain.JukeboxResponseIsPlaying.getDefaultInstance());
      }
      
      
      public se.qxx.jukebox.domain.JukeboxDomain.JukeboxResponseGetTitle getTitle(
          com.google.protobuf.RpcController controller,
          se.qxx.jukebox.domain.JukeboxDomain.JukeboxRequestGeneral request)
          throws com.google.protobuf.ServiceException {
        return (se.qxx.jukebox.domain.JukeboxDomain.JukeboxResponseGetTitle) channel.callBlockingMethod(
          getDescriptor().getMethods().get(9),
          controller,
          request,
          se.qxx.jukebox.domain.JukeboxDomain.JukeboxResponseGetTitle.getDefaultInstance());
      }
      
      
      public se.qxx.jukebox.domain.JukeboxDomain.Empty toggleFullscreen(
          com.google.protobuf.RpcController controller,
          se.qxx.jukebox.domain.JukeboxDomain.JukeboxRequestGeneral request)
          throws com.google.protobuf.ServiceException {
        return (se.qxx.jukebox.domain.JukeboxDomain.Empty) channel.callBlockingMethod(
          getDescriptor().getMethods().get(10),
          controller,
          request,
          se.qxx.jukebox.domain.JukeboxDomain.Empty.getDefaultInstance());
      }
      
      
      public se.qxx.jukebox.domain.JukeboxDomain.Empty blacklist(
          com.google.protobuf.RpcController controller,
          se.qxx.jukebox.domain.JukeboxDomain.JukeboxRequestMovieID request)
          throws com.google.protobuf.ServiceException {
        return (se.qxx.jukebox.domain.JukeboxDomain.Empty) channel.callBlockingMethod(
          getDescriptor().getMethods().get(11),
          controller,
          request,
          se.qxx.jukebox.domain.JukeboxDomain.Empty.getDefaultInstance());
      }
      
      
      public se.qxx.jukebox.domain.JukeboxDomain.Empty toggleWatched(
          com.google.protobuf.RpcController controller,
          se.qxx.jukebox.domain.JukeboxDomain.JukeboxRequestMovieID request)
          throws com.google.protobuf.ServiceException {
        return (se.qxx.jukebox.domain.JukeboxDomain.Empty) channel.callBlockingMethod(
          getDescriptor().getMethods().get(12),
          controller,
          request,
          se.qxx.jukebox.domain.JukeboxDomain.Empty.getDefaultInstance());
      }
      
      
      public se.qxx.jukebox.domain.JukeboxDomain.JukeboxResponseListSubtitles listSubtitles(
          com.google.protobuf.RpcController controller,
          se.qxx.jukebox.domain.JukeboxDomain.JukeboxRequestListSubtitles request)
          throws com.google.protobuf.ServiceException {
        return (se.qxx.jukebox.domain.JukeboxDomain.JukeboxResponseListSubtitles) channel.callBlockingMethod(
          getDescriptor().getMethods().get(13),
          controller,
          request,
          se.qxx.jukebox.domain.JukeboxDomain.JukeboxResponseListSubtitles.getDefaultInstance());
      }
      
      
      public se.qxx.jukebox.domain.JukeboxDomain.Empty setSubtitle(
          com.google.protobuf.RpcController controller,
          se.qxx.jukebox.domain.JukeboxDomain.JukeboxRequestSetSubtitle request)
          throws com.google.protobuf.ServiceException {
        return (se.qxx.jukebox.domain.JukeboxDomain.Empty) channel.callBlockingMethod(
          getDescriptor().getMethods().get(14),
          controller,
          request,
          se.qxx.jukebox.domain.JukeboxDomain.Empty.getDefaultInstance());
      }
      
      
      public se.qxx.jukebox.domain.JukeboxDomain.Empty wakeup(
          com.google.protobuf.RpcController controller,
          se.qxx.jukebox.domain.JukeboxDomain.JukeboxRequestGeneral request)
          throws com.google.protobuf.ServiceException {
        return (se.qxx.jukebox.domain.JukeboxDomain.Empty) channel.callBlockingMethod(
          getDescriptor().getMethods().get(15),
          controller,
          request,
          se.qxx.jukebox.domain.JukeboxDomain.Empty.getDefaultInstance());
      }
      
      
      public se.qxx.jukebox.domain.JukeboxDomain.Empty suspend(
          com.google.protobuf.RpcController controller,
          se.qxx.jukebox.domain.JukeboxDomain.JukeboxRequestGeneral request)
          throws com.google.protobuf.ServiceException {
        return (se.qxx.jukebox.domain.JukeboxDomain.Empty) channel.callBlockingMethod(
          getDescriptor().getMethods().get(16),
          controller,
          request,
          se.qxx.jukebox.domain.JukeboxDomain.Empty.getDefaultInstance());
      }
      
    }
  }
  
  public static abstract class JukeboxFrontService
      implements com.google.protobuf.Service {
    protected JukeboxFrontService() {}
    
    public interface Interface {
      public abstract void startMovie(
          com.google.protobuf.RpcController controller,
          se.qxx.jukebox.domain.JukeboxDomain.JukeboxFrontStartMovie request,
          com.google.protobuf.RpcCallback<se.qxx.jukebox.domain.JukeboxDomain.Empty> done);
      
      public abstract void stopMovie(
          com.google.protobuf.RpcController controller,
          se.qxx.jukebox.domain.JukeboxDomain.Empty request,
          com.google.protobuf.RpcCallback<se.qxx.jukebox.domain.JukeboxDomain.Empty> done);
      
      public abstract void pauseMovie(
          com.google.protobuf.RpcController controller,
          se.qxx.jukebox.domain.JukeboxDomain.Empty request,
          com.google.protobuf.RpcCallback<se.qxx.jukebox.domain.JukeboxDomain.Empty> done);
      
      public abstract void seek(
          com.google.protobuf.RpcController controller,
          se.qxx.jukebox.domain.JukeboxDomain.JukeboxFrontSeek request,
          com.google.protobuf.RpcCallback<se.qxx.jukebox.domain.JukeboxDomain.Empty> done);
      
      public abstract void switchVRatio(
          com.google.protobuf.RpcController controller,
          se.qxx.jukebox.domain.JukeboxDomain.Empty request,
          com.google.protobuf.RpcCallback<se.qxx.jukebox.domain.JukeboxDomain.Empty> done);
      
      public abstract void getTime(
          com.google.protobuf.RpcController controller,
          se.qxx.jukebox.domain.JukeboxDomain.Empty request,
          com.google.protobuf.RpcCallback<se.qxx.jukebox.domain.JukeboxDomain.JukeboxResponseTime> done);
      
      public abstract void isPlaying(
          com.google.protobuf.RpcController controller,
          se.qxx.jukebox.domain.JukeboxDomain.Empty request,
          com.google.protobuf.RpcCallback<se.qxx.jukebox.domain.JukeboxDomain.JukeboxResponseIsPlaying> done);
      
      public abstract void getTitle(
          com.google.protobuf.RpcController controller,
          se.qxx.jukebox.domain.JukeboxDomain.Empty request,
          com.google.protobuf.RpcCallback<se.qxx.jukebox.domain.JukeboxDomain.JukeboxResponseGetTitle> done);
      
    }
    
    public static com.google.protobuf.Service newReflectiveService(
        final Interface impl) {
      return new JukeboxFrontService() {
        @java.lang.Override
        public  void startMovie(
            com.google.protobuf.RpcController controller,
            se.qxx.jukebox.domain.JukeboxDomain.JukeboxFrontStartMovie request,
            com.google.protobuf.RpcCallback<se.qxx.jukebox.domain.JukeboxDomain.Empty> done) {
          impl.startMovie(controller, request, done);
        }
        
        @java.lang.Override
        public  void stopMovie(
            com.google.protobuf.RpcController controller,
            se.qxx.jukebox.domain.JukeboxDomain.Empty request,
            com.google.protobuf.RpcCallback<se.qxx.jukebox.domain.JukeboxDomain.Empty> done) {
          impl.stopMovie(controller, request, done);
        }
        
        @java.lang.Override
        public  void pauseMovie(
            com.google.protobuf.RpcController controller,
            se.qxx.jukebox.domain.JukeboxDomain.Empty request,
            com.google.protobuf.RpcCallback<se.qxx.jukebox.domain.JukeboxDomain.Empty> done) {
          impl.pauseMovie(controller, request, done);
        }
        
        @java.lang.Override
        public  void seek(
            com.google.protobuf.RpcController controller,
            se.qxx.jukebox.domain.JukeboxDomain.JukeboxFrontSeek request,
            com.google.protobuf.RpcCallback<se.qxx.jukebox.domain.JukeboxDomain.Empty> done) {
          impl.seek(controller, request, done);
        }
        
        @java.lang.Override
        public  void switchVRatio(
            com.google.protobuf.RpcController controller,
            se.qxx.jukebox.domain.JukeboxDomain.Empty request,
            com.google.protobuf.RpcCallback<se.qxx.jukebox.domain.JukeboxDomain.Empty> done) {
          impl.switchVRatio(controller, request, done);
        }
        
        @java.lang.Override
        public  void getTime(
            com.google.protobuf.RpcController controller,
            se.qxx.jukebox.domain.JukeboxDomain.Empty request,
            com.google.protobuf.RpcCallback<se.qxx.jukebox.domain.JukeboxDomain.JukeboxResponseTime> done) {
          impl.getTime(controller, request, done);
        }
        
        @java.lang.Override
        public  void isPlaying(
            com.google.protobuf.RpcController controller,
            se.qxx.jukebox.domain.JukeboxDomain.Empty request,
            com.google.protobuf.RpcCallback<se.qxx.jukebox.domain.JukeboxDomain.JukeboxResponseIsPlaying> done) {
          impl.isPlaying(controller, request, done);
        }
        
        @java.lang.Override
        public  void getTitle(
            com.google.protobuf.RpcController controller,
            se.qxx.jukebox.domain.JukeboxDomain.Empty request,
            com.google.protobuf.RpcCallback<se.qxx.jukebox.domain.JukeboxDomain.JukeboxResponseGetTitle> done) {
          impl.getTitle(controller, request, done);
        }
        
      };
    }
    
    public static com.google.protobuf.BlockingService
        newReflectiveBlockingService(final BlockingInterface impl) {
      return new com.google.protobuf.BlockingService() {
        public final com.google.protobuf.Descriptors.ServiceDescriptor
            getDescriptorForType() {
          return getDescriptor();
        }
        
        public final com.google.protobuf.Message callBlockingMethod(
            com.google.protobuf.Descriptors.MethodDescriptor method,
            com.google.protobuf.RpcController controller,
            com.google.protobuf.Message request)
            throws com.google.protobuf.ServiceException {
          if (method.getService() != getDescriptor()) {
            throw new java.lang.IllegalArgumentException(
              "Service.callBlockingMethod() given method descriptor for " +
              "wrong service type.");
          }
          switch(method.getIndex()) {
            case 0:
              return impl.startMovie(controller, (se.qxx.jukebox.domain.JukeboxDomain.JukeboxFrontStartMovie)request);
            case 1:
              return impl.stopMovie(controller, (se.qxx.jukebox.domain.JukeboxDomain.Empty)request);
            case 2:
              return impl.pauseMovie(controller, (se.qxx.jukebox.domain.JukeboxDomain.Empty)request);
            case 3:
              return impl.seek(controller, (se.qxx.jukebox.domain.JukeboxDomain.JukeboxFrontSeek)request);
            case 4:
              return impl.switchVRatio(controller, (se.qxx.jukebox.domain.JukeboxDomain.Empty)request);
            case 5:
              return impl.getTime(controller, (se.qxx.jukebox.domain.JukeboxDomain.Empty)request);
            case 6:
              return impl.isPlaying(controller, (se.qxx.jukebox.domain.JukeboxDomain.Empty)request);
            case 7:
              return impl.getTitle(controller, (se.qxx.jukebox.domain.JukeboxDomain.Empty)request);
            default:
              throw new java.lang.AssertionError("Can't get here.");
          }
        }
        
        public final com.google.protobuf.Message
            getRequestPrototype(
            com.google.protobuf.Descriptors.MethodDescriptor method) {
          if (method.getService() != getDescriptor()) {
            throw new java.lang.IllegalArgumentException(
              "Service.getRequestPrototype() given method " +
              "descriptor for wrong service type.");
          }
          switch(method.getIndex()) {
            case 0:
              return se.qxx.jukebox.domain.JukeboxDomain.JukeboxFrontStartMovie.getDefaultInstance();
            case 1:
              return se.qxx.jukebox.domain.JukeboxDomain.Empty.getDefaultInstance();
            case 2:
              return se.qxx.jukebox.domain.JukeboxDomain.Empty.getDefaultInstance();
            case 3:
              return se.qxx.jukebox.domain.JukeboxDomain.JukeboxFrontSeek.getDefaultInstance();
            case 4:
              return se.qxx.jukebox.domain.JukeboxDomain.Empty.getDefaultInstance();
            case 5:
              return se.qxx.jukebox.domain.JukeboxDomain.Empty.getDefaultInstance();
            case 6:
              return se.qxx.jukebox.domain.JukeboxDomain.Empty.getDefaultInstance();
            case 7:
              return se.qxx.jukebox.domain.JukeboxDomain.Empty.getDefaultInstance();
            default:
              throw new java.lang.AssertionError("Can't get here.");
          }
        }
        
        public final com.google.protobuf.Message
            getResponsePrototype(
            com.google.protobuf.Descriptors.MethodDescriptor method) {
          if (method.getService() != getDescriptor()) {
            throw new java.lang.IllegalArgumentException(
              "Service.getResponsePrototype() given method " +
              "descriptor for wrong service type.");
          }
          switch(method.getIndex()) {
            case 0:
              return se.qxx.jukebox.domain.JukeboxDomain.Empty.getDefaultInstance();
            case 1:
              return se.qxx.jukebox.domain.JukeboxDomain.Empty.getDefaultInstance();
            case 2:
              return se.qxx.jukebox.domain.JukeboxDomain.Empty.getDefaultInstance();
            case 3:
              return se.qxx.jukebox.domain.JukeboxDomain.Empty.getDefaultInstance();
            case 4:
              return se.qxx.jukebox.domain.JukeboxDomain.Empty.getDefaultInstance();
            case 5:
              return se.qxx.jukebox.domain.JukeboxDomain.JukeboxResponseTime.getDefaultInstance();
            case 6:
              return se.qxx.jukebox.domain.JukeboxDomain.JukeboxResponseIsPlaying.getDefaultInstance();
            case 7:
              return se.qxx.jukebox.domain.JukeboxDomain.JukeboxResponseGetTitle.getDefaultInstance();
            default:
              throw new java.lang.AssertionError("Can't get here.");
          }
        }
        
      };
    }
    
    public abstract void startMovie(
        com.google.protobuf.RpcController controller,
        se.qxx.jukebox.domain.JukeboxDomain.JukeboxFrontStartMovie request,
        com.google.protobuf.RpcCallback<se.qxx.jukebox.domain.JukeboxDomain.Empty> done);
    
    public abstract void stopMovie(
        com.google.protobuf.RpcController controller,
        se.qxx.jukebox.domain.JukeboxDomain.Empty request,
        com.google.protobuf.RpcCallback<se.qxx.jukebox.domain.JukeboxDomain.Empty> done);
    
    public abstract void pauseMovie(
        com.google.protobuf.RpcController controller,
        se.qxx.jukebox.domain.JukeboxDomain.Empty request,
        com.google.protobuf.RpcCallback<se.qxx.jukebox.domain.JukeboxDomain.Empty> done);
    
    public abstract void seek(
        com.google.protobuf.RpcController controller,
        se.qxx.jukebox.domain.JukeboxDomain.JukeboxFrontSeek request,
        com.google.protobuf.RpcCallback<se.qxx.jukebox.domain.JukeboxDomain.Empty> done);
    
    public abstract void switchVRatio(
        com.google.protobuf.RpcController controller,
        se.qxx.jukebox.domain.JukeboxDomain.Empty request,
        com.google.protobuf.RpcCallback<se.qxx.jukebox.domain.JukeboxDomain.Empty> done);
    
    public abstract void getTime(
        com.google.protobuf.RpcController controller,
        se.qxx.jukebox.domain.JukeboxDomain.Empty request,
        com.google.protobuf.RpcCallback<se.qxx.jukebox.domain.JukeboxDomain.JukeboxResponseTime> done);
    
    public abstract void isPlaying(
        com.google.protobuf.RpcController controller,
        se.qxx.jukebox.domain.JukeboxDomain.Empty request,
        com.google.protobuf.RpcCallback<se.qxx.jukebox.domain.JukeboxDomain.JukeboxResponseIsPlaying> done);
    
    public abstract void getTitle(
        com.google.protobuf.RpcController controller,
        se.qxx.jukebox.domain.JukeboxDomain.Empty request,
        com.google.protobuf.RpcCallback<se.qxx.jukebox.domain.JukeboxDomain.JukeboxResponseGetTitle> done);
    
    public static final
        com.google.protobuf.Descriptors.ServiceDescriptor
        getDescriptor() {
      return se.qxx.jukebox.domain.JukeboxDomain.getDescriptor().getServices().get(1);
    }
    public final com.google.protobuf.Descriptors.ServiceDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    
    public final void callMethod(
        com.google.protobuf.Descriptors.MethodDescriptor method,
        com.google.protobuf.RpcController controller,
        com.google.protobuf.Message request,
        com.google.protobuf.RpcCallback<
          com.google.protobuf.Message> done) {
      if (method.getService() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "Service.callMethod() given method descriptor for wrong " +
          "service type.");
      }
      switch(method.getIndex()) {
        case 0:
          this.startMovie(controller, (se.qxx.jukebox.domain.JukeboxDomain.JukeboxFrontStartMovie)request,
            com.google.protobuf.RpcUtil.<se.qxx.jukebox.domain.JukeboxDomain.Empty>specializeCallback(
              done));
          return;
        case 1:
          this.stopMovie(controller, (se.qxx.jukebox.domain.JukeboxDomain.Empty)request,
            com.google.protobuf.RpcUtil.<se.qxx.jukebox.domain.JukeboxDomain.Empty>specializeCallback(
              done));
          return;
        case 2:
          this.pauseMovie(controller, (se.qxx.jukebox.domain.JukeboxDomain.Empty)request,
            com.google.protobuf.RpcUtil.<se.qxx.jukebox.domain.JukeboxDomain.Empty>specializeCallback(
              done));
          return;
        case 3:
          this.seek(controller, (se.qxx.jukebox.domain.JukeboxDomain.JukeboxFrontSeek)request,
            com.google.protobuf.RpcUtil.<se.qxx.jukebox.domain.JukeboxDomain.Empty>specializeCallback(
              done));
          return;
        case 4:
          this.switchVRatio(controller, (se.qxx.jukebox.domain.JukeboxDomain.Empty)request,
            com.google.protobuf.RpcUtil.<se.qxx.jukebox.domain.JukeboxDomain.Empty>specializeCallback(
              done));
          return;
        case 5:
          this.getTime(controller, (se.qxx.jukebox.domain.JukeboxDomain.Empty)request,
            com.google.protobuf.RpcUtil.<se.qxx.jukebox.domain.JukeboxDomain.JukeboxResponseTime>specializeCallback(
              done));
          return;
        case 6:
          this.isPlaying(controller, (se.qxx.jukebox.domain.JukeboxDomain.Empty)request,
            com.google.protobuf.RpcUtil.<se.qxx.jukebox.domain.JukeboxDomain.JukeboxResponseIsPlaying>specializeCallback(
              done));
          return;
        case 7:
          this.getTitle(controller, (se.qxx.jukebox.domain.JukeboxDomain.Empty)request,
            com.google.protobuf.RpcUtil.<se.qxx.jukebox.domain.JukeboxDomain.JukeboxResponseGetTitle>specializeCallback(
              done));
          return;
        default:
          throw new java.lang.AssertionError("Can't get here.");
      }
    }
    
    public final com.google.protobuf.Message
        getRequestPrototype(
        com.google.protobuf.Descriptors.MethodDescriptor method) {
      if (method.getService() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "Service.getRequestPrototype() given method " +
          "descriptor for wrong service type.");
      }
      switch(method.getIndex()) {
        case 0:
          return se.qxx.jukebox.domain.JukeboxDomain.JukeboxFrontStartMovie.getDefaultInstance();
        case 1:
          return se.qxx.jukebox.domain.JukeboxDomain.Empty.getDefaultInstance();
        case 2:
          return se.qxx.jukebox.domain.JukeboxDomain.Empty.getDefaultInstance();
        case 3:
          return se.qxx.jukebox.domain.JukeboxDomain.JukeboxFrontSeek.getDefaultInstance();
        case 4:
          return se.qxx.jukebox.domain.JukeboxDomain.Empty.getDefaultInstance();
        case 5:
          return se.qxx.jukebox.domain.JukeboxDomain.Empty.getDefaultInstance();
        case 6:
          return se.qxx.jukebox.domain.JukeboxDomain.Empty.getDefaultInstance();
        case 7:
          return se.qxx.jukebox.domain.JukeboxDomain.Empty.getDefaultInstance();
        default:
          throw new java.lang.AssertionError("Can't get here.");
      }
    }
    
    public final com.google.protobuf.Message
        getResponsePrototype(
        com.google.protobuf.Descriptors.MethodDescriptor method) {
      if (method.getService() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "Service.getResponsePrototype() given method " +
          "descriptor for wrong service type.");
      }
      switch(method.getIndex()) {
        case 0:
          return se.qxx.jukebox.domain.JukeboxDomain.Empty.getDefaultInstance();
        case 1:
          return se.qxx.jukebox.domain.JukeboxDomain.Empty.getDefaultInstance();
        case 2:
          return se.qxx.jukebox.domain.JukeboxDomain.Empty.getDefaultInstance();
        case 3:
          return se.qxx.jukebox.domain.JukeboxDomain.Empty.getDefaultInstance();
        case 4:
          return se.qxx.jukebox.domain.JukeboxDomain.Empty.getDefaultInstance();
        case 5:
          return se.qxx.jukebox.domain.JukeboxDomain.JukeboxResponseTime.getDefaultInstance();
        case 6:
          return se.qxx.jukebox.domain.JukeboxDomain.JukeboxResponseIsPlaying.getDefaultInstance();
        case 7:
          return se.qxx.jukebox.domain.JukeboxDomain.JukeboxResponseGetTitle.getDefaultInstance();
        default:
          throw new java.lang.AssertionError("Can't get here.");
      }
    }
    
    public static Stub newStub(
        com.google.protobuf.RpcChannel channel) {
      return new Stub(channel);
    }
    
    public static final class Stub extends se.qxx.jukebox.domain.JukeboxDomain.JukeboxFrontService implements Interface {
      private Stub(com.google.protobuf.RpcChannel channel) {
        this.channel = channel;
      }
      
      private final com.google.protobuf.RpcChannel channel;
      
      public com.google.protobuf.RpcChannel getChannel() {
        return channel;
      }
      
      public  void startMovie(
          com.google.protobuf.RpcController controller,
          se.qxx.jukebox.domain.JukeboxDomain.JukeboxFrontStartMovie request,
          com.google.protobuf.RpcCallback<se.qxx.jukebox.domain.JukeboxDomain.Empty> done) {
        channel.callMethod(
          getDescriptor().getMethods().get(0),
          controller,
          request,
          se.qxx.jukebox.domain.JukeboxDomain.Empty.getDefaultInstance(),
          com.google.protobuf.RpcUtil.generalizeCallback(
            done,
            se.qxx.jukebox.domain.JukeboxDomain.Empty.class,
            se.qxx.jukebox.domain.JukeboxDomain.Empty.getDefaultInstance()));
      }
      
      public  void stopMovie(
          com.google.protobuf.RpcController controller,
          se.qxx.jukebox.domain.JukeboxDomain.Empty request,
          com.google.protobuf.RpcCallback<se.qxx.jukebox.domain.JukeboxDomain.Empty> done) {
        channel.callMethod(
          getDescriptor().getMethods().get(1),
          controller,
          request,
          se.qxx.jukebox.domain.JukeboxDomain.Empty.getDefaultInstance(),
          com.google.protobuf.RpcUtil.generalizeCallback(
            done,
            se.qxx.jukebox.domain.JukeboxDomain.Empty.class,
            se.qxx.jukebox.domain.JukeboxDomain.Empty.getDefaultInstance()));
      }
      
      public  void pauseMovie(
          com.google.protobuf.RpcController controller,
          se.qxx.jukebox.domain.JukeboxDomain.Empty request,
          com.google.protobuf.RpcCallback<se.qxx.jukebox.domain.JukeboxDomain.Empty> done) {
        channel.callMethod(
          getDescriptor().getMethods().get(2),
          controller,
          request,
          se.qxx.jukebox.domain.JukeboxDomain.Empty.getDefaultInstance(),
          com.google.protobuf.RpcUtil.generalizeCallback(
            done,
            se.qxx.jukebox.domain.JukeboxDomain.Empty.class,
            se.qxx.jukebox.domain.JukeboxDomain.Empty.getDefaultInstance()));
      }
      
      public  void seek(
          com.google.protobuf.RpcController controller,
          se.qxx.jukebox.domain.JukeboxDomain.JukeboxFrontSeek request,
          com.google.protobuf.RpcCallback<se.qxx.jukebox.domain.JukeboxDomain.Empty> done) {
        channel.callMethod(
          getDescriptor().getMethods().get(3),
          controller,
          request,
          se.qxx.jukebox.domain.JukeboxDomain.Empty.getDefaultInstance(),
          com.google.protobuf.RpcUtil.generalizeCallback(
            done,
            se.qxx.jukebox.domain.JukeboxDomain.Empty.class,
            se.qxx.jukebox.domain.JukeboxDomain.Empty.getDefaultInstance()));
      }
      
      public  void switchVRatio(
          com.google.protobuf.RpcController controller,
          se.qxx.jukebox.domain.JukeboxDomain.Empty request,
          com.google.protobuf.RpcCallback<se.qxx.jukebox.domain.JukeboxDomain.Empty> done) {
        channel.callMethod(
          getDescriptor().getMethods().get(4),
          controller,
          request,
          se.qxx.jukebox.domain.JukeboxDomain.Empty.getDefaultInstance(),
          com.google.protobuf.RpcUtil.generalizeCallback(
            done,
            se.qxx.jukebox.domain.JukeboxDomain.Empty.class,
            se.qxx.jukebox.domain.JukeboxDomain.Empty.getDefaultInstance()));
      }
      
      public  void getTime(
          com.google.protobuf.RpcController controller,
          se.qxx.jukebox.domain.JukeboxDomain.Empty request,
          com.google.protobuf.RpcCallback<se.qxx.jukebox.domain.JukeboxDomain.JukeboxResponseTime> done) {
        channel.callMethod(
          getDescriptor().getMethods().get(5),
          controller,
          request,
          se.qxx.jukebox.domain.JukeboxDomain.JukeboxResponseTime.getDefaultInstance(),
          com.google.protobuf.RpcUtil.generalizeCallback(
            done,
            se.qxx.jukebox.domain.JukeboxDomain.JukeboxResponseTime.class,
            se.qxx.jukebox.domain.JukeboxDomain.JukeboxResponseTime.getDefaultInstance()));
      }
      
      public  void isPlaying(
          com.google.protobuf.RpcController controller,
          se.qxx.jukebox.domain.JukeboxDomain.Empty request,
          com.google.protobuf.RpcCallback<se.qxx.jukebox.domain.JukeboxDomain.JukeboxResponseIsPlaying> done) {
        channel.callMethod(
          getDescriptor().getMethods().get(6),
          controller,
          request,
          se.qxx.jukebox.domain.JukeboxDomain.JukeboxResponseIsPlaying.getDefaultInstance(),
          com.google.protobuf.RpcUtil.generalizeCallback(
            done,
            se.qxx.jukebox.domain.JukeboxDomain.JukeboxResponseIsPlaying.class,
            se.qxx.jukebox.domain.JukeboxDomain.JukeboxResponseIsPlaying.getDefaultInstance()));
      }
      
      public  void getTitle(
          com.google.protobuf.RpcController controller,
          se.qxx.jukebox.domain.JukeboxDomain.Empty request,
          com.google.protobuf.RpcCallback<se.qxx.jukebox.domain.JukeboxDomain.JukeboxResponseGetTitle> done) {
        channel.callMethod(
          getDescriptor().getMethods().get(7),
          controller,
          request,
          se.qxx.jukebox.domain.JukeboxDomain.JukeboxResponseGetTitle.getDefaultInstance(),
          com.google.protobuf.RpcUtil.generalizeCallback(
            done,
            se.qxx.jukebox.domain.JukeboxDomain.JukeboxResponseGetTitle.class,
            se.qxx.jukebox.domain.JukeboxDomain.JukeboxResponseGetTitle.getDefaultInstance()));
      }
    }
    
    public static BlockingInterface newBlockingStub(
        com.google.protobuf.BlockingRpcChannel channel) {
      return new BlockingStub(channel);
    }
    
    public interface BlockingInterface {
      public se.qxx.jukebox.domain.JukeboxDomain.Empty startMovie(
          com.google.protobuf.RpcController controller,
          se.qxx.jukebox.domain.JukeboxDomain.JukeboxFrontStartMovie request)
          throws com.google.protobuf.ServiceException;
      
      public se.qxx.jukebox.domain.JukeboxDomain.Empty stopMovie(
          com.google.protobuf.RpcController controller,
          se.qxx.jukebox.domain.JukeboxDomain.Empty request)
          throws com.google.protobuf.ServiceException;
      
      public se.qxx.jukebox.domain.JukeboxDomain.Empty pauseMovie(
          com.google.protobuf.RpcController controller,
          se.qxx.jukebox.domain.JukeboxDomain.Empty request)
          throws com.google.protobuf.ServiceException;
      
      public se.qxx.jukebox.domain.JukeboxDomain.Empty seek(
          com.google.protobuf.RpcController controller,
          se.qxx.jukebox.domain.JukeboxDomain.JukeboxFrontSeek request)
          throws com.google.protobuf.ServiceException;
      
      public se.qxx.jukebox.domain.JukeboxDomain.Empty switchVRatio(
          com.google.protobuf.RpcController controller,
          se.qxx.jukebox.domain.JukeboxDomain.Empty request)
          throws com.google.protobuf.ServiceException;
      
      public se.qxx.jukebox.domain.JukeboxDomain.JukeboxResponseTime getTime(
          com.google.protobuf.RpcController controller,
          se.qxx.jukebox.domain.JukeboxDomain.Empty request)
          throws com.google.protobuf.ServiceException;
      
      public se.qxx.jukebox.domain.JukeboxDomain.JukeboxResponseIsPlaying isPlaying(
          com.google.protobuf.RpcController controller,
          se.qxx.jukebox.domain.JukeboxDomain.Empty request)
          throws com.google.protobuf.ServiceException;
      
      public se.qxx.jukebox.domain.JukeboxDomain.JukeboxResponseGetTitle getTitle(
          com.google.protobuf.RpcController controller,
          se.qxx.jukebox.domain.JukeboxDomain.Empty request)
          throws com.google.protobuf.ServiceException;
    }
    
    private static final class BlockingStub implements BlockingInterface {
      private BlockingStub(com.google.protobuf.BlockingRpcChannel channel) {
        this.channel = channel;
      }
      
      private final com.google.protobuf.BlockingRpcChannel channel;
      
      public se.qxx.jukebox.domain.JukeboxDomain.Empty startMovie(
          com.google.protobuf.RpcController controller,
          se.qxx.jukebox.domain.JukeboxDomain.JukeboxFrontStartMovie request)
          throws com.google.protobuf.ServiceException {
        return (se.qxx.jukebox.domain.JukeboxDomain.Empty) channel.callBlockingMethod(
          getDescriptor().getMethods().get(0),
          controller,
          request,
          se.qxx.jukebox.domain.JukeboxDomain.Empty.getDefaultInstance());
      }
      
      
      public se.qxx.jukebox.domain.JukeboxDomain.Empty stopMovie(
          com.google.protobuf.RpcController controller,
          se.qxx.jukebox.domain.JukeboxDomain.Empty request)
          throws com.google.protobuf.ServiceException {
        return (se.qxx.jukebox.domain.JukeboxDomain.Empty) channel.callBlockingMethod(
          getDescriptor().getMethods().get(1),
          controller,
          request,
          se.qxx.jukebox.domain.JukeboxDomain.Empty.getDefaultInstance());
      }
      
      
      public se.qxx.jukebox.domain.JukeboxDomain.Empty pauseMovie(
          com.google.protobuf.RpcController controller,
          se.qxx.jukebox.domain.JukeboxDomain.Empty request)
          throws com.google.protobuf.ServiceException {
        return (se.qxx.jukebox.domain.JukeboxDomain.Empty) channel.callBlockingMethod(
          getDescriptor().getMethods().get(2),
          controller,
          request,
          se.qxx.jukebox.domain.JukeboxDomain.Empty.getDefaultInstance());
      }
      
      
      public se.qxx.jukebox.domain.JukeboxDomain.Empty seek(
          com.google.protobuf.RpcController controller,
          se.qxx.jukebox.domain.JukeboxDomain.JukeboxFrontSeek request)
          throws com.google.protobuf.ServiceException {
        return (se.qxx.jukebox.domain.JukeboxDomain.Empty) channel.callBlockingMethod(
          getDescriptor().getMethods().get(3),
          controller,
          request,
          se.qxx.jukebox.domain.JukeboxDomain.Empty.getDefaultInstance());
      }
      
      
      public se.qxx.jukebox.domain.JukeboxDomain.Empty switchVRatio(
          com.google.protobuf.RpcController controller,
          se.qxx.jukebox.domain.JukeboxDomain.Empty request)
          throws com.google.protobuf.ServiceException {
        return (se.qxx.jukebox.domain.JukeboxDomain.Empty) channel.callBlockingMethod(
          getDescriptor().getMethods().get(4),
          controller,
          request,
          se.qxx.jukebox.domain.JukeboxDomain.Empty.getDefaultInstance());
      }
      
      
      public se.qxx.jukebox.domain.JukeboxDomain.JukeboxResponseTime getTime(
          com.google.protobuf.RpcController controller,
          se.qxx.jukebox.domain.JukeboxDomain.Empty request)
          throws com.google.protobuf.ServiceException {
        return (se.qxx.jukebox.domain.JukeboxDomain.JukeboxResponseTime) channel.callBlockingMethod(
          getDescriptor().getMethods().get(5),
          controller,
          request,
          se.qxx.jukebox.domain.JukeboxDomain.JukeboxResponseTime.getDefaultInstance());
      }
      
      
      public se.qxx.jukebox.domain.JukeboxDomain.JukeboxResponseIsPlaying isPlaying(
          com.google.protobuf.RpcController controller,
          se.qxx.jukebox.domain.JukeboxDomain.Empty request)
          throws com.google.protobuf.ServiceException {
        return (se.qxx.jukebox.domain.JukeboxDomain.JukeboxResponseIsPlaying) channel.callBlockingMethod(
          getDescriptor().getMethods().get(6),
          controller,
          request,
          se.qxx.jukebox.domain.JukeboxDomain.JukeboxResponseIsPlaying.getDefaultInstance());
      }
      
      
      public se.qxx.jukebox.domain.JukeboxDomain.JukeboxResponseGetTitle getTitle(
          com.google.protobuf.RpcController controller,
          se.qxx.jukebox.domain.JukeboxDomain.Empty request)
          throws com.google.protobuf.ServiceException {
        return (se.qxx.jukebox.domain.JukeboxDomain.JukeboxResponseGetTitle) channel.callBlockingMethod(
          getDescriptor().getMethods().get(7),
          controller,
          request,
          se.qxx.jukebox.domain.JukeboxDomain.JukeboxResponseGetTitle.getDefaultInstance());
      }
      
    }
  }
  
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_se_qxx_jukebox_domain_Movie_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_se_qxx_jukebox_domain_Movie_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_se_qxx_jukebox_domain_Subtitle_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_se_qxx_jukebox_domain_Subtitle_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_se_qxx_jukebox_domain_Media_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_se_qxx_jukebox_domain_Media_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_se_qxx_jukebox_domain_Empty_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_se_qxx_jukebox_domain_Empty_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_se_qxx_jukebox_domain_JukeboxRequestGeneral_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_se_qxx_jukebox_domain_JukeboxRequestGeneral_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_se_qxx_jukebox_domain_JukeboxRequestMovieID_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_se_qxx_jukebox_domain_JukeboxRequestMovieID_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_se_qxx_jukebox_domain_JukeboxRequestListMovies_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_se_qxx_jukebox_domain_JukeboxRequestListMovies_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_se_qxx_jukebox_domain_JukeboxRequestStartMovie_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_se_qxx_jukebox_domain_JukeboxRequestStartMovie_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_se_qxx_jukebox_domain_JukeboxRequestSeek_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_se_qxx_jukebox_domain_JukeboxRequestSeek_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_se_qxx_jukebox_domain_JukeboxRequestListSubtitles_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_se_qxx_jukebox_domain_JukeboxRequestListSubtitles_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_se_qxx_jukebox_domain_JukeboxRequestSetSubtitle_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_se_qxx_jukebox_domain_JukeboxRequestSetSubtitle_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_se_qxx_jukebox_domain_JukeboxFrontStartMovie_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_se_qxx_jukebox_domain_JukeboxFrontStartMovie_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_se_qxx_jukebox_domain_JukeboxFrontSeek_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_se_qxx_jukebox_domain_JukeboxFrontSeek_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_se_qxx_jukebox_domain_JukeboxFrontSetSubtitle_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_se_qxx_jukebox_domain_JukeboxFrontSetSubtitle_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_se_qxx_jukebox_domain_JukeboxResponseListMovies_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_se_qxx_jukebox_domain_JukeboxResponseListMovies_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_se_qxx_jukebox_domain_JukeboxResponseListPlayers_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_se_qxx_jukebox_domain_JukeboxResponseListPlayers_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_se_qxx_jukebox_domain_JukeboxResponseListSubtitles_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_se_qxx_jukebox_domain_JukeboxResponseListSubtitles_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_se_qxx_jukebox_domain_JukeboxResponseStartMovie_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_se_qxx_jukebox_domain_JukeboxResponseStartMovie_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_se_qxx_jukebox_domain_JukeboxResponseTime_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_se_qxx_jukebox_domain_JukeboxResponseTime_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_se_qxx_jukebox_domain_JukeboxResponseIsPlaying_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_se_qxx_jukebox_domain_JukeboxResponseIsPlaying_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_se_qxx_jukebox_domain_JukeboxResponseGetTitle_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_se_qxx_jukebox_domain_JukeboxResponseGetTitle_fieldAccessorTable;
  
  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\023JukeboxDomain.proto\022\025se.qxx.jukebox.do" +
      "main\"\367\003\n\005Movie\022\n\n\002ID\030\001 \002(\005\022+\n\005media\030\002 \003(" +
      "\0132\034.se.qxx.jukebox.domain.Media\022\r\n\005title" +
      "\030\003 \001(\t\022\014\n\004year\030\004 \001(\005\022\014\n\004type\030\005 \001(\t\022\016\n\006fo" +
      "rmat\030\006 \001(\t\022\r\n\005sound\030\007 \001(\t\022\020\n\010language\030\010 " +
      "\001(\t\022\021\n\tgroupName\030\t \001(\t\022\020\n\010imdb_url\030\n \001(\t" +
      "\022\017\n\007imdb_id\030\013 \001(\t\022\020\n\010duration\030\014 \001(\005\022\016\n\006r" +
      "ating\030\r \001(\t\022\020\n\010director\030\016 \001(\t\022\r\n\005story\030\017" +
      " \001(\t\022\r\n\005image\030\020 \001(\014\022\r\n\005genre\030\021 \003(\t\0225\n\nid" +
      "entifier\030\022 \001(\0162!.se.qxx.jukebox.domain.I",
      "dentifier\022\030\n\020identifierRating\030\023 \001(\005\022\017\n\007w" +
      "atched\030\024 \001(\010\022\023\n\013isTvEpisode\030\025 \001(\010\022\016\n\006sea" +
      "son\030\026 \001(\005\022\017\n\007episode\030\027 \001(\005\022\024\n\014firstAirDa" +
      "te\030\030 \001(\003\022\024\n\014episodeTitle\030\031 \001(\t\"\206\001\n\010Subti" +
      "tle\022\020\n\010filename\030\001 \002(\t\022\023\n\013description\030\002 \002" +
      "(\t\022-\n\006rating\030\003 \002(\0162\035.se.qxx.jukebox.doma" +
      "in.Rating\022\022\n\nmediaIndex\030\004 \002(\005\022\020\n\010languag" +
      "e\030\005 \002(\t\"\242\001\n\005Media\022\n\n\002ID\030\001 \002(\005\022\r\n\005index\030\002" +
      " \002(\005\022\020\n\010filename\030\003 \002(\t\022\020\n\010filepath\030\004 \002(\t" +
      "\022\024\n\014metaDuration\030\005 \001(\005\022\025\n\rmetaFramerate\030",
      "\006 \001(\t\022-\n\004subs\030\007 \003(\0132\037.se.qxx.jukebox.dom" +
      "ain.Subtitle\"\007\n\005Empty\"+\n\025JukeboxRequestG" +
      "eneral\022\022\n\nplayerName\030\001 \002(\t\"(\n\025JukeboxReq" +
      "uestMovieID\022\017\n\007movieId\030\001 \002(\005\"0\n\030JukeboxR" +
      "equestListMovies\022\024\n\014searchString\030\002 \001(\t\"?" +
      "\n\030JukeboxRequestStartMovie\022\017\n\007movieId\030\001 " +
      "\002(\005\022\022\n\nplayerName\030\002 \001(\t\"9\n\022JukeboxReques" +
      "tSeek\022\022\n\nplayerName\030\001 \002(\t\022\017\n\007seconds\030\002 \002" +
      "(\005\".\n\033JukeboxRequestListSubtitles\022\017\n\007med" +
      "iaId\030\001 \002(\005\"]\n\031JukeboxRequestSetSubtitle\022",
      "\022\n\nplayerName\030\001 \002(\t\022\017\n\007mediaID\030\002 \002(\005\022\033\n\023" +
      "subtitleDescription\030\003 \002(\t\"6\n\026JukeboxFron" +
      "tStartMovie\022\013\n\003mrl\030\001 \002(\t\022\017\n\007subFile\030\002 \001(" +
      "\t\"#\n\020JukeboxFrontSeek\022\017\n\007seconds\030\001 \002(\005\"*" +
      "\n\027JukeboxFrontSetSubtitle\022\017\n\007subFile\030\001 \002" +
      "(\t\"I\n\031JukeboxResponseListMovies\022,\n\006movie" +
      "s\030\001 \003(\0132\034.se.qxx.jukebox.domain.Movie\".\n" +
      "\032JukeboxResponseListPlayers\022\020\n\010hostname\030" +
      "\001 \003(\t\"Q\n\034JukeboxResponseListSubtitles\0221\n" +
      "\010subtitle\030\001 \003(\0132\037.se.qxx.jukebox.domain.",
      "Subtitle\"N\n\031JukeboxResponseStartMovie\0221\n" +
      "\010subtitle\030\001 \003(\0132\037.se.qxx.jukebox.domain." +
      "Subtitle\"8\n\023JukeboxResponseTime\022\017\n\007secon" +
      "ds\030\001 \002(\005\022\020\n\010filename\030\002 \002(\t\"-\n\030JukeboxRes" +
      "ponseIsPlaying\022\021\n\tisPlaying\030\001 \002(\010\"(\n\027Juk" +
      "eboxResponseGetTitle\022\r\n\005title\030\001 \002(\t*8\n\nI" +
      "dentifier\022\014\n\010Filename\020\001\022\023\n\017ParentDirecto" +
      "ry\020\002\022\007\n\003NFO\020\003*]\n\006Rating\022\016\n\nNotMatched\020\001\022" +
      "\021\n\rProbableMatch\020\002\022\021\n\rPositiveMatch\020\003\022\016\n" +
      "\nExactMatch\020\004\022\r\n\tSubsExist\020\0052\211\r\n\016Jukebox",
      "Service\022o\n\nListMovies\022/.se.qxx.jukebox.d" +
      "omain.JukeboxRequestListMovies\0320.se.qxx." +
      "jukebox.domain.JukeboxResponseListMovies" +
      "\022^\n\013ListPlayers\022\034.se.qxx.jukebox.domain." +
      "Empty\0321.se.qxx.jukebox.domain.JukeboxRes" +
      "ponseListPlayers\022o\n\nStartMovie\022/.se.qxx." +
      "jukebox.domain.JukeboxRequestStartMovie\032" +
      "0.se.qxx.jukebox.domain.JukeboxResponseS" +
      "tartMovie\022W\n\tStopMovie\022,.se.qxx.jukebox." +
      "domain.JukeboxRequestGeneral\032\034.se.qxx.ju",
      "kebox.domain.Empty\022X\n\nPauseMovie\022,.se.qx" +
      "x.jukebox.domain.JukeboxRequestGeneral\032\034" +
      ".se.qxx.jukebox.domain.Empty\022O\n\004Seek\022).s" +
      "e.qxx.jukebox.domain.JukeboxRequestSeek\032" +
      "\034.se.qxx.jukebox.domain.Empty\022Z\n\014SwitchV" +
      "Ratio\022,.se.qxx.jukebox.domain.JukeboxReq" +
      "uestGeneral\032\034.se.qxx.jukebox.domain.Empt" +
      "y\022c\n\007GetTime\022,.se.qxx.jukebox.domain.Juk" +
      "eboxRequestGeneral\032*.se.qxx.jukebox.doma" +
      "in.JukeboxResponseTime\022j\n\tisPlaying\022,.se",
      ".qxx.jukebox.domain.JukeboxRequestGenera" +
      "l\032/.se.qxx.jukebox.domain.JukeboxRespons" +
      "eIsPlaying\022h\n\010GetTitle\022,.se.qxx.jukebox." +
      "domain.JukeboxRequestGeneral\032..se.qxx.ju" +
      "kebox.domain.JukeboxResponseGetTitle\022^\n\020" +
      "ToggleFullscreen\022,.se.qxx.jukebox.domain" +
      ".JukeboxRequestGeneral\032\034.se.qxx.jukebox." +
      "domain.Empty\022W\n\tBlacklist\022,.se.qxx.jukeb" +
      "ox.domain.JukeboxRequestMovieID\032\034.se.qxx" +
      ".jukebox.domain.Empty\022[\n\rToggleWatched\022,",
      ".se.qxx.jukebox.domain.JukeboxRequestMov" +
      "ieID\032\034.se.qxx.jukebox.domain.Empty\022x\n\rLi" +
      "stSubtitles\0222.se.qxx.jukebox.domain.Juke" +
      "boxRequestListSubtitles\0323.se.qxx.jukebox" +
      ".domain.JukeboxResponseListSubtitles\022]\n\013" +
      "SetSubtitle\0220.se.qxx.jukebox.domain.Juke" +
      "boxRequestSetSubtitle\032\034.se.qxx.jukebox.d" +
      "omain.Empty\022T\n\006Wakeup\022,.se.qxx.jukebox.d" +
      "omain.JukeboxRequestGeneral\032\034.se.qxx.juk" +
      "ebox.domain.Empty\022U\n\007Suspend\022,.se.qxx.ju",
      "kebox.domain.JukeboxRequestGeneral\032\034.se." +
      "qxx.jukebox.domain.Empty2\251\005\n\023JukeboxFron" +
      "tService\022Y\n\nStartMovie\022-.se.qxx.jukebox." +
      "domain.JukeboxFrontStartMovie\032\034.se.qxx.j" +
      "ukebox.domain.Empty\022G\n\tStopMovie\022\034.se.qx" +
      "x.jukebox.domain.Empty\032\034.se.qxx.jukebox." +
      "domain.Empty\022H\n\nPauseMovie\022\034.se.qxx.juke" +
      "box.domain.Empty\032\034.se.qxx.jukebox.domain" +
      ".Empty\022M\n\004Seek\022\'.se.qxx.jukebox.domain.J" +
      "ukeboxFrontSeek\032\034.se.qxx.jukebox.domain.",
      "Empty\022J\n\014SwitchVRatio\022\034.se.qxx.jukebox.d" +
      "omain.Empty\032\034.se.qxx.jukebox.domain.Empt" +
      "y\022S\n\007GetTime\022\034.se.qxx.jukebox.domain.Emp" +
      "ty\032*.se.qxx.jukebox.domain.JukeboxRespon" +
      "seTime\022Z\n\tisPlaying\022\034.se.qxx.jukebox.dom" +
      "ain.Empty\032/.se.qxx.jukebox.domain.Jukebo" +
      "xResponseIsPlaying\022X\n\010GetTitle\022\034.se.qxx." +
      "jukebox.domain.Empty\032..se.qxx.jukebox.do" +
      "main.JukeboxResponseGetTitleB\032\n\025se.qxx.j" +
      "ukebox.domain\210\001\001"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
      new com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner() {
        public com.google.protobuf.ExtensionRegistry assignDescriptors(
            com.google.protobuf.Descriptors.FileDescriptor root) {
          descriptor = root;
          internal_static_se_qxx_jukebox_domain_Movie_descriptor =
            getDescriptor().getMessageTypes().get(0);
          internal_static_se_qxx_jukebox_domain_Movie_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_se_qxx_jukebox_domain_Movie_descriptor,
              new java.lang.String[] { "ID", "Media", "Title", "Year", "Type", "Format", "Sound", "Language", "GroupName", "ImdbUrl", "ImdbId", "Duration", "Rating", "Director", "Story", "Image", "Genre", "Identifier", "IdentifierRating", "Watched", "IsTvEpisode", "Season", "Episode", "FirstAirDate", "EpisodeTitle", },
              se.qxx.jukebox.domain.JukeboxDomain.Movie.class,
              se.qxx.jukebox.domain.JukeboxDomain.Movie.Builder.class);
          internal_static_se_qxx_jukebox_domain_Subtitle_descriptor =
            getDescriptor().getMessageTypes().get(1);
          internal_static_se_qxx_jukebox_domain_Subtitle_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_se_qxx_jukebox_domain_Subtitle_descriptor,
              new java.lang.String[] { "Filename", "Description", "Rating", "MediaIndex", "Language", },
              se.qxx.jukebox.domain.JukeboxDomain.Subtitle.class,
              se.qxx.jukebox.domain.JukeboxDomain.Subtitle.Builder.class);
          internal_static_se_qxx_jukebox_domain_Media_descriptor =
            getDescriptor().getMessageTypes().get(2);
          internal_static_se_qxx_jukebox_domain_Media_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_se_qxx_jukebox_domain_Media_descriptor,
              new java.lang.String[] { "ID", "Index", "Filename", "Filepath", "MetaDuration", "MetaFramerate", "Subs", },
              se.qxx.jukebox.domain.JukeboxDomain.Media.class,
              se.qxx.jukebox.domain.JukeboxDomain.Media.Builder.class);
          internal_static_se_qxx_jukebox_domain_Empty_descriptor =
            getDescriptor().getMessageTypes().get(3);
          internal_static_se_qxx_jukebox_domain_Empty_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_se_qxx_jukebox_domain_Empty_descriptor,
              new java.lang.String[] { },
              se.qxx.jukebox.domain.JukeboxDomain.Empty.class,
              se.qxx.jukebox.domain.JukeboxDomain.Empty.Builder.class);
          internal_static_se_qxx_jukebox_domain_JukeboxRequestGeneral_descriptor =
            getDescriptor().getMessageTypes().get(4);
          internal_static_se_qxx_jukebox_domain_JukeboxRequestGeneral_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_se_qxx_jukebox_domain_JukeboxRequestGeneral_descriptor,
              new java.lang.String[] { "PlayerName", },
              se.qxx.jukebox.domain.JukeboxDomain.JukeboxRequestGeneral.class,
              se.qxx.jukebox.domain.JukeboxDomain.JukeboxRequestGeneral.Builder.class);
          internal_static_se_qxx_jukebox_domain_JukeboxRequestMovieID_descriptor =
            getDescriptor().getMessageTypes().get(5);
          internal_static_se_qxx_jukebox_domain_JukeboxRequestMovieID_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_se_qxx_jukebox_domain_JukeboxRequestMovieID_descriptor,
              new java.lang.String[] { "MovieId", },
              se.qxx.jukebox.domain.JukeboxDomain.JukeboxRequestMovieID.class,
              se.qxx.jukebox.domain.JukeboxDomain.JukeboxRequestMovieID.Builder.class);
          internal_static_se_qxx_jukebox_domain_JukeboxRequestListMovies_descriptor =
            getDescriptor().getMessageTypes().get(6);
          internal_static_se_qxx_jukebox_domain_JukeboxRequestListMovies_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_se_qxx_jukebox_domain_JukeboxRequestListMovies_descriptor,
              new java.lang.String[] { "SearchString", },
              se.qxx.jukebox.domain.JukeboxDomain.JukeboxRequestListMovies.class,
              se.qxx.jukebox.domain.JukeboxDomain.JukeboxRequestListMovies.Builder.class);
          internal_static_se_qxx_jukebox_domain_JukeboxRequestStartMovie_descriptor =
            getDescriptor().getMessageTypes().get(7);
          internal_static_se_qxx_jukebox_domain_JukeboxRequestStartMovie_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_se_qxx_jukebox_domain_JukeboxRequestStartMovie_descriptor,
              new java.lang.String[] { "MovieId", "PlayerName", },
              se.qxx.jukebox.domain.JukeboxDomain.JukeboxRequestStartMovie.class,
              se.qxx.jukebox.domain.JukeboxDomain.JukeboxRequestStartMovie.Builder.class);
          internal_static_se_qxx_jukebox_domain_JukeboxRequestSeek_descriptor =
            getDescriptor().getMessageTypes().get(8);
          internal_static_se_qxx_jukebox_domain_JukeboxRequestSeek_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_se_qxx_jukebox_domain_JukeboxRequestSeek_descriptor,
              new java.lang.String[] { "PlayerName", "Seconds", },
              se.qxx.jukebox.domain.JukeboxDomain.JukeboxRequestSeek.class,
              se.qxx.jukebox.domain.JukeboxDomain.JukeboxRequestSeek.Builder.class);
          internal_static_se_qxx_jukebox_domain_JukeboxRequestListSubtitles_descriptor =
            getDescriptor().getMessageTypes().get(9);
          internal_static_se_qxx_jukebox_domain_JukeboxRequestListSubtitles_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_se_qxx_jukebox_domain_JukeboxRequestListSubtitles_descriptor,
              new java.lang.String[] { "MediaId", },
              se.qxx.jukebox.domain.JukeboxDomain.JukeboxRequestListSubtitles.class,
              se.qxx.jukebox.domain.JukeboxDomain.JukeboxRequestListSubtitles.Builder.class);
          internal_static_se_qxx_jukebox_domain_JukeboxRequestSetSubtitle_descriptor =
            getDescriptor().getMessageTypes().get(10);
          internal_static_se_qxx_jukebox_domain_JukeboxRequestSetSubtitle_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_se_qxx_jukebox_domain_JukeboxRequestSetSubtitle_descriptor,
              new java.lang.String[] { "PlayerName", "MediaID", "SubtitleDescription", },
              se.qxx.jukebox.domain.JukeboxDomain.JukeboxRequestSetSubtitle.class,
              se.qxx.jukebox.domain.JukeboxDomain.JukeboxRequestSetSubtitle.Builder.class);
          internal_static_se_qxx_jukebox_domain_JukeboxFrontStartMovie_descriptor =
            getDescriptor().getMessageTypes().get(11);
          internal_static_se_qxx_jukebox_domain_JukeboxFrontStartMovie_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_se_qxx_jukebox_domain_JukeboxFrontStartMovie_descriptor,
              new java.lang.String[] { "Mrl", "SubFile", },
              se.qxx.jukebox.domain.JukeboxDomain.JukeboxFrontStartMovie.class,
              se.qxx.jukebox.domain.JukeboxDomain.JukeboxFrontStartMovie.Builder.class);
          internal_static_se_qxx_jukebox_domain_JukeboxFrontSeek_descriptor =
            getDescriptor().getMessageTypes().get(12);
          internal_static_se_qxx_jukebox_domain_JukeboxFrontSeek_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_se_qxx_jukebox_domain_JukeboxFrontSeek_descriptor,
              new java.lang.String[] { "Seconds", },
              se.qxx.jukebox.domain.JukeboxDomain.JukeboxFrontSeek.class,
              se.qxx.jukebox.domain.JukeboxDomain.JukeboxFrontSeek.Builder.class);
          internal_static_se_qxx_jukebox_domain_JukeboxFrontSetSubtitle_descriptor =
            getDescriptor().getMessageTypes().get(13);
          internal_static_se_qxx_jukebox_domain_JukeboxFrontSetSubtitle_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_se_qxx_jukebox_domain_JukeboxFrontSetSubtitle_descriptor,
              new java.lang.String[] { "SubFile", },
              se.qxx.jukebox.domain.JukeboxDomain.JukeboxFrontSetSubtitle.class,
              se.qxx.jukebox.domain.JukeboxDomain.JukeboxFrontSetSubtitle.Builder.class);
          internal_static_se_qxx_jukebox_domain_JukeboxResponseListMovies_descriptor =
            getDescriptor().getMessageTypes().get(14);
          internal_static_se_qxx_jukebox_domain_JukeboxResponseListMovies_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_se_qxx_jukebox_domain_JukeboxResponseListMovies_descriptor,
              new java.lang.String[] { "Movies", },
              se.qxx.jukebox.domain.JukeboxDomain.JukeboxResponseListMovies.class,
              se.qxx.jukebox.domain.JukeboxDomain.JukeboxResponseListMovies.Builder.class);
          internal_static_se_qxx_jukebox_domain_JukeboxResponseListPlayers_descriptor =
            getDescriptor().getMessageTypes().get(15);
          internal_static_se_qxx_jukebox_domain_JukeboxResponseListPlayers_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_se_qxx_jukebox_domain_JukeboxResponseListPlayers_descriptor,
              new java.lang.String[] { "Hostname", },
              se.qxx.jukebox.domain.JukeboxDomain.JukeboxResponseListPlayers.class,
              se.qxx.jukebox.domain.JukeboxDomain.JukeboxResponseListPlayers.Builder.class);
          internal_static_se_qxx_jukebox_domain_JukeboxResponseListSubtitles_descriptor =
            getDescriptor().getMessageTypes().get(16);
          internal_static_se_qxx_jukebox_domain_JukeboxResponseListSubtitles_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_se_qxx_jukebox_domain_JukeboxResponseListSubtitles_descriptor,
              new java.lang.String[] { "Subtitle", },
              se.qxx.jukebox.domain.JukeboxDomain.JukeboxResponseListSubtitles.class,
              se.qxx.jukebox.domain.JukeboxDomain.JukeboxResponseListSubtitles.Builder.class);
          internal_static_se_qxx_jukebox_domain_JukeboxResponseStartMovie_descriptor =
            getDescriptor().getMessageTypes().get(17);
          internal_static_se_qxx_jukebox_domain_JukeboxResponseStartMovie_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_se_qxx_jukebox_domain_JukeboxResponseStartMovie_descriptor,
              new java.lang.String[] { "Subtitle", },
              se.qxx.jukebox.domain.JukeboxDomain.JukeboxResponseStartMovie.class,
              se.qxx.jukebox.domain.JukeboxDomain.JukeboxResponseStartMovie.Builder.class);
          internal_static_se_qxx_jukebox_domain_JukeboxResponseTime_descriptor =
            getDescriptor().getMessageTypes().get(18);
          internal_static_se_qxx_jukebox_domain_JukeboxResponseTime_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_se_qxx_jukebox_domain_JukeboxResponseTime_descriptor,
              new java.lang.String[] { "Seconds", "Filename", },
              se.qxx.jukebox.domain.JukeboxDomain.JukeboxResponseTime.class,
              se.qxx.jukebox.domain.JukeboxDomain.JukeboxResponseTime.Builder.class);
          internal_static_se_qxx_jukebox_domain_JukeboxResponseIsPlaying_descriptor =
            getDescriptor().getMessageTypes().get(19);
          internal_static_se_qxx_jukebox_domain_JukeboxResponseIsPlaying_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_se_qxx_jukebox_domain_JukeboxResponseIsPlaying_descriptor,
              new java.lang.String[] { "IsPlaying", },
              se.qxx.jukebox.domain.JukeboxDomain.JukeboxResponseIsPlaying.class,
              se.qxx.jukebox.domain.JukeboxDomain.JukeboxResponseIsPlaying.Builder.class);
          internal_static_se_qxx_jukebox_domain_JukeboxResponseGetTitle_descriptor =
            getDescriptor().getMessageTypes().get(20);
          internal_static_se_qxx_jukebox_domain_JukeboxResponseGetTitle_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_se_qxx_jukebox_domain_JukeboxResponseGetTitle_descriptor,
              new java.lang.String[] { "Title", },
              se.qxx.jukebox.domain.JukeboxDomain.JukeboxResponseGetTitle.class,
              se.qxx.jukebox.domain.JukeboxDomain.JukeboxResponseGetTitle.Builder.class);
          return null;
        }
      };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        }, assigner);
  }
  
  // @@protoc_insertion_point(outer_class_scope)
}
