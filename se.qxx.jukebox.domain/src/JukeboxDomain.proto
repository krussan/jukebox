package se.qxx.jukebox.domain;

option java_package = "se.qxx.jukebox.domain";
option java_generic_services = true;

//---------------------------------------------------------------------------------------
//----------------------------------------------------------------------- Enumerations
//---------------------------------------------------------------------------------------

enum Identifier {
	Filename = 1;
	ParentDirectory = 2;
	NFO = 3;
}

enum Rating {
	NotMatched = 1;
	ProbableMatch = 2;
	PositiveMatch = 3;
	ExactMatch = 4;
	SubsExist = 5;
}

//---------------------------------------------------------------------------------------
//----------------------------------------------------------------------- Objects
//---------------------------------------------------------------------------------------

message Movie {
	required int32 ID = 1;
	repeated Media media = 2;	
	optional string title = 3;
	optional int32 year = 4;
	optional string type = 5;
	optional string format = 6;
	optional string sound = 7;
	optional string language = 8;
	optional string group = 9;
	optional string imdb_url = 10;
	optional string imdb_id = 11;	
	optional int32 duration = 12;
	optional string rating = 13;
	optional string director = 14;
	optional string story = 15;
	optional bytes image = 16;
	repeated string genre = 17;
	optional Identifier identifier = 18;
	optional int32 identifierRating = 19;
	optional bool watched = 20;
	
	optional bool isTvEpisode = 21;
	optional int32 episode = 22;
	optional int64 firstAirDate = 23;
	optional Season season = 24;
	optional string episodeTitle = 25;
}

message Episode {
	required int32 ID = 1;
	required int32 episodeNumber = 2;
	repeated Media media = 3;
	optional string title = 4;
	
}

message Season {
	required int32 ID = 1;
	required int32 seasonNumber = 2;
	optional bytes image = 3;
	optional string rating = 4;
	optional string story = 5;
	repeated string genre = 6;
}

message Subtitle {
	required string filename = 1;
	required string description = 2;
	required Rating rating = 3;
	required int32 mediaIndex = 4;
	required string language = 5;
}

message Media {
	required int32 ID = 1;
	required int32 index = 2;
	required string filename = 3;
	required string filepath = 4;
	optional int32 metaDuration = 5;
	optional string metaFramerate = 6;
	repeated Subtitle subs = 7;		
}

//---------------------------------------------------------------------------------------
//----------------------------------------------------------------------- Requests
//---------------------------------------------------------------------------------------

message Empty{};

message JukeboxRequestGeneral {
	required string playerName = 1;
}

message JukeboxRequestMovieID {
	required int32 movieId = 1;
}

message JukeboxRequestListMovies {
	optional string searchString = 2;
}

message JukeboxRequestStartMovie {
	required int32 movieId = 1;
	optional string playerName = 2;
}

message JukeboxRequestSeek {
	required string playerName = 1;
	required int32 seconds = 2;
}

message JukeboxRequestListSubtitles {
	required int32 mediaId = 1;
}

message JukeboxRequestSetSubtitle {
	required string playerName = 1;
	required int32 mediaID = 2;
	required string subtitleDescription = 3;
}


//---------------------------------------------------------------------------------------
//----------------------------------------------------------------------- Responses
//---------------------------------------------------------------------------------------

message JukeboxResponseListMovies {
	repeated Movie movies = 1;
}

message JukeboxResponseListPlayers {
	repeated string hostname = 1;
}

message JukeboxResponseListSubtitles {
	repeated Subtitle subtitle = 1;
}

message JukeboxResponseStartMovie { 
	repeated Subtitle subtitle = 1;
}

message JukeboxResponseTime {
	required int32 seconds = 1;
	required string filename = 2;
}

message JukeboxResponseIsPlaying {
	required bool isPlaying = 1;
}

message JukeboxResponseGetTitle {
	required string title = 1;
}

//---------------------------------------------------------------------------------------
//----------------------------------------------------------------------- RPC
//---------------------------------------------------------------------------------------

service JukeboxService {
	rpc ListMovies (JukeboxRequestListMovies) returns (JukeboxResponseListMovies);
	rpc ListPlayers (Empty) returns (JukeboxResponseListPlayers);
	rpc StartMovie(JukeboxRequestStartMovie) returns (JukeboxResponseStartMovie);
	rpc StopMovie(JukeboxRequestGeneral) returns (Empty);
	rpc PauseMovie(JukeboxRequestGeneral) returns (Empty);
	rpc Seek(JukeboxRequestSeek) returns (Empty);
	rpc SwitchVRatio(JukeboxRequestGeneral) returns (Empty);
	rpc GetTime(JukeboxRequestGeneral) returns (JukeboxResponseTime);
	rpc isPlaying(JukeboxRequestGeneral) returns (JukeboxResponseIsPlaying);
	rpc GetTitle(JukeboxRequestGeneral) returns (JukeboxResponseGetTitle);
	rpc ToggleFullscreen(JukeboxRequestGeneral) returns (Empty);
	
	rpc Blacklist(JukeboxRequestMovieID) returns (Empty);
	rpc ToggleWatched(JukeboxRequestMovieID) returns (Empty);	
	
	rpc ListSubtitles(JukeboxRequestListSubtitles) returns (JukeboxResponseListSubtitles);
	rpc SetSubtitle(JukeboxRequestSetSubtitle) returns (Empty);
	
	rpc Wakeup(JukeboxRequestGeneral) returns (Empty);
	rpc Suspend(JukeboxRequestGeneral) returns (Empty);		
}
 