<?xml version="1.0" encoding="ISO-8859-1"?>
<project>
    <!--  MAIN JUKEBOX BUILD FILE -->
    
	<buildnumber file="build.num" />
	 
	<include file="../global_properties.xml" />
	<property name="version.num" value="0.7.${build.number}" />
				
	<property name="main.dir" value="${jukebox.solution.dir}/se.qxx.jukebox" />
	<property name="main.src.dir" value="${main.dir}/src" />
	
	<property name="build.dir" value="${main.dir}/build" />
	<property name="classes.dir" value="${build.dir}/classes" />

	<property name="jar.file" value="jukebox-${version.num}.jar" />
		
	<property name="main-class" value="se.qxx.jukebox.Jukebox" />

	<property name="target.platform" value="debian_x86_lenny" />

	<target name="jaxb">
	    <exec executable="${jukebox.xjc.comm}">
	        <arg value="-d"/>
	        <arg value="${main.src.dir}"/>
	        <arg value="-p"/>
	        <arg value="se.qxx.jukebox.settings"/>
	        <arg value="${main.dir}/JukeboxSettings.xsd"/>
	    </exec>

	    <exec executable="${jukebox.xjc.comm}">
	        <arg value="-d"/>
	        <arg value="${main.src.dir}"/>
	        <arg value="-p"/>
	        <arg value="se.qxx.jukebox.settings.imdb"/>
	        <arg value="${main.dir}/imdb.xsd"/>
	    </exec>

	    <exec executable="${jukebox.xjc.comm}">
	        <arg value="-d"/>
	        <arg value="${main.src.dir}"/>
	        <arg value="-p"/>
	        <arg value="se.qxx.jukebox.subtitles"/>
	        <arg value="${main.dir}/subs.xsd"/>
	    </exec>
	    
	    <exec executable="${jukebox.xjc.comm}">
	        <arg value="-d"/>
	        <arg value="${main.src.dir}"/>
	        <arg value="-p"/>
	        <arg value="se.qxx.jukebox.settings.parser"/>
	        <arg value="${main.dir}/parser.xsd"/>
	    </exec>	    
	    	    	    		
	</target> 
	
	<target name="protoc">
	    <exec executable="${jukebox.protoc.comm}" dir="${jukebox.domain.src.dir}">
	        <arg value="--java_out=." />
	        <arg value="JukeboxDomain.proto" />
	    </exec>
	</target>
	
	<target name="clean">
		<delete dir="${build.dir}" includeemptydirs="true" />
	</target>
	
	<target name="compile">
		<mkdir dir="${classes.dir}" />
		<javac 
		    srcdir="${jukebox.domain.src.dir}" 
		    destdir="${classes.dir}" 
		    classpathref="jukebox.classpath" 
		    includeantruntime="true" 
		    debug="true"
	    />
		<javac 
		    srcdir="${jukebox.comm.src.dir}" 
		    destdir="${classes.dir}" 
		    classpathref="jukebox.classpath" 
		    includeantruntime="true" 
		    debug="true"
	    />
		<javac 
		    srcdir="${protodb.src.dir}" 
		    destdir="${classes.dir}" 
		    classpathref="jukebox.classpath" 
		    includeantruntime="true" 
		    debug="true"
	    />		
		<javac 
		    srcdir="${main.src.dir}" 
		    destdir="${classes.dir}" 
		    classpathref="jukebox.classpath" 
		    includeantruntime="true"
		    debug="true"	
	    />
	</target>
	
	<target name="jar">
		<jar destfile="${build.dir}/${jar.file}"
			basedir="${classes.dir}">
			<manifest>
				<attribute name="Main-Class" value="${main-class}" />		
    			<attribute name="Built-By" value="${user.name}"/>
        		<attribute name="Implementation-Version" value="${version.num}"/> 		
			</manifest>
 		</jar>
	</target>
	
	<target name="createscript">
	    <loadfile srcFile="script.template.txt"
	        property="script.template"> 
	        <filterchain>
	            <expandproperties />
	        </filterchain>
	    </loadfile>
	    
	    <echo file="${script.file}" message="${script.template}" />	    
	    
	</target>
	
	<target name="createrunscript">
	    <antcall target="createscript">
	        <param name="script.class" value="${main-class}" />
	        <param name="script.file" value="${build.dir}/run.sh" />
	    </antcall>
	    <echo file="${build.dir}/run.sh" append="true">echo $! > jukebox.pid</echo>

	    <antcall target="createscript">
	        <param name="script.class" value="se.qxx.jukebox.tests.TestMediaInfo" />
	        <param name="script.file" value="${build.dir}/testMediaInfo.sh" />
	    </antcall>

	    <antcall target="createscript">
	        <param name="script.class" value="se.qxx.jukebox.tests.TestNfoScanner" />
	        <param name="script.file" value="${build.dir}/testNfoScanner.sh" />
	    </antcall>

	    <antcall target="createscript">
	        <param name="script.class" value="se.qxx.jukebox.tests.TestImdbXmlReader" />
	        <param name="script.file" value="${build.dir}/testImdbXml.sh" />
	    </antcall>

	    <antcall target="createscript">
	        <param name="script.class" value="se.qxx.jukebox.tests.TestFilenameBuilder" />
	        <param name="script.file" value="${build.dir}/testFilenameBuilder.sh" />
	    </antcall>

	    <antcall target="createscript">
	        <param name="script.class" value="se.qxx.jukebox.tests.TestMovieBuilder" />
	        <param name="script.file" value="${build.dir}/testMovieBuilder.sh" />
	    </antcall>

	    <antcall target="createscript">
	        <param name="script.class" value="se.qxx.jukebox.tests.TestImdbFinder" />
	        <param name="script.file" value="${build.dir}/testImdbFinder.sh" />
	    </antcall>
	    
	    <antcall target="createscript">
	        <param name="script.class" value="se.qxx.jukebox.tests.TestParserBuilder" />
	        <param name="script.file" value="${build.dir}/testParserBuilder.sh" />
	    </antcall>	 
	    
	    <antcall target="createscript">
	        <param name="script.class" value="se.qxx.jukebox.tests.GenerateDatabase" />
	        <param name="script.file" value="${build.dir}/generateDatabase.sh" />
	    </antcall>		    

   	    <antcall target="createscript">
	        <param name="script.class" value="se.qxx.jukebox.tests.TestWebResult" />
	        <param name="script.file" value="${build.dir}/testWebResult.sh" />
	    </antcall>

   	    <antcall target="createscript">
	        <param name="script.class" value="se.qxx.jukebox.tests.TestSeriesFinder" />
	        <param name="script.file" value="${build.dir}/testSeriesFinder.sh" />
	    </antcall>
   	    	    	    	    	    	    	    	    	    	    	    	    
   	    <antcall target="createscript">
	        <param name="script.class" value="se.qxx.jukebox.tests.DeleteSeries" />
	        <param name="script.file" value="${build.dir}/deleteSeries.sh" />
	    </antcall>
   	    	    	    	    
		<fixcrlf srcdir="${build.dir}" includes="**/*.sh" eol="lf" eof="remove" />
						
		<copy file="${main.dir}/JukeboxSettings.xml" todir="${build.dir}" />
		<copy file="${main.dir}/imdb.xml" todir="${build.dir}" />
		<copy file="${main.dir}/parser.xml" todir="${build.dir}" />
			
		<copy todir="${build.dir}">
	    	<fileset dir="${main.dir}/native/${target.platform}">
	    	    <include name="*" />
	    	</fileset> 
	    </copy>
	</target> 
			
	<target name="cleanDB">
		
	</target>
	
	<target name="deployDB">  
		<scp 
			file="${main.dir}/jukebox.db" 
			todir="${jukebox.deploy.path}" 
			trust="true"
			username="${jukebox.deploy.user}" 
			keyfile="${jukebox.key.file}"
			passphrase="${jukebox.key.file.pass}"		
		/>		
	</target>
	
	<target name="deploy">
		<sshexec
	        trust="true"
	        keyfile="${jukebox.key.file}"
	        host="${jukebox.deploy.server}"
	        username="${jukebox.deploy.user}"
	        failonerror="false"
	        command="cd /c/media/Dev/src/jukebox;./stop.sh;" 
	        passphrase="${jukebox.key.file.pass}"
        />
	    	    
	    <sshexec
	        trust="true"
	        keyfile="${jukebox.key.file}"
	        host="${jukebox.deploy.server}"
	        username="${jukebox.deploy.user}"
	        failonerror="false" 
	        command="rm ${jukebox.deploy.server.path}/*.jar" 
	        passphrase="${jukebox.key.file.pass}"
        />
	    
	    <sshexec
	        trust="true"
	        keyfile="${jukebox.key.file}"
	        host="${jukebox.deploy.server}"
	        username="${jukebox.deploy.user}"
	        failonerror="false" 
	        command="rm ${jukebox.deploy.server.path}/*.log" 
	        passphrase="${jukebox.key.file.pass}"
        />
	    
	    
		<scp 
			todir="${jukebox.deploy.path}" 
			trust="true"
			username="${jukebox.deploy.user}"
			keyfile="${jukebox.key.file}"
			passphrase="${jukebox.key.file.pass}"
		>
			<fileset dir="${build.dir}">
				<include name="*" />
			</fileset>
		</scp>
		
		<!-- TODO: copy settings and apply release settings //-->
		<scp 
			file="${build.dir}/${jar.file}" 
			todir="${jukebox.deploy.path}" 
			trust="true"
			username="${jukebox.deploy.user}"
			keyfile="${jukebox.key.file}"
			passphrase="${jukebox.key.file.pass}"
		>
			<fileset dir="${jukebox.lib.dir}">
				<include name="*.jar"/>
			</fileset>
		</scp>
		
		
						
	</target>
	
	<target name="build" depends="clean,jaxb,protoc,compile,jar,createrunscript,deploy">
	</target>
</project>
