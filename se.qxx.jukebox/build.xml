<?xml version="1.0" encoding="ISO-8859-1"?>
<project>
    <!--  MAIN JUKEBOX BUILD FILE -->
    
	<buildnumber file="build.num" />
	
	<include file="../global_properties.xml" />
	<property name="version.num" value="0.0.${build.number}" />
				
	<property name="main.dir" value="${jukebox.solution.dir}/se.qxx.jukebox" />
	<property name="main.src.dir" value="${main.dir}/src" />
	
	<property name="build.dir" value="${main.dir}/build" />
	<property name="classes.dir" value="${build.dir}/classes" />

	<property name="jar.file" value="jukebox-${version.num}.jar" />
		
	<property name="main-class" value="se.qxx.jukebox.Jukebox" />

	<property name="target.platform" value="debian_x86_lenny" />
    
	<target name="jaxb">
	    <exec executable="${jukebox.jdk.dir}/bin/xjc.exe">
	        <arg value="-d"/>
	        <arg value="${main.src.dir}"/>
	        <arg value="-p"/>
	        <arg value="se.qxx.jukebox.settings"/>
	        <arg value="${main.dir}/JukeboxSettings.xsd"/>
	    </exec>

	    <exec executable="${jukebox.jdk.dir}/bin/xjc.exe">
	        <arg value="-d"/>
	        <arg value="${main.src.dir}"/>
	        <arg value="-p"/>
	        <arg value="se.qxx.jukebox.settings.imdb"/>
	        <arg value="${main.dir}/imdb.xsd"/>
	    </exec>
	    	    		
	</target> 
	
	<target name="protoc">
	    <exec executable="${jukebox.protoc.dir}/protoc.exe" dir="${jukebox.domain.src.dir}">
	        <arg value="--java_out=." />
	        <arg value="JukeboxDomain.proto" />
	    </exec>
	</target>
	
	<target name="clean">
		<delete dir="${build.dir}" includeemptydirs="true" />
	</target>
	
	<target name="compile">
		<mkdir dir="${classes.dir}" />
		<javac 
		    srcdir="${jukebox.domain.src.dir}" 
		    destdir="${classes.dir}" 
		    classpathref="jukebox.classpath" 
		    includeantruntime="true" 
		    debug="true"
	    />
		<javac 
		    srcdir="${main.src.dir}" 
		    destdir="${classes.dir}" 
		    classpathref="jukebox.classpath" 
		    includeantruntime="true"
		    debug="true"
	    />
	</target>
	
	<target name="jar">
		<jar destfile="${build.dir}/${jar.file}"
			basedir="${classes.dir}">
			<manifest>
				<attribute name="Main-Class" value="${main-class}" />		
    			<attribute name="Built-By" value="${user.name}"/>
        		<attribute name="Implementation-Version" value="${version.num}"/> 		
			</manifest>
 		</jar>
	</target>
	
	<target name="createrunscript">
		<echo file="${build.dir}/run.sh">#!/bin/sh
./stop.sh > /dev/null 2> /dev/null
java -cp 'jna.jar:${jar.file}:named-regexp.jar:protobuf-2.4.1.jar:sqlite-jdbc-3.7.2.jar:commons-lang3-3.1.jar' ${main-class} $* &amp;
echo $! > jukebox.pid
		</echo>
		
		<echo file="${build.dir}/testMediaInfo.sh">#!/bin/sh
if [ -n "$LD_LIBRARY_PATH" ]
then
   LD_LIBRARY_PATH=$PWD:${LD_LIBRARY_PATH}
else
   LD_LIBRARY_PATH=$PWD
fi
export LD_LIBRARY_PATH=$LD_LIBRARY_PATH
java -cp 'jna.jar:${jar.file}:named-regexp.jar:protobuf-2.4.1.jar:sqlite-jdbc-3.7.2.jar:commons-lang3-3.1.jar' se.qxx.jukebox.tests.TestMediaInfo $*
		</echo>
		
		<echo file="${build.dir}/testNfoScanner.sh">#!/bin/sh
if [ -n "$LD_LIBRARY_PATH" ]
then
   LD_LIBRARY_PATH=$PWD:${LD_LIBRARY_PATH}
else
   LD_LIBRARY_PATH=$PWD
fi
export LD_LIBRARY_PATH=$LD_LIBRARY_PATH
java -cp 'jna.jar:${jar.file}:named-regexp.jar:protobuf-2.4.1.jar:sqlite-jdbc-3.7.2.jar:commons-lang3-3.1.jar' se.qxx.jukebox.tests.TestNfoScanner $*
		</echo>

				<echo file="${build.dir}/testImdbXml.sh">#!/bin/sh
if [ -n "$LD_LIBRARY_PATH" ]
then
   LD_LIBRARY_PATH=$PWD:${LD_LIBRARY_PATH}
else
   LD_LIBRARY_PATH=$PWD
fi
export LD_LIBRARY_PATH=$LD_LIBRARY_PATH
java -cp 'jna.jar:${jar.file}:named-regexp.jar:protobuf-2.4.1.jar:sqlite-jdbc-3.7.2.jar:commons-lang3-3.1.jar' se.qxx.jukebox.tests.TestImdbXmlReader $*
		</echo>
						
		<copy file="${main.dir}/JukeboxSettings.xml" todir="${build.dir}" />
		<copy file="${main.dir}/imdb.xml" todir="${build.dir}" />
			
		<copy todir="${build.dir}">
	    	<fileset dir="${main.dir}/native/${target.platform}">
	    	    <include name="*" />
	    	</fileset> 
	    </copy>
	</target> 
			
	<target name="cleanDB">
		
	</target>
	
	<target name="deployDB">  
		<scp 
			file="${main.dir}/jukebox.db" 
			todir="${jukebox.deploy.path}" 
			trust="true" 
			keyfile="${jukebox.key.file}"			
		/>		
	</target>
	
	<target name="deploy">
		<sshexec
	        trust="true"
	        keyfile="${jukebox.key.file}"
	        host="${jukebox.deploy.server}"
	        username="${jukebox.deploy.user}"
	        failonerror="false"
	        command="cd /c/media/Dev/src/jukebox;./stop.sh;" />
	    	    
	    <sshexec
	        trust="true"
	        keyfile="${jukebox.key.file}"
	        host="${jukebox.deploy.server}"
	        username="${jukebox.deploy.user}"
	        failonerror="false" 
	        command="rm ${jukebox.deploy.server.path}/*.jar" />
	    
		<scp 
			todir="${jukebox.deploy.path}" 
			trust="true"
			keyfile="${jukebox.key.file}"
		>
			<fileset dir="${build.dir}">
				<include name="*" />
			</fileset>
		</scp>
		
		<!-- TODO: copy settings and apply release settings //-->
		<scp 
			file="${build.dir}/${jar.file}" 
			todir="${jukebox.deploy.path}" 
			trust="true"
			keyfile="${jukebox.key.file}"
		>
			<fileset dir="${jukebox.lib.dir}">
				<include name="*.jar"/>
			</fileset>
		</scp>
		
		
						
	</target>
	
	<target name="build" depends="clean,jaxb,protoc,compile,jar,createrunscript,deploy">
	</target>
</project>
